{"version":3,"sources":["webpack:///src/polyfills.ts","webpack:///node_modules/zone.js/dist/zone-evergreen.js"],"names":["ReplaceWithPolyfill","currentNode","parent","this","parentNode","i","arguments","length","removeChild","ownerDocument","createTextNode","insertBefore","previousSibling","replaceChild","Element","prototype","replaceWith","CharacterData","DocumentType","forEach","item","hasOwnProperty","Object","defineProperty","configurable","enumerable","writable","value","argArr","Array","slice","call","docFrag","document","createDocumentFragment","argItem","isNode","Node","appendChild","String","nextSibling","flat","depth","isNaN","Number","reduce","acc","cur","isArray","push","apply","global","performance","mark","name","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","Error","Zone","zoneSpec","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","patches","zone","current","_currentZoneFrame","_currentTask","fn","perfName","_api","key","getZoneWith","fork","callback","source","_callback","intercept","runGuarded","applyThis","applyArgs","invoke","error","handleError","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","err","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","returnTask","scheduleFn","scheduleMicroTask","isEmpty","counts","prev","next","change","options","_state","self","useG","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","toState","fromState1","fromState2","handleId","toString","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","setNativePromise","NativePromise","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","window","__load_patch","api","getOwnPropertyDescriptor","_uncaughtPromiseErrors","e","rejection","console","message","stack","uncaughtPromiseError","shift","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","makeResolver","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","TypeError","clearRejectedNoCatch","trace","currentTask","scheduleResolveOrReject","obj","constructor","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","executor","values","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","get","Symbol","toStringTag","onFinally","race","all","ZONE_AWARE_PROMISE","desc","set","NewNativePromise","symbolThenPatched","Ctor","proto","prop","originalThen","fetch","resultPromise","ctor","Promise","ObjectGetPrototypeOf","getPrototypeOf","create","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","isPropertyWritable","propertyDesc","isWebWorker","WorkerGlobalScope","process","isBrowser","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","result","errorEvent","filename","lineno","colno","preventDefault","patchProperty","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","indexOf","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","once","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","eventNameToString","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","checkIsPassive","capture","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","blackListedEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","falseEventName","trueEventName","symbolCapture","constructorName","targetSource","scheduleEventTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","Event","targetName","method","callbacks","nativeDelegate","opts","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","concat","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","propertyDescriptorPatch","supportsWebSocket","WebSocket","ignoreErrorProperties","Document","HTMLElement","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","TRUE_STR","FALSE_STR","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","eventTargetPatch","EVENT_TARGET","legacyPatch","blockingMethods","s","customElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","geolocation","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"mappings":"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","file":"x","sourcesContent":["/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags.ts';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n// Add replaceWith() to Microsoft Edge and IE10+\nfunction ReplaceWithPolyfill() {\n    'use-strict'; // For safari, and IE > 10\n    var parent = this.parentNode, i = arguments.length, currentNode;\n    if (!parent) return;\n    if (!i) // if there are no arguments\n        parent.removeChild(this);\n    while (i--) { // i-- decrements i and returns the value of i before the decrement\n        currentNode = arguments[i];\n        if (typeof currentNode !== 'object') {\n            currentNode = this.ownerDocument.createTextNode(currentNode);\n        } else if (currentNode.parentNode) {\n            currentNode.parentNode.removeChild(currentNode);\n        }\n        // the value of \"i\" below is after the decrement\n        if (!i) // if currentNode is the first argument (currentNode === arguments[0])\n            parent.replaceChild(currentNode, this);\n        else // if currentNode isn't the first\n            parent.insertBefore(currentNode, this.previousSibling);\n    }\n}\nif (!Element.prototype.replaceWith)\n    Element.prototype.replaceWith = ReplaceWithPolyfill;\nif (!CharacterData.prototype.replaceWith)\n    CharacterData.prototype.replaceWith = ReplaceWithPolyfill;\nif (!DocumentType.prototype.replaceWith)\n    DocumentType.prototype.replaceWith = ReplaceWithPolyfill;\n\n// Add after() to Microsoft Edge and IE9+\n(function (arr) {\n    arr.forEach(function (item) {\n        if (item.hasOwnProperty('after')) {\n            return;\n        }\n        Object.defineProperty(item, 'after', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: function after() {\n                var argArr = Array.prototype.slice.call(arguments),\n                    docFrag = document.createDocumentFragment();\n\n                argArr.forEach(function (argItem) {\n                    var isNode = argItem instanceof Node;\n                    docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\n                });\n\n                this.parentNode.insertBefore(docFrag, this.nextSibling);\n            }\n        });\n    });\n})([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\n\n// Add flat() to Microsoft Edge\nif (!(Array.prototype as any).flat) {\n    Object.defineProperty(Array.prototype, 'flat', {\n        configurable: true,\n        writable: true,\n        value: function flat() {\n            var depth = isNaN(arguments[0]) ? 1 : Number(arguments[0]);\n            return depth ? Array.prototype.reduce.call(this, function (acc, cur) {\n                if (Array.isArray(cur)) {\n                    acc.push.apply(acc, flat.call(cur, depth - 1));\n                } else {\n                    acc.push(cur);\n                }\n                return acc;\n            }, []) : Array.prototype.slice.call(this);\n        },\n    });\n}","/**\n * @license Angular v0.10.2\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n}(function () { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const Zone$1 = (function (global) {\n        const performance = global['performance'];\n        function mark(name) { performance && performance['mark'] && performance['mark'](name); }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        // Initialize before it's accessed below.\n        // __Zone_symbol_prefix global can be used to override the default zone\n        // symbol prefix with a custom one if needed.\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        function __symbol__(name) { return symbolPrefix + name; }\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone']) {\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\n            // some other lib also registered a global object named Zone), we may need\n            // to throw an error, but sometimes user may not want this error.\n            // For example,\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\n            // and the 1st time user load page1 and page2, everything work fine,\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\n            // so we add a flag to let user choose whether to throw this error or not.\n            // By default, if existing Zone is from zone.js, we will not throw the error.\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n                throw new Error('Zone already loaded.');\n            }\n            else {\n                return global['Zone'];\n            }\n        }\n        class Zone {\n            constructor(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = zoneSpec && zoneSpec.properties || {};\n                this._zoneDelegate =\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            static assertZonePatched() {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            }\n            static get root() {\n                let zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            }\n            static get current() { return _currentZoneFrame.zone; }\n            static get currentTask() { return _currentTask; }\n            // tslint:disable-next-line:require-internal-with-underscore\n            static __load_patch(name, fn) {\n                if (patches.hasOwnProperty(name)) {\n                    if (checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    const perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, Zone, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            }\n            get parent() { return this._parent; }\n            get name() { return this._name; }\n            get(key) {\n                const zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            }\n            getZoneWith(key) {\n                let current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            }\n            fork(zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            }\n            wrap(callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\n                const zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            }\n            run(callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runGuarded(callback, applyThis = null, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runTask(task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                }\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                    return;\n                }\n                const reEntryGuard = task.state != running;\n                reEntryGuard && task._transitionTo(running, scheduled);\n                task.runCount++;\n                const previousTask = _currentTask;\n                _currentTask = task;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    if (task.state !== notScheduled && task.state !== unknown) {\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                            reEntryGuard && task._transitionTo(scheduled, running);\n                        }\n                        else {\n                            task.runCount = 0;\n                            this._updateTaskCount(task, -1);\n                            reEntryGuard &&\n                                task._transitionTo(notScheduled, running, notScheduled);\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            }\n            scheduleTask(task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    let newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                const zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            }\n            scheduleMicroTask(source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            }\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            }\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            }\n            cancelTask(task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = 0;\n                return task;\n            }\n            _updateTaskCount(task, count) {\n                const zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (let i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        Zone.__symbol__ = __symbol__;\n        const DELEGATE_ZS = {\n            name: '',\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n        };\n        class ZoneDelegate {\n            constructor(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n                this.zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS =\n                    zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt = zoneSpec &&\n                    (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this.zone;\n                    }\n                }\n            }\n            fork(targetZone, zoneSpec) {\n                return this._forkZS ?\n                    this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                    new Zone(targetZone, zoneSpec);\n            }\n            intercept(targetZone, callback, source) {\n                return this._interceptZS ?\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                    callback;\n            }\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS ?\n                    this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                    callback.apply(applyThis, applyArgs);\n            }\n            handleError(targetZone, error) {\n                return this._handleErrorZS ?\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                    true;\n            }\n            scheduleTask(targetZone, task) {\n                let returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    // clang-format off\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    // clang-format on\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            }\n            invokeTask(targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            cancelTask(targetZone, task) {\n                let value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            }\n            hasTask(targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _updateTaskCount(type, count) {\n                const counts = this._taskCounts;\n                const prev = counts[type];\n                const next = counts[type] = prev + count;\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    const isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type\n                    };\n                    this.hasTask(this.zone, isEmpty);\n                }\n            }\n        }\n        class ZoneTask {\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zone = null;\n                this.runCount = 0;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zoneDelegates = null;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                const self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            static invokeTask(task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            }\n            get zone() { return this._zone; }\n            get state() { return this._state; }\n            cancelScheduleRequest() { this._transitionTo(notScheduled, scheduling); }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _transitionTo(toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n                }\n            }\n            toString() {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            }\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            toJSON() {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount\n                };\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const symbolSetTimeout = __symbol__('setTimeout');\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        let _microTaskQueue = [];\n        let _isDrainingMicrotaskQueue = false;\n        let nativeMicroTaskQueuePromise;\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                if (!nativeMicroTaskQueuePromise) {\n                    if (global[symbolPromise]) {\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                    }\n                }\n                if (nativeMicroTaskQueuePromise) {\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                    if (!nativeThen) {\n                        // native Promise is not patchable, we need to use `then` directly\n                        // issue 1078\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\n                    }\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n                }\n                else {\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\n                }\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    const queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (let i = 0; i < queue.length; i++) {\n                        const task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const NO_ZONE = { name: 'NO ZONE' };\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        const patches = {};\n        const _api = {\n            symbol: __symbol__,\n            currentZoneFrame: () => _currentZoneFrame,\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n            patchEventTarget: () => [],\n            patchOnProperties: noop,\n            patchMethod: () => noop,\n            bindArguments: () => [],\n            patchThen: () => noop,\n            patchMacroTask: () => noop,\n            setNativePromise: (NativePromise) => {\n                // sometimes NativePromise.resolve static function\n                // is not ready yet, (such as core-js/es6.promise)\n                // so we need to check here.\n                if (NativePromise && typeof NativePromise.resolve === 'function') {\n                    nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n                }\n            },\n            patchEventPrototype: () => noop,\n            isIEOrEdge: () => false,\n            getGlobalObjects: () => undefined,\n            ObjectDefineProperty: () => noop,\n            ObjectGetOwnPropertyDescriptor: () => undefined,\n            ObjectCreate: () => undefined,\n            ArraySlice: () => [],\n            patchClass: () => noop,\n            wrapWithCurrentZone: () => noop,\n            filterProperties: () => [],\n            attachOriginToPatched: () => noop,\n            _redefineProperty: () => noop,\n            patchCallbacks: () => noop\n        };\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n        let _currentTask = null;\n        let _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return global['Zone'] = Zone;\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                while (_uncaughtPromiseErrors.length) {\n                    const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                    try {\n                        uncaughtPromiseError.zone.runGuarded(() => { throw uncaughtPromiseError; });\n                    }\n                    catch (error) {\n                        handleUnhandledRejection(error);\n                    }\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) {\n            }\n        }\n        function isThenable(value) { return value && value.then; }\n        function forwardResolution(value) { return value; }\n        function forwardRejection(rejection) { return ZoneAwarePromise.reject(rejection); }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        try {\n                            // try to print more readable error log\n                            throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            const error = err;\n                            error.rejection = value;\n                            error.promise = promise;\n                            error.zone = Zone.current;\n                            error.task = Zone.currentTask;\n                            _uncaughtPromiseErrors.push(error);\n                            api.scheduleMicroTask(); // to make sure that it is running\n                        }\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) {\n                }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState ?\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                        [] :\n                        [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        class ZoneAwarePromise {\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            static toString() { return ZONE_AWARE_PROMISE_TO_STRING; }\n            static resolve(value) {\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) { resolve(value); }\n                function onReject(error) { reject(error); }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) { return ZoneAwarePromise.allWithCallback(values); }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err })\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            get [Symbol.toStringTag]() { return 'Promise'; }\n            then(onFulfilled, onRejected) {\n                const chainPromise = new this.constructor(null);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                const chainPromise = new this.constructor(null);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = global[symbolPromise] = global['Promise'];\n        const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n        let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n        if (!desc || desc.configurable) {\n            desc && delete desc.writable;\n            desc && delete desc.value;\n            if (!desc) {\n                desc = { configurable: true, enumerable: true };\n            }\n            desc.get = function () {\n                // if we already set ZoneAwarePromise, use patched one\n                // otherwise return native one.\n                return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n            };\n            desc.set = function (NewNativePromise) {\n                if (NewNativePromise === ZoneAwarePromise) {\n                    // if the NewNativePromise is ZoneAwarePromise\n                    // save to global\n                    global[ZONE_AWARE_PROMISE] = NewNativePromise;\n                }\n                else {\n                    // if the NewNativePromise is not ZoneAwarePromise\n                    // for example: after load zone.js, some library just\n                    // set es6-promise to global, if we set it to global\n                    // directly, assertZonePatched will fail and angular\n                    // will not loaded, so we just set the NewNativePromise\n                    // to global[symbolPromise], so the result is just like\n                    // we load ES6 Promise before zone.js\n                    global[symbolPromise] = NewNativePromise;\n                    if (!NewNativePromise.prototype[symbolThen]) {\n                        patchThen(NewNativePromise);\n                    }\n                    api.setNativePromise(NewNativePromise);\n                }\n            };\n            ObjectDefineProperty(global, 'Promise', desc);\n        }\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => { originalThen.call(this, resolve, reject); });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function () {\n                let resultPromise = fn.apply(this, arguments);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            const fetch = global['fetch'];\n            if (typeof fetch == 'function') {\n                global[api.symbol('fetch')] = fetch;\n                global['fetch'] = zoneify(fetch);\n            }\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    /// <reference types=\"node\"/>\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    const ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    const ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    const ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    const TRUE_STR = 'true';\n    /** false string const */\n    const FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    const zoneSymbol = Zone.__symbol__;\n    const isWindowExists = typeof window !== 'undefined';\n    const internalWindow = isWindowExists ? window : undefined;\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\n    const NULL_ON_PROP_VALUE = [null];\n    function bindArguments(args, source) {\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        const source = prototype.constructor['name'];\n        for (let i = 0; i < fnNames.length; i++) {\n            const name = fnNames[i];\n            const delegate = prototype[name];\n            if (delegate) {\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    continue;\n                }\n                prototype[name] = ((delegate) => {\n                    const patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]');\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isMix = typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    const zoneSymbolEventNames = {};\n    const wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        const target = this || event.target || _global;\n        const listener = target[eventNameSymbol];\n        let result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signiture\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            const errorEvent = event;\n            result = listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        const originalDescGet = desc.get;\n        const originalDescSet = desc.set;\n        // substr(2) cuz 'onclick' -> 'click', etc\n        const eventName = prop.substr(2);\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            let previousValue = target[eventNameSymbol];\n            if (previousValue) {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            if (originalDescSet) {\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n            }\n            if (typeof newValue === 'function') {\n                target[eventNameSymbol] = newValue;\n                target.addEventListener(eventName, wrapFn, false);\n            }\n            else {\n                target[eventNameSymbol] = null;\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            const listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                let value = originalDescGet && originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (let i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            const onProperties = [];\n            for (const prop in obj) {\n                if (prop.substr(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (let j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    const originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        const OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            const a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        const instance = new OriginalClass(function () { });\n        let prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () { return this[originalInstanceKey][prop]; }\n                    });\n                }\n            }(prop));\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function copySymbolProperties(src, dest) {\n        if (typeof Object.getOwnPropertySymbols !== 'function') {\n            return;\n        }\n        const symbols = Object.getOwnPropertySymbols(src);\n        symbols.forEach((symbol) => {\n            const desc = Object.getOwnPropertyDescriptor(src, symbol);\n            Object.defineProperty(dest, symbol, {\n                get: function () { return src[symbol]; },\n                set: function (value) {\n                    if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                        // if src[symbol] is not writable or not have a setter, just return\n                        return;\n                    }\n                    src[symbol] = value;\n                },\n                enumerable: desc ? desc.enumerable : true,\n                configurable: desc ? desc.configurable : true\n            });\n        });\n    }\n    let shouldCopySymbolProperties = false;\n    function patchMethod(target, name, patchFn) {\n        let proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        const delegateName = zoneSymbol(name);\n        let delegate = null;\n        if (proto && !(delegate = proto[delegateName])) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                const patchDelegate = patchFn(delegate, delegateName, name);\n                proto[name] = function () { return patchDelegate(this, arguments); };\n                attachOriginToPatched(proto[name], delegate);\n                if (shouldCopySymbolProperties) {\n                    copySymbolProperties(delegate, proto[name]);\n                }\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        let setNative = null;\n        function scheduleTask(task) {\n            const data = task.data;\n            data.args[data.cbIdx] = function () { task.invoke.apply(this, arguments); };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n            const meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    let isDetectedIEOrEdge = false;\n    let ieOrEdge = false;\n    function isIE() {\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) {\n        }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) {\n        }\n        return ieOrEdge;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    let passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            const options = Object.defineProperty({}, 'passive', { get: function () { passiveSupported = true; } });\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true\n    };\n    const zoneSymbolEventNames$1 = {};\n    const globalSources = {};\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function patchEventTarget(_global, apis, patchOptions) {\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        const PREPEND_EVENT_LISTENER = 'prependListener';\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        const invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            const delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = (event) => delegate.handleEvent(event);\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            task.invoke(task, target, [event]);\n            const options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        const globalZoneAwareCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        const globalZoneAwareCaptureCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            let useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            const validateHandler = patchOptions && patchOptions.vh;\n            let checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            let returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            let proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // a shared global taskData to pass data for scheduleEventTask\n            // so we do not need to create a new object just for pass some data\n            const taskData = {};\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER];\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER];\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n            let nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            function checkIsPassive(task) {\n                if (!passiveSupported && typeof taskData.options !== 'boolean' &&\n                    typeof taskData.options !== 'undefined' && taskData.options !== null) {\n                    // options is a non-null non-undefined object\n                    // passive is not supported\n                    // don't pass options as object\n                    // just pass capture as a boolean\n                    task.options = !!taskData.options.capture;\n                    taskData.options = task.options;\n                }\n            }\n            const customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            const customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                    let symbolEventName;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            const existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            const customScheduleNonGlobal = function (task) {\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\n                const typeOfDelegate = typeof delegate;\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n            };\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n                return function () {\n                    const target = this || _global;\n                    let eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    let delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    let isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    const options = arguments[2];\n                    if (blackListedEvents) {\n                        // check black list\n                        for (let i = 0; i < blackListedEvents.length; i++) {\n                            if (eventName === blackListedEvents[i]) {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                    let capture;\n                    let once = false;\n                    if (options === undefined) {\n                        capture = false;\n                    }\n                    else if (options === true) {\n                        capture = true;\n                    }\n                    else if (options === false) {\n                        capture = false;\n                    }\n                    else {\n                        capture = options ? !!options.capture : false;\n                        once = options ? !!options.once : false;\n                    }\n                    const zone = Zone.current;\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    let symbolEventName;\n                    if (!symbolEventNames) {\n                        // the code is duplicate, but I just want to get some better performance\n                        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n                        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n                        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n                        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n                        zoneSymbolEventNames$1[eventName] = {};\n                        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n                        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n                        symbolEventName = capture ? symbolCapture : symbol;\n                    }\n                    else {\n                        symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    }\n                    let existingTasks = target[symbolEventName];\n                    let isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (let i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    let source;\n                    const constructorName = target.constructor['name'];\n                    const targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source = constructorName + addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // do not create a new object as task.data to pass those things\n                    // just use the global shared one\n                    taskData.options = options;\n                    if (once) {\n                        // if addEventListener with once options, we don't pass it to\n                        // native addEventListener, instead we keep the once setting\n                        // and handle ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const options = arguments[2];\n                let capture;\n                if (options === undefined) {\n                    capture = false;\n                }\n                else if (options === true) {\n                    capture = true;\n                }\n                else if (options === false) {\n                    capture = false;\n                }\n                else {\n                    capture = options ? !!options.capture : false;\n                }\n                const delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates all removed\n                                if (typeof eventName === 'string') {\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // issue 930, didn't find the event name or callback\n                // from zone kept existingTasks, the callback maybe\n                // added outside of zone, we need to call native removeEventListener\n                // to try to remove it.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const listeners = [];\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (let i = 0; i < tasks.length; i++) {\n                    const task = tasks[i];\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (!eventName) {\n                    const keys = Object.keys(target);\n                    for (let i = 0; i < keys.length; i++) {\n                        const prop = keys[i];\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        let evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (symbolEventNames) {\n                        const symbolEventName = symbolEventNames[FALSE_STR];\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        const tasks = target[symbolEventName];\n                        const captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            const removeTasks = tasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            const removeTasks = captureTasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        let results = [];\n        for (let i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    function patchEventPrototype(global, api) {\n        const Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        const symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        const nativeDelegate = target[symbol] = target[method];\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    const source = `${targetName}.${method}::` + callback;\n                    const prototype = opts.prototype;\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const globalEventHandlersEventNames = [\n        'abort',\n        'animationcancel',\n        'animationend',\n        'animationiteration',\n        'auxclick',\n        'beforeinput',\n        'blur',\n        'cancel',\n        'canplay',\n        'canplaythrough',\n        'change',\n        'compositionstart',\n        'compositionupdate',\n        'compositionend',\n        'cuechange',\n        'click',\n        'close',\n        'contextmenu',\n        'curechange',\n        'dblclick',\n        'drag',\n        'dragend',\n        'dragenter',\n        'dragexit',\n        'dragleave',\n        'dragover',\n        'drop',\n        'durationchange',\n        'emptied',\n        'ended',\n        'error',\n        'focus',\n        'focusin',\n        'focusout',\n        'gotpointercapture',\n        'input',\n        'invalid',\n        'keydown',\n        'keypress',\n        'keyup',\n        'load',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'lostpointercapture',\n        'mousedown',\n        'mouseenter',\n        'mouseleave',\n        'mousemove',\n        'mouseout',\n        'mouseover',\n        'mouseup',\n        'mousewheel',\n        'orientationchange',\n        'pause',\n        'play',\n        'playing',\n        'pointercancel',\n        'pointerdown',\n        'pointerenter',\n        'pointerleave',\n        'pointerlockchange',\n        'mozpointerlockchange',\n        'webkitpointerlockerchange',\n        'pointerlockerror',\n        'mozpointerlockerror',\n        'webkitpointerlockerror',\n        'pointermove',\n        'pointout',\n        'pointerover',\n        'pointerup',\n        'progress',\n        'ratechange',\n        'reset',\n        'resize',\n        'scroll',\n        'seeked',\n        'seeking',\n        'select',\n        'selectionchange',\n        'selectstart',\n        'show',\n        'sort',\n        'stalled',\n        'submit',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'touchcancel',\n        'touchmove',\n        'touchstart',\n        'touchend',\n        'transitioncancel',\n        'transitionend',\n        'waiting',\n        'wheel'\n    ];\n    const documentEventNames = [\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n        'visibilitychange', 'resume'\n    ];\n    const windowEventNames = [\n        'absolutedeviceorientation',\n        'afterinput',\n        'afterprint',\n        'appinstalled',\n        'beforeinstallprompt',\n        'beforeprint',\n        'beforeunload',\n        'devicelight',\n        'devicemotion',\n        'deviceorientation',\n        'deviceorientationabsolute',\n        'deviceproximity',\n        'hashchange',\n        'languagechange',\n        'message',\n        'mozbeforepaint',\n        'offline',\n        'online',\n        'paint',\n        'pageshow',\n        'pagehide',\n        'popstate',\n        'rejectionhandled',\n        'storage',\n        'unhandledrejection',\n        'unload',\n        'userproximity',\n        'vrdisplyconnected',\n        'vrdisplaydisconnected',\n        'vrdisplaypresentchange'\n    ];\n    const htmlElementEventNames = [\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n    ];\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n    const ieElementEventNames = [\n        'activate',\n        'afterupdate',\n        'ariarequest',\n        'beforeactivate',\n        'beforedeactivate',\n        'beforeeditfocus',\n        'beforeupdate',\n        'cellchange',\n        'controlselect',\n        'dataavailable',\n        'datasetchanged',\n        'datasetcomplete',\n        'errorupdate',\n        'filterchange',\n        'layoutcomplete',\n        'losecapture',\n        'move',\n        'moveend',\n        'movestart',\n        'propertychange',\n        'resizeend',\n        'resizestart',\n        'rowenter',\n        'rowexit',\n        'rowsdelete',\n        'rowsinserted',\n        'command',\n        'compassneedscalibration',\n        'deactivate',\n        'help',\n        'mscontentzoom',\n        'msmanipulationstatechanged',\n        'msgesturechange',\n        'msgesturedoubletap',\n        'msgestureend',\n        'msgesturehold',\n        'msgesturestart',\n        'msgesturetap',\n        'msgotpointercapture',\n        'msinertiastart',\n        'mslostpointercapture',\n        'mspointercancel',\n        'mspointerdown',\n        'mspointerenter',\n        'mspointerhover',\n        'mspointerleave',\n        'mspointermove',\n        'mspointerout',\n        'mspointerover',\n        'mspointerup',\n        'pointerout',\n        'mssitemodejumplistitemremoved',\n        'msthumbnailclick',\n        'stop',\n        'storagecommit'\n    ];\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\n    const detailEventNames = ['toggle'];\n    const frameEventNames = ['load'];\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\n    const XMLHttpRequestEventNames = [\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n        'readystatechange'\n    ];\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\n    const workerEventNames = ['error', 'message'];\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        const tip = ignoreProperties.filter(ip => ip.target === target);\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        const targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            const internalWindow = window;\n            const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement) {\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n            }\n            const Worker = internalWindow['Worker'];\n            if (Worker) {\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        const XMLHttpRequest = _global['XMLHttpRequest'];\n        if (XMLHttpRequest) {\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('util', (global, Zone, api) => {\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n        // define which events will not be patched by `Zone.js`.\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n        // the name consistent with angular repo.\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n        // backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({ globalSources, zoneSymbolEventNames: zoneSymbolEventNames$1, eventNames, isBrowser, isMix, isNode, TRUE_STR,\n            FALSE_STR, ZONE_SYMBOL_PREFIX, ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR });\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        let setNative = null;\n        let clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        const tasksByHandleId = {};\n        function scheduleTask(task) {\n            const data = task.data;\n            function timer() {\n                try {\n                    task.invoke.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    if (!(task.data && task.data.isPeriodic)) {\n                        if (typeof data.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[data.handleId];\n                        }\n                        else if (data.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            data.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            }\n            data.args[0] = timer;\n            data.handleId = setNative.apply(window, data.args);\n            return task;\n        }\n        function clearTask(task) { return clearNative(task.data.handleId); }\n        setNative =\n            patchMethod(window, setName, (delegate) => function (self, args) {\n                if (typeof args[0] === 'function') {\n                    const options = {\n                        isPeriodic: nameSuffix === 'Interval',\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                            undefined,\n                        args: args\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                    if (!task) {\n                        return task;\n                    }\n                    // Node.js must additionally support the ref and unref functions.\n                    const handle = task.data.handleId;\n                    if (typeof handle === 'number') {\n                        // for non nodejs env, we save handleId: task\n                        // mapping in local cache for clearTimeout\n                        tasksByHandleId[handle] = task;\n                    }\n                    else if (handle) {\n                        // for nodejs env, we save task\n                        // reference in timerId Object for clearTimeout\n                        handle[taskSymbol] = task;\n                    }\n                    // check whether handle is null, because some polyfill or browser\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                        typeof handle.unref === 'function') {\n                        task.ref = handle.ref.bind(handle);\n                        task.unref = handle.unref.bind(handle);\n                    }\n                    if (typeof handle === 'number' || handle) {\n                        return handle;\n                    }\n                    return task;\n                }\n                else {\n                    // cause an error by calling it directly.\n                    return delegate.apply(window, args);\n                }\n            });\n        clearNative =\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\n                const id = args[0];\n                let task;\n                if (typeof id === 'number') {\n                    // non nodejs env.\n                    task = tasksByHandleId[id];\n                }\n                else {\n                    // nodejs env.\n                    task = id && id[taskSymbol];\n                    // other environments.\n                    if (!task) {\n                        task = id;\n                    }\n                }\n                if (task && typeof task.type === 'string') {\n                    if (task.state !== 'notScheduled' &&\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                        if (typeof id === 'number') {\n                            delete tasksByHandleId[id];\n                        }\n                        else if (id) {\n                            id[taskSymbol] = null;\n                        }\n                        // Do not cancel already canceled functions\n                        task.zone.cancelTask(task);\n                    }\n                }\n                else {\n                    // cause an error by calling it directly.\n                    delegate.apply(window, args);\n                }\n            });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCustomElements(_global, api) {\n        const { isBrowser, isMix } = api.getGlobalObjects();\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (let i = 0; i < eventNames.length; i++) {\n            const eventName = eventNames[i];\n            const falseEventName = eventName + FALSE_STR;\n            const trueEventName = eventName + TRUE_STR;\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        const EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n        }\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n        patchClass('IntersectionObserver');\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) { return target[XHR_TASK]; }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                };\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach(eventTask => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n}));\n"]}