{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/_classes/async-data-source.ts","webpack:///src/app/_classes/async-processor.ts","webpack:///src/app/_classes/history.ts","webpack:///src/app/_classes/manager.ts","webpack:///src/app/_classes/utility.ts","webpack:///src/app/_common/action-icon/action-icon.component.ts","webpack:///src/app/_common/autofocus/autofocus.directive.ts","webpack:///src/app/_common/copy-box/copy-box.component.ts","webpack:///src/app/_common/copy-box/copy-box.component.html","webpack:///src/app/_common/download/download.component.ts","webpack:///src/app/_common/form-error/form-error.component.ts","webpack:///src/app/_common/guarded-action/guarded-action.component.ts","webpack:///src/app/_common/guarded-action/guarded-action.component.html","webpack:///src/app/_common/icon/icon.component.ts","webpack:///src/app/_common/inline-svg/inline-svg.directive.ts","webpack:///src/app/_common/inline-svg/svg-cache.service.ts","webpack:///src/app/_common/loading-indicator/loading-indicator.component.ts","webpack:///src/app/_common/popover/popover.component.ts","webpack:///src/app/_common/redirect/redirect.component.ts","webpack:///src/app/_common/safe-html/safe-html.pipe.ts","webpack:///src/app/_common/selection-box/selection-box.component.ts","webpack:///src/app/_common/selection-box/selection-box.component.html","webpack:///src/app/_common/set-title/set-title.directive.ts","webpack:///src/app/_common/video-player/video-player.component.ts","webpack:///src/app/_services/app/app.api.ts","webpack:///src/app/_services/app/app.service.ts","webpack:///src/app/_services/app/managers/feed.manager.ts","webpack:///src/app/_services/app/managers/organization.manager.ts","webpack:///src/app/_services/app/managers/series.manager.ts","webpack:///src/app/_services/app/managers/speaker.manager.ts","webpack:///src/app/_services/app/managers/topic.manager.ts","webpack:///src/app/_services/app/managers/user.manager.ts","webpack:///src/app/_services/auth-guard.ts","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/_services/clipboard.service.ts","webpack:///src/app/_services/download.service.ts","webpack:///src/app/_services/layout.service.ts","webpack:///src/app/_services/loading-guard.ts","webpack:///src/app/_services/state.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/base/base.component.ts","webpack:///src/app/base/base.component.html","webpack:///src/app/feed/feed-detail/feed-detail.component.ts","webpack:///src/app/feed/feed-detail/feed-detail.component.html","webpack:///src/app/feed/feed-list/feed-list.component.ts","webpack:///src/app/feed/feed-list/feed-list.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/media/media-detail/media-detail.component.ts","webpack:///src/app/media/media-detail/media-detail.component.html","webpack:///src/app/media/media-form/media-form.component.ts","webpack:///src/app/media/media-form/media-form.component.html","webpack:///src/app/media/media-list/media-list.component.ts","webpack:///src/app/media/media-list/media-list.component.html","webpack:///src/app/media/media-upload/media-upload.component.ts","webpack:///src/app/media/media-upload/media-upload.component.html","webpack:///src/app/media/reusable-media-list/reusable-media-list.component.ts","webpack:///src/app/media/reusable-media-list/reusable-media-list.component.html","webpack:///src/app/organization/organization-detail/organization-detail.component.ts","webpack:///src/app/organization/organization-detail/organization-detail.component.html","webpack:///src/app/routing.module.ts","webpack:///src/app/series/series-detail/series-detail.component.ts","webpack:///src/app/series/series-detail/series-detail.component.html","webpack:///src/app/series/series-list/series-list.component.ts","webpack:///src/app/series/series-list/series-list.component.html","webpack:///src/app/settings/settings.component.ts","webpack:///src/app/settings/settings.component.html","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/app/sign-in/sign-in/sign-in.component.ts","webpack:///src/app/sign-in/sign-in/sign-in.component.html","webpack:///src/app/speaker/speaker-detail/speaker-detail.component.ts","webpack:///src/app/speaker/speaker-detail/speaker-detail.component.html","webpack:///src/app/speaker/speaker-list/speaker-list.component.ts","webpack:///src/app/speaker/speaker-list/speaker-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AsyncDataSource","search","callback","undefined","processor","maxRetryCount","RETRY_NO_LIMIT","process","key","progress","data","result","SUCCESS","FAILED","processKeys","cancel","AsyncProcessorResult","AsyncProcessor","enabled","working","retryDelay","complete","processing","pending","retryCount","pointer","next","length","pipe","subscribe","completion","error","success","CANCELED","FAILED_WILL_RETRY","setTimeout","HISTORY_ENTRY_ID","HistoryEntry","url","variables","History","router","history","index","entrySubject","changeEmitted$","asObservable","events","event","console","log","navigatedTo","_instance","previous","indexOf","entry","push","canGoBack","navigateByUrl","currentHistoryEntry","canGoForward","NOT_ENABLED","Manager","refreshInterval","lastRefreshTime","update$","force","Date","now","currentSubject","nextSubject","source","fetchData","setData","refresh","Utility","ArraysAreEqual","a","b","A","B","find","o","RemoveDuplicatesFromArray","array","disallowed","duplicates","forEach","filter","StatusToText","status","StatusToClass","StatusToIcon","ActionIconComponent","active","disabled","selector","template","styleUrls","AutofocusDirective","el","_autofocus","nativeElement","focus","condition","CopyBoxComponent","clipboard","notifications","write","text","timeOut","onCopy","templateUrl","DownloadComponent","download","downloadComponent","styles","static","FormErrorComponent","checkDirty","messages","control","errors","touched","dirty","Object","map","GuardedActionComponent","host","question","additional","action","align","confirmed","$event","popover","target","toggle","actionButton","IconComponent","size","svgResourceUrl","svg","changes","InlineSVGDirective","_document","_el","_svgCache","replaceContents","prepend","cacheSVG","forceEvalStyles","evalScripts","onSVGInserted","onSVGFailed","_supportsSVG","_ranScripts","_insertSVG","_checkSVGSupport","_fail","inlineSVG","charAt","elSvg","createElementNS","elSvgUse","setAttributeNS","appendChild","_insertEl","emit","absUrl","_getAbsoluteUrl","_absUrl","getSVG","removeSVGAttributes","_removeAttributes","_evalScripts","styleTags","querySelectorAll","Array","prototype","call","tag","textContent","err","attrs","innerEls","getElementsByTagName","i","elAttrs","attributes","j","name","toLowerCase","removeAttribute","innerHTML","insertBefore","firstChild","scripts","scriptsToEval","script","scriptType","getAttribute","innerText","removeChild","Function","window","SVGRect","msg","fallbackImgUrl","elImg","document","createElement","src","providers","SVGCache","http","_cache","Map","_inProgressReqs","cache","has","_cloneSVG","get","responseType","delete","svgText","svgEl","_svgElementFromString","set","str","div","querySelector","cloneNode","LoadingIndicatorComponent","_VisiblePopoverCount","VisiblePopoverCount","HideAllPopovers","dispatchEvent","CustomEvent","PopoverComponent","renderer","xOffset","yOffset","onClose","visible$","subscriptions","unsubscribe","visible","Math","max","setStyle","content","parts","type","element","myOverride","atOverride","xOffsetOverride","yOffsetOverride","elementBounds","getBoundingClientRect","elementParts","my","split","elementOffsetX","partsContain","width","elementOffsetY","height","targetBounds","targetParts","at","targetX","left","targetY","top","suppressHideAllPopovers","computePosition","x","y","String","Number","needToReposition","offsetWidth","innerWidth","replace","offsetHeight","innerHeight","ownerDocument","contains","v","hide","show","value","RedirectComponent","navigate","SafeHtmlPipe","sanitizer","bypassSecurityTrustHtml","SafeResourceUrlPipe","bypassSecurityTrustResourceUrl","SelectionBoxComponent","items","placeholder","filtered","focused","selectedItems","values","updateFilteredItems","onChange","onTouched","focusedItem","trim","display","item","input","blur","provide","useExisting","multi","onFocusChange","preventDefault","onArrowDown","onArrowUp","onSelect","SetTitleDirective","_title","updateTitle","setTitle","title","VideoPlayerComponent","AppAPI","auth","GET","response","App","User","fromJSON","body","users","user","PUT","getCurrentUser","organizations","Organization","organization","SubscriptionInfo","plan","DELETE","getCurrentOrganization","image","UPLOAD","media","Media","POST","getMedia","youtubeStatus","vimeoStatus","audioStatus","series","seriesId","organizationId","captions","file","contentType","MediaUploadPolicy","getUploadPolicyForMedia","policy","form","FormData","append","accessKeyId","acl","signature","xhr","XMLHttpRequest","onreadystatechange","readyState","JSON","parse","upload","onprogress","loaded","total","open","send","Series","getSeries","speakers","Speaker","speaker","getSpeaker","feeds","Feed","feed","getFeed","ids","topics","Topic","json","assign","date","adjustStatusForThirdParties","audio","vimeo","youtube","mediaIds","account","StripeAccount","subscription","StripeSubscription","card","StripeCard","plans","StripePlan","AppService","hashids","allManagers","API","userManager","organizationManager","seriesManager","speakerManager","feedManager","topicManager","manager","reset","FeedManager","api","sharedInstance","getAllFeeds","getMediaIdsForFeed","OrganizationManager","SeriesManager","getAllSeries","SpeakerManager","getAllSpeakers","TopicManager","getAllTopics","USER_KEY","UserManager","_user","readUserFromLocalStorage","writeUserToLocalStorage","localStorage","getItem","setItem","stringify","removeItem","AuthGuard","state","route","updateLoggedInState","OAUTH_CLIENT_ID","OAUTH_CLIENT_SECRET","OAUTH_CLIENT_BASE_64","btoa","PendingSubject","request","AuthService","loggedIn$","CREDENTIALS_KEY","credentials","username","password","oauthToken","token","email","getClientCredentialsHeaders","headers","accessToken","params","encodeURIComponent","join","access_token","refreshToken","refresh_token","method","path","params_","headers_","isArray","getTime","toISOString","apiUrl","subject","observe","fail","shouldAttemptRequestAgainAfterRefreshing","grant_type","processRefresh","userLogout","completeRefresh","userRefresh","setRequestHeader","ClipboardService","select","execCommand","DownloadService","anchor","click","LayoutService","sidebarOpen","toolbarOpen","toolbarWidth","storedToolbarWidth","shortcutsVisible","TOOLBAR_WIDTH_KEY","parseInt","LoadingGuard","loading$","getValue","StateService","app","angulartics","google","initialRouteLoaded","dataSource","ignoreDataSourceUpdate","settings","developerMode","production","loggedIn","redirecting","shutdown","usernameOrEmail","userLogin","updateDataSource","updateVisibleView","noauth","redirect","routeToLoadUponAuthenticating","queryParams","start","logout","stop","AppComponent","loading","notificationsOptions","position","pauseOnHover","clipboardTarget","useFactory","getErrorHandler","AppModule","library","addIcons","forRoot","declarations","imports","bootstrap","BaseComponent","layout","FeedDetailComponent","saving","deleteDialogVisible","deleting","addControl","snapshot","hash","encode","imageUrl","valueOf","getAllMedia","responses","controls","setValue","subtitle","description","copyright","category","keywords","feedUrl","staticUrl","updateFeed","files","uploading","uploadImageForFeed","deleteFeed","onDelete","FeedListComponent","locale","entries","sort","ascending","SortOptions","creating","updateEntries","concat","slice","comparator","createFeed","onLoadMoreRows","onAddFeed","onSearchUpdate","onSort","HeaderComponent","onViewSettings","onLogOut","MediaDetailComponent","captionUrl","videoPlayerUrl","playerUrl","videoStreamUrl","videoFileDefaultUrl","videoFileSourceUrl","audioFileUrl","deleteMedia","uploadCaptionFileForMedia","MediaFormComponent","mediaChange","seriesItems","speakerItems","includeItems","topicItems","lastKnownIncludeIds","selectingSeries","selectingOrganization","required","topicsByCategory","header","flat","updateLastKnownIncludeIds","seriesIds","speakerIds","includeIds","topicIds","seriesImageUrl","thumbnailUrl","organizationImageUrl","hidden","unshift","includes","willIncludeInYouTube","didIncludeInYouTube","youtubeId","youtubeMetadataUpdate","before","after","remove","add","updates","removeMediaIdFromFeed","addMediaIdToFeed","updateMedia","uploadImageForMedia","setMediaImageToSeries","setMediaImageToOrganization","onSave","onImageSelected","MediaListComponent","onAddMedia","MediaUploadComponent","acceptedFileTypes","shouldShowMediaForm","mediaId","addedFiles","createMedia","uploadFileForMedia","updateMediaStatus","ReusableMediaListComponent","seriesById","speakerById","fullName","dateString","timeString","statusString","statusColor","OrganizationDetailComponent","updateOrganization","uploadImageForOrganization","routes","component","canActivate","canActivateChild","children","redirectTo","RoutingModule","useHash","SeriesDetailComponent","updateSeries","uploadImageForSeries","deleteSeries","SeriesListComponent","createSeries","onAddSeries","SettingsComponent","savingUserForm","passwordDialogVisible","savingPasswordForm","savingCardForm","cancelDialogVisible","canceling","userForm","resetPasswordForm","Stripe","setPublishableKey","stripeApiKey","cardForm","resetCardForm","getOrganizationSubscriptionInfo","info","planId","updateUser","passwordForm","minLength","confirm","number","month","year","cvc","zip","createToken","updateOrganizationPaymentInfo","deleteOrganizationPaymentInfo","cardNumberPlaceholder","last4","cardMonthPlaceholder","exp_month","cardYearPlaceholder","exp_year","substring","cardCvcPlaceholder","cardZipPlaceholder","address_zip","onSaveUserForm","onShowPasswordDialog","onSavePasswordForm","onUpdatePaymentInfo","onCancelSubscription","SidebarComponent","SignInComponent","login","userForgotPassword","SpeakerDetailComponent","updateSpeaker","uploadImageForSpeaker","deleteSpeaker","SpeakerListComponent","createSpeaker","onAddSpeaker","environment","childNodes","nodeName","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { AsyncProcessor } from './async-processor';\nimport { AsyncProcessorResult } from './async-processor';\nimport { Observable } from 'rxjs';\n\ntype SearchFunction<T> = () => Observable<T>;\ntype CallbackFunction<T> = (data: T) => void;\n\nexport class AsyncDataSource<T> {\n    public callback: CallbackFunction<T> = undefined;\n    public processor = new AsyncProcessor();\n\n    constructor(private search: SearchFunction<T>) {\n        this.processor.maxRetryCount = AsyncProcessor.RETRY_NO_LIMIT;\n        this.processor.process = (key) => { return search(); };\n        this.processor.progress = (key, data, result) => {\n            if (!this.callback) { return; }\n            if (result === AsyncProcessorResult.SUCCESS) {\n                this.callback(data);\n            } else if (result === AsyncProcessorResult.FAILED) {\n                // this will only be called if the source's creator sets the\n                // maxRetryCount to some finite number, at which point, they are\n                // expecting to get an 'undefined' result on failure.\n                this.callback(undefined);\n            }\n        };\n    }\n\n    public refresh() { this.processor.processKeys([\"\"]); }\n    public cancel() { this.processor.cancel(); }\n}\n","import { first } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nexport enum AsyncProcessorResult { SUCCESS, FAILED, FAILED_WILL_RETRY, CANCELED }\n\ntype ProcessFunction = (key: any) => Observable<any>;\ntype ProgressFunction = (key: any, data: any, result: AsyncProcessorResult) => void;\ntype CompleteFunction = (result: AsyncProcessorResult) => void;\n\nexport class AsyncProcessor {\n    public static RETRY_NO_LIMIT: number = -1;\n\n    public enabled: boolean = true;\n    public working: boolean = false;\n    public maxRetryCount: number = 0;\n    public retryDelay: number = 5.0; // seconds\n\n    public process: ProcessFunction = undefined;\n    public progress: ProgressFunction = undefined;\n    public complete: CompleteFunction = undefined;\n\n    private processing: any[] = undefined;\n    private pending: any[] = undefined;\n    private retryCount: number = 0;\n    private pointer: number = 0;\n    private result: AsyncProcessorResult = AsyncProcessorResult.SUCCESS;\n\n    public processKeys(keys: any[]) {\n        if (keys === undefined || !this.enabled) { return; }\n\n        this.pending = keys;\n        if (this.processing !== undefined) { return; }\n\n        this.working = true;\n        this.processing = this.pending;\n        this.pending = undefined;\n\n        this.next();\n    }\n\n    private next() {\n        if (this.processing.length == 0 || this.processing.length <= this.pointer) {\n            let result = this.result;\n            this.result = AsyncProcessorResult.SUCCESS;\n            this.pointer = 0;\n            this.processing = undefined;\n            this.working = false;\n\n            if (this.complete) { this.complete(result); }\n            this.processKeys(this.pending);\n\n            return;\n        }\n\n        if (this.process) {\n            this.process(this.processing[this.pointer]).pipe(first()).subscribe(result => {\n                this.completion(result, true);\n            }, error => {\n                this.completion(undefined, false);\n            });\n        } else {\n            this.completion(undefined, true);\n        }\n    }\n\n    private completion(data: any, success: boolean) {\n        if (this.result == AsyncProcessorResult.CANCELED) {\n            this.next();\n        } else if (success) {\n            if (this.progress) { this.progress(this.processing[this.pointer], data, AsyncProcessorResult.SUCCESS); }\n\n            this.retryCount = 0;\n            this.pointer++;\n            this.next();\n        } else if (this.maxRetryCount == AsyncProcessor.RETRY_NO_LIMIT || this.retryCount < this.maxRetryCount) {\n            if (this.progress) { this.progress(this.processing[this.pointer], undefined, AsyncProcessorResult.FAILED_WILL_RETRY); }\n\n            this.retryCount++;\n            setTimeout(() => { this.next(); }, this.retryDelay * 1000);\n        } else {\n            if (this.progress) { this.progress(this.processing[this.pointer], undefined, AsyncProcessorResult.FAILED); }\n\n            this.result = AsyncProcessorResult.FAILED;\n            this.retryCount = 0;\n            this.pointer++;\n            this.next();\n        }\n    }\n\n    public cancel() {\n        if (!this.processing || this.processing.length == 0) { return; }\n\n        this.processing = [];\n        this.result = AsyncProcessorResult.CANCELED;\n    }\n}\n","import { NavigationEnd, Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\n\nlet HISTORY_ENTRY_ID = 0;\nexport class HistoryEntry {\n    public id: number;\n    public variables: { [key: string]: any } = {};\n\n    constructor(public url: string) {\n        this.id = HISTORY_ENTRY_ID++;\n    }\n}\n\nexport class History {\n    public static _instance: History;\n\n    public static sharedInstance(): History {\n        return History._instance;\n    }\n\n    private history: Array<HistoryEntry> = [];\n    private index: number = -1;\n\n    private entrySubject = new Subject<HistoryEntry>();\n    public changeEmitted$ = this.entrySubject.asObservable();\n\n    constructor(private router: Router) {\n        this.router.events.subscribe((event) => {\n            if (!(event instanceof NavigationEnd)) {\n                return;\n            }\n            console.log(\"Navigated To: \" + this.router.url);\n            this.navigatedTo(this.router.url);\n        });\n        History._instance = this;\n    }\n\n    private navigatedTo(url: string) {\n        let previous = this.history[this.index] && this.history[this.index].url;\n        if (previous === url || url.indexOf('sign-in') >= 0 || url.indexOf('forgot-password') >= 0) {\n            return;\n        }\n\n        this.index++;\n        this.history.length = this.index;\n        let entry = new HistoryEntry(url)\n        this.history.push(entry);\n        this.entrySubject.next(entry);\n    }\n\n    public get currentHistoryEntry(): HistoryEntry {\n        return this.index >= 0 ? this.history[this.index] : undefined;\n    }\n\n    public get historyEntries(): Array<HistoryEntry> {\n        return this.history;\n    }\n\n    public canGoBack(): boolean {\n        return this.index > 0;\n    }\n\n    public goBack() {\n        if (!this.canGoBack()) {\n            return;\n        }\n\n        this.index--;\n        if (this.history[this.index].url.indexOf('concept/external') > -1) {\n            this.index--;\n        }\n        this.router.navigateByUrl(this.history[this.index].url);\n        this.entrySubject.next(this.currentHistoryEntry);\n    }\n\n    public canGoForward(): boolean {\n        return this.index < (this.history.length - 1);\n    }\n\n    public goForward() {\n        if (!this.canGoForward()) {\n            return;\n        }\n\n        this.index++;\n        this.router.navigateByUrl(this.history[this.index].url);\n        this.entrySubject.next(this.currentHistoryEntry);\n    }\n\n    public shutdown() {\n        this.history = [];\n        this.index = -1;\n    }\n}\n","import { AsyncDataSource } from './async-data-source';\nimport { Observable } from 'rxjs';\nimport { of as ObservableOf } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nconst NOT_ENABLED = { id: 'not-enabled' };\n\nexport abstract class Manager {\n    public enabled: boolean = false;\n\n    public refreshInterval: number = 300000; // milliseconds\n    protected lastRefreshTime: number = 0;\n\n    public update$: Subject<void> = new Subject<void>();\n    private currentSubject: Subject<boolean>;\n    private nextSubject: Subject<boolean>;\n\n    private source: AsyncDataSource<void>;\n\n    public refresh(force: boolean = false): Observable<boolean> {\n        if (!this.enabled) { return ObservableOf(false); }\n\n        if (!force) {\n            if ((Date.now() - this.lastRefreshTime) < this.refreshInterval) { return ObservableOf(false); }\n            if (this.currentSubject) { return this.currentSubject; }\n        }\n\n        this.nextSubject = this.nextSubject || new Subject<boolean>();\n        if (this.currentSubject) { return this.nextSubject; }\n\n        this.currentSubject = this.nextSubject || new Subject<boolean>();\n        this.nextSubject = undefined;\n\n        this.source = new AsyncDataSource<any>(() => {\n            if (!this.enabled) { return ObservableOf(NOT_ENABLED); }\n            return this.fetchData();\n        });\n        this.source.callback = (data: any) => {\n            this.source.callback = undefined;\n            this.source = undefined;\n\n            if (data === NOT_ENABLED) {\n                this.currentSubject.error(data);\n                this.currentSubject = undefined;\n                return;\n            }\n\n            this.setData(data);\n            this.lastRefreshTime = Date.now();\n            this.currentSubject.next(true);\n            this.currentSubject.complete();\n            this.currentSubject = undefined;\n            this.update$.next();\n\n            if (this.nextSubject) { this.refresh(true); }\n        };\n        this.source.refresh();\n\n        return this.currentSubject;\n    }\n\n    public cancel() {\n        if (!this.source || !this.currentSubject) { return; }\n\n        this.source.callback = undefined;\n        this.source = undefined;\n\n        this.currentSubject.next(false);\n        this.currentSubject.complete();\n        this.currentSubject = undefined;\n\n        if (this.nextSubject) {\n            this.nextSubject.next(false);\n            this.nextSubject.complete();\n            this.nextSubject = undefined;\n        }\n    }\n\n    public reset() {\n        this.lastRefreshTime = 0;\n    }\n\n    protected abstract fetchData(): Observable<any>;\n    protected abstract setData(data: any);\n}\n","export module Utility {\n    export function ArraysAreEqual(a: Array<any>, b: Array<any>): boolean {\n        let A = a || [];\n        let B = b || [];\n        return A.length === B.length && !A.find((o, index) => o !== B[index]);\n    }\n\n    export function RemoveDuplicatesFromArray(array: Array<any>, disallowed: Array<any> = undefined) {\n        let duplicates = {};\n        if (disallowed) { disallowed.forEach(o => duplicates[o] = true); }\n        return array.filter(o => {\n            if (duplicates[o]) { return false; }\n            duplicates[o] = true;\n            return true;\n        });\n    }\n\n    export function StatusToText(status: number): string {\n        switch (status) {\n            case 0: return 'Uploading';\n            case 1: return 'Uploaded';\n            case 2: return 'Processing';\n            case 3: return 'Available';\n            case 4: return 'Error';\n            case 5: return 'Deleted By User';\n            case 6: return 'Deleted';\n            case -1: return 'Custom';\n            default: return 'Unknown';\n        }\n    }\n\n    export function StatusToClass(status: number): string {\n        switch (status) {\n            case 0: return 'media-status-default';\n            case 1: return 'media-status-info';\n            case 2: return 'media-status-info';\n            case 3: return 'media-status-success';\n            case 4: return 'media-status-error';\n            case 5: return 'media-status-error';\n            case 6: return 'media-status-error';\n            case -1: return 'media-status-success';\n            default: return 'media-status-default';\n        }\n    }\n\n    export function StatusToIcon(status: number): string {\n        switch (status) {\n            case 0: return 'exclamation-triangle';\n            case 1: return 'info-circle';\n            case 2: return 'info-circle';\n            case 3: return 'check-circle';\n            case 4: return 'exclamation-circle';\n            case 5: return 'exclamation-circle';\n            case 6: return 'exclamation-circle';\n            case -1: return 'check-circle';\n            default: return 'question-circle';\n        }\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-action-icon',\n    template: `\n        <div class=\"action-icon\" [attr.title]=\"title\" [class.active]=\"active\" [class.disabled]=\"disabled\">\n            <fa-icon [icon]=\"['fad', icon]\"></fa-icon>\n        </div>\n    `,\n    styleUrls: ['./action-icon.component.scss'],\n})\nexport class ActionIconComponent {\n    @Input()\n    public icon: string;\n\n    @Input()\n    public title: string;\n\n    @Input()\n    public active: boolean = false;\n\n    @Input()\n    public disabled: boolean = false;\n}\n","import { Directive, ElementRef, Input } from '@angular/core';\n\n@Directive({\n    selector: '[autofocus]'\n})\nexport class AutofocusDirective {\n    @Input()\n    public set autofocus(condition: boolean) {\n        this._autofocus = (condition !== false);\n    }\n\n    private _autofocus: boolean;\n\n    constructor(private el: ElementRef) { }\n\n    public ngOnInit() {\n        if (this._autofocus || typeof this._autofocus === \"undefined\") {\n            setTimeout(() => { this.el.nativeElement.focus(); });\n        }\n    }\n}","import { Component, Input } from '@angular/core';\nimport { ClipboardService } from '@services/clipboard.service';\nimport { NotificationsService } from 'angular2-notifications';\n\n@Component({\n    selector: 'app-copy-box',\n    templateUrl: './copy-box.component.html',\n    styleUrls: ['./copy-box.component.scss']\n})\nexport class CopyBoxComponent {\n    @Input()\n    public text: string;\n\n    constructor(private clipboard: ClipboardService, private notifications: NotificationsService) { }\n\n    public onCopy() {\n        this.clipboard.write(this.text);\n        this.notifications.success('Success', 'Copied to clipboard.', { timeOut: 5000 });\n    }\n}\n","<div class=\"copy-box-container\">\n    <input type=\"text\" [ngModel]=\"text\" readonly />\n    <button class=\"button secondary\" (click)=\"onCopy()\">\n        <fa-icon [icon]=\"['fad', 'clipboard']\"></fa-icon>Copy\n    </button>\n</div>","import { Component } from '@angular/core';\nimport { ElementRef } from '@angular/core';\nimport { DownloadService } from '@services/download.service';\nimport { ViewChild } from '@angular/core';\n\n@Component({\n    selector: 'app-download',\n    template: `<a #anchor [href]=\"url\"></a>`,\n    styles: [`:host { visibility: hidden; }`]\n})\nexport class DownloadComponent {\n    public url: string = undefined;\n\n    @ViewChild('anchor', { static: true })\n    public anchor: ElementRef;\n\n    constructor(download: DownloadService) {\n        download.downloadComponent = this;\n    }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { AbstractControlDirective } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n@Component({\n    selector: 'app-form-error',\n    template: `\n        <ul class=\"form-errors\" *ngIf=\"shouldShowErrors()\">\n            <li *ngFor=\"let error of errors()\">{{ error }}</li>\n        </ul>`,\n    styleUrls: ['./form-error.component.scss']\n})\nexport class FormErrorComponent {\n    @Input()\n    private control: AbstractControlDirective | AbstractControl;\n\n    @Input()\n    private checkDirty: boolean = false;\n\n    @Input()\n    private messages: { [key: string]: string } = {};\n\n    public shouldShowErrors(): boolean {\n        return this.control && this.control.errors && (this.control.touched || (this.checkDirty && this.control.dirty));\n    }\n\n    public errors(): Array<string> {\n        return Object.keys(this.control.errors)\n            .map(key => this.messages[key] || undefined)\n            .filter(text => text);\n    }\n}\n","import { Component, Input, HostListener, ViewChild, Output, EventEmitter, ElementRef } from '@angular/core';\nimport { PopoverComponent } from '@common/popover/popover.component';\n\n@Component({\n    selector: 'app-guarded-action',\n    templateUrl: './guarded-action.component.html',\n    styleUrls: ['./guarded-action.component.scss'],\n})\nexport class GuardedActionComponent {\n    @Input()\n    public question: string = '';\n\n    @Input()\n    public additional: Array<string> = [];\n\n    @Input()\n    public action: string = '';\n\n    @Input()\n    public align: string = 'left';\n\n    @Output()\n    public confirmed = new EventEmitter<void>();\n\n    @ViewChild('popover', { static: true })\n    public popover: PopoverComponent;\n\n    @ViewChild('actionButton', { static: true })\n    public actionButton: ElementRef;\n\n    constructor(private host: ElementRef) { }\n\n    @HostListener('click', ['$event'])\n    public onClick($event: MouseEvent) {\n        this.popover.target = this.host.nativeElement;\n        this.popover.toggle($event, true);\n        setTimeout(() => this.actionButton.nativeElement.focus());\n    }\n}\n","<ng-content></ng-content>\n\n<app-popover #popover my=\"top {{ align }}\" at=\"bottom {{ align }}\" [x-offset]=\"0\" [y-offset]=\"0\">\n    <div class=\"popover-section\">\n        <div class=\"popover-item\"><strong>{{ question }}</strong></div>\n    </div>\n    <div class=\"popover-section\" *ngFor=\"let text of additional\">\n        <div class=\"popover-item\">{{ text }}</div>\n    </div>\n    <div class=\"popover-section\">\n        <div class=\"popover-item\">\n            <button class=\"button secondary hollow small\">Cancel</button>\n            <button #actionButton class=\"button alert small\" (click)=\"confirmed.emit()\">{{ action }}</button>\n        </div>\n    </div>\n</app-popover>","import { Component, Input, OnInit, OnChanges } from '@angular/core';\n\n@Component({\n    selector: 'app-icon',\n    template: `\n        <div class=\"icon\" [attr.title]=\"title\" [style.width.px]=\"size\" [style.height.px]=\"size\">\n            <div class=\"svg\" [inlineSVG]=\"svgResourceUrl\" [style.height.px]=\"height || size\"></div>\n        </div>\n    `,\n    styleUrls: ['./icon.component.scss'],\n})\nexport class IconComponent implements OnInit, OnChanges {\n    @Input()\n    public svg: string;\n    public svgResourceUrl: string;\n\n    @Input()\n    public size: number = 28;\n\n    @Input()\n    public height: number;\n\n    @Input()\n    public title: string;\n\n    public ngOnInit() {\n        this.svgResourceUrl = `assets/svg/${this.svg}.svg`;\n    }\n\n    public ngOnChanges(changes: any) {\n        if (!changes.svg) { return; }\n        this.svgResourceUrl = `assets/svg/${this.svg}.svg`;\n    }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { DOCUMENT } from \"@angular/common\";\n\nimport { SVGCache } from './svg-cache.service';\n\n@Directive({\n  selector: '[inlineSVG]',\n  providers: [SVGCache]\n})\nexport class InlineSVGDirective implements OnInit, OnChanges {\n  @Input() inlineSVG: string;\n  @Input() replaceContents: boolean = true;\n  @Input() prepend: boolean = false;\n  @Input() cacheSVG: boolean = true;\n  @Input() removeSVGAttributes: Array<string>;\n  @Input() forceEvalStyles: boolean = false;\n  @Input() evalScripts: 'always' | 'once' | 'never' = 'always';\n  @Input() fallbackImgUrl: string;\n\n  @Output() onSVGInserted: EventEmitter<SVGElement> = new EventEmitter<SVGElement>();\n  @Output() onSVGFailed: EventEmitter<any> = new EventEmitter<any>();\n\n  /** @internal */\n  private _absUrl: string;\n\n  /** @internal */\n  private _supportsSVG: boolean = true;\n\n  /** @internal */\n  private _ranScripts: { [url: string]: boolean } = {};\n\n  constructor(\n    @Inject(DOCUMENT) private _document /*: HTMLDocument*/,\n    private _el: ElementRef,\n    private _svgCache: SVGCache) {\n  }\n\n  ngOnInit(): void {\n    this._insertSVG();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['inlineSVG']) {\n      this._insertSVG();\n    }\n  }\n\n  /** @internal */\n  private _insertSVG(): void {\n    if (!this._supportsSVG) {\n      return;\n    }\n\n    // Check if the browser supports embed SVGs\n    if (!this._checkSVGSupport()) {\n      this._fail('Embed SVG not supported by browser');\n      this._supportsSVG = false;\n      return;\n    }\n\n    // Check if a URL was actually passed into the directive\n    if (!this.inlineSVG) {\n      this._fail('No URL passed to [inlineSVG]');\n      return;\n    }\n\n    // Support for symbol IDs\n    if (this.inlineSVG.charAt(0) === '#' || this.inlineSVG.indexOf('.svg#') > -1) {\n      const elSvg = this._document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n      const elSvgUse = this._document.createElementNS('http://www.w3.org/2000/svg', 'use');\n      elSvgUse.setAttributeNS('http://www.w3.org/1999/xlink', 'href', this.inlineSVG);\n      elSvg.appendChild(elSvgUse);\n\n      this._insertEl(elSvg);\n\n      this.onSVGInserted.emit(elSvg);\n      return;\n    }\n\n    // Get absolute URL, and check if it's actually new\n    const absUrl = this._getAbsoluteUrl(this.inlineSVG);\n\n    if (absUrl !== this._absUrl) {\n      this._absUrl = absUrl;\n\n      // Fetch SVG via cache mechanism\n      this._svgCache.getSVG(this._absUrl, this.cacheSVG)\n        .subscribe(\n          (svg: SVGElement) => {\n            // Insert SVG\n            if (svg && this._el.nativeElement) {\n              if (this.removeSVGAttributes) {\n                this._removeAttributes(svg, this.removeSVGAttributes);\n              }\n\n              this._insertEl(svg);\n\n              // Script evaluation\n              this._evalScripts(svg, absUrl);\n\n              // Force evaluation of <style> tags since IE doesn't do it.\n              // Reference: https://github.com/arkon/ng-inline-svg/issues/17\n              if (this.forceEvalStyles) {\n                const styleTags = svg.querySelectorAll('style');\n                Array.prototype.forEach.call(styleTags, tag => tag.textContent += '');\n              }\n\n              this.onSVGInserted.emit(svg);\n            }\n          },\n          (err: any) => {\n            this._fail(err);\n          }\n        );\n    }\n  }\n\n  /** @internal */\n  private _getAbsoluteUrl(url: string): string {\n    return url;\n\n    // const base = this._document.createElement('BASE') as HTMLBaseElement;\n    // base.href = url;\n    //\n    // return base.href;\n  }\n\n  /** @internal */\n  private _removeAttributes(svg: SVGElement, attrs: Array<string>) {\n    const innerEls = svg.getElementsByTagName('*');\n\n    for (let i = 0; i < innerEls.length; i++) {\n      const elAttrs = innerEls[i].attributes;\n\n      for (let j = 0; j < elAttrs.length; j++) {\n        if (attrs.indexOf(elAttrs[j].name.toLowerCase()) > -1) {\n          innerEls[i].removeAttribute(elAttrs[j].name);\n        }\n      }\n    }\n  }\n\n  /** @internal */\n  private _insertEl(el: Element) {\n    if (this.replaceContents && !this.prepend) {\n      this._el.nativeElement.innerHTML = '';\n    }\n\n    if (this.prepend) {\n      this._el.nativeElement.insertBefore(el, this._el.nativeElement.firstChild);\n    } else {\n      this._el.nativeElement.appendChild(el);\n    }\n  }\n\n  // Based off code from https://github.com/iconic/SVGInjector\n  /** @internal */\n  private _evalScripts(svg: SVGElement, url: string) {\n    const scripts = svg.querySelectorAll('script');\n    const scriptsToEval = [];\n    let script, scriptType;\n\n    // Fetch scripts from SVG\n    for (let i = 0; i < scripts.length; i++) {\n      scriptType = scripts[i].getAttribute('type');\n\n      if (!scriptType || scriptType === 'application/ecmascript' || scriptType === 'application/javascript') {\n        script = scripts[i].innerText || scripts[i].textContent;\n        scriptsToEval.push(script);\n        svg.removeChild(scripts[i]);\n      }\n    }\n\n    // Run scripts in closure as needed\n    if (scriptsToEval.length > 0 && (this.evalScripts === 'always' ||\n        (this.evalScripts === 'once' && !this._ranScripts[url]))) {\n      for (let i = 0; i < scriptsToEval.length; i++) {\n        new Function(scriptsToEval[i])(window);\n      }\n\n      this._ranScripts[url] = true;\n    }\n  }\n\n  /** @internal */\n  private _checkSVGSupport() {\n    return typeof SVGRect !== 'undefined';\n  }\n\n  /** @internal */\n  private _fail(msg: string) {\n    this.onSVGFailed.emit(msg);\n\n    // Insert fallback image, if specified\n    if (this.fallbackImgUrl) {\n      const elImg = document.createElement('img');\n      elImg.src = this.fallbackImgUrl;\n\n      this._insertEl(elImg);\n    }\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from \"@angular/common\";\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, finalize, share } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class SVGCache {\n    /** @internal */\n    private static _cache: Map<string, SVGElement>;\n\n    /** @internal */\n    private static _inProgressReqs: Map<string, Observable<SVGElement>>;\n\n    constructor(\n        @Inject(DOCUMENT) private _document /*: HTMLDocument */,\n        private http: HttpClient) {\n        if (!SVGCache._cache) {\n            SVGCache._cache = new Map<string, SVGElement>();\n        }\n\n        if (!SVGCache._inProgressReqs) {\n            SVGCache._inProgressReqs = new Map<string, Observable<SVGElement>>();\n        }\n    }\n\n    getSVG(url: string, cache: boolean = true): Observable<SVGElement> {\n        // Return cached copy if it exists\n        if (cache && SVGCache._cache.has(url)) {\n            return of(this._cloneSVG(SVGCache._cache.get(url)));\n        }\n\n        // Return existing fetch observable\n        if (SVGCache._inProgressReqs.has(url)) {\n            return SVGCache._inProgressReqs.get(url);\n        }\n\n        // Otherwise, make the HTTP call to fetch\n        const req = this.http.get(url, { responseType: 'text' }).pipe(\n            catchError((err: any) => err),\n            finalize(() => {\n                SVGCache._inProgressReqs.delete(url);\n            }),\n            share(),\n            map((svgText: string) => {\n                const svgEl = this._svgElementFromString(svgText);\n                SVGCache._cache.set(url, svgEl);\n                return this._cloneSVG(svgEl);\n            }));\n\n        SVGCache._inProgressReqs.set(url, req);\n\n        return req;\n    }\n\n    /** @internal */\n    private _svgElementFromString(str: string): SVGElement | never {\n        const div: HTMLElement = this._document.createElement('DIV');\n        div.innerHTML = str;\n\n        const svg = div.querySelector('svg') as SVGElement;\n\n        if (!svg) {\n            throw new Error('No SVG found in loaded contents');\n        }\n\n        return svg;\n    }\n\n    /** @internal */\n    private _cloneSVG(svg: SVGElement): SVGElement {\n        return svg.cloneNode(true) as SVGElement;\n    }\n}\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n    selector: 'app-loading-indicator',\n    template: `\n    <div class=\"loading-indicator\">\n        <p-progressSpinner animationDuration=\"2s\" [strokeWidth]=\"6\" [fill]=\"'rgba(51, 190, 255, 0.2)'\"></p-progressSpinner>\n    </div>`,\n    styleUrls: ['./loading-indicator.component.scss']\n})\nexport class LoadingIndicatorComponent {\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, Renderer2, ViewChild } from '@angular/core';\nimport { BehaviorSubject, fromEvent, Subscription, timer } from 'rxjs';\nimport { filter, skipUntil, take } from 'rxjs/operators';\n\nlet _VisiblePopoverCount: number = 0;\nexport function VisiblePopoverCount(): number {\n    return _VisiblePopoverCount;\n}\n\nexport function HideAllPopovers() {\n    document.dispatchEvent(new CustomEvent('hidePopovers'));\n}\n\n// based on: https://github.com/meiriko/ng2-pop-over\n\n@Component({\n    selector: 'app-popover',\n    template: `\n        <div #popOverContent class=\"popover-component\" [ngClass]=\"contentClass\" [class.shown]=\"visible$ | async\">\n            <div class=\"app-popover-content\">\n                <ng-content *ngIf=\"visible$ | async\"></ng-content>\n            </div>\n        </div>\n    `,\n})\nexport class PopoverComponent implements AfterViewInit, OnDestroy {\n    @Input() my: string;\n    @Input() at: string;\n    @Input('x-offset') xOffset: number = 0;\n    @Input('y-offset') yOffset: number = 0;\n    @Input('content-class') contentClass: string;\n    @Input() target: HTMLElement;\n\n    @Output() onClose: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('popOverContent', { static: true })\n    public content: any;\n\n    public visible$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    public get visible() { return this.visible$.value; }\n\n    constructor(private renderer: Renderer2) { }\n\n    public ngOnDestroy() {\n        this.subscriptions.forEach(o => o.unsubscribe());\n        this.subscriptions = [];\n\n        if (this.visible) { _VisiblePopoverCount = Math.max(0, _VisiblePopoverCount - 1); }\n    }\n\n    public ngAfterViewInit(): any {\n        this.renderer.setStyle(this.content.nativeElement, 'opacity', '0');\n        this.renderer.setStyle(this.content.nativeElement, 'visibility', 'hidden');\n        return undefined;\n    }\n\n    private partsContain(parts: string[], type: string): boolean {\n        return parts.indexOf(type) >= 0;\n    }\n\n    private computePosition(element: any, event: MouseEvent, myOverride: string = undefined, atOverride: string = undefined, xOffsetOverride: number = undefined, yOffsetOverride: number = undefined): [number, number] {\n        let elementBounds = element.getBoundingClientRect();\n        let elementParts = (myOverride || this.my || '').split(/\\s+/);\n        let elementOffsetX = this.partsContain(elementParts, 'right') ? elementBounds.width : 0;\n        let elementOffsetY = this.partsContain(elementParts, 'bottom') ? elementBounds.height : 0;\n\n        let target: any = this.target || event.target;\n        let targetBounds = target.getBoundingClientRect();\n        let targetParts = (atOverride || this.at || '').split(/\\s+/);\n        let targetX = this.partsContain(targetParts, 'right') ? (targetBounds.left + targetBounds.width) : targetBounds.left;\n        let targetY = this.partsContain(targetParts, 'bottom') ? (targetBounds.top + targetBounds.height) : targetBounds.top;\n\n        return [\n            targetX - elementOffsetX + (xOffsetOverride || this.xOffset),\n            targetY - elementOffsetY + (yOffsetOverride || this.yOffset)\n        ];\n    }\n\n    private subscriptions: Array<Subscription> = [];\n\n    public show(event: MouseEvent, suppressHideAllPopovers: boolean = false) {\n        if (!suppressHideAllPopovers) { HideAllPopovers(); }\n        this.subscriptions.forEach(o => o.unsubscribe());\n        this.subscriptions = [];\n\n        let element = this.content.nativeElement;\n        this.renderer.setStyle(element, 'visibility', 'inherit');\n\n        if (!this.visible) {\n            this.visible$.next(true);\n            _VisiblePopoverCount++;\n        }\n\n        timer(0).pipe(take(1)).subscribe(() => {\n            var [x, y] = this.computePosition(element, event);\n            var [myOverride, atOverride] = [String(this.my), String(this.at)]\n            var [xOffsetOverride, yOffsetOverride] = [Number(this.xOffset), Number(this.yOffset)]\n            let needToReposition = false;\n            if (x + element.offsetWidth + 10 > window.innerWidth) {\n                console.log(\"Going to reposition the popup because it's falling off the side of the screen\")\n                myOverride = myOverride.replace(\"left\", \"right\");\n                atOverride = atOverride.replace(\"left\", \"right\");\n                xOffsetOverride *= -1;\n                needToReposition = true;\n            }\n            if (y + element.offsetHeight + 10 > window.innerHeight) {\n                myOverride = myOverride.replace(\"top\", \"bottom\");\n                atOverride = atOverride.replace(\"bottom\", \"top\");\n                yOffsetOverride *= -1;\n\n                if (this.computePosition(element, event, myOverride, atOverride, xOffsetOverride, yOffsetOverride)[1] > 0) {\n                    console.log(\"Going to reposition the popup because it's falling off the bottom of the screen\")\n                    needToReposition = true;\n                }\n            }\n\n            if (needToReposition) {\n                [x, y] = this.computePosition(element, event, myOverride, atOverride, xOffsetOverride, yOffsetOverride);\n            }\n\n            if (y + element.offsetHeight + 10 > window.innerHeight) {\n                console.log(\"Preventing the popup from falling off the bottom of the screen\")\n                this.renderer.setStyle(element, 'bottom', 0 + 'px');\n            }\n\n            this.renderer.setStyle(element, 'top', y + 'px');\n            this.renderer.setStyle(element, 'left', x + 'px');\n            this.renderer.setStyle(element, 'opacity', '1');\n\n            this.subscriptions.push(fromEvent(element.ownerDocument, 'click')\n                .pipe(skipUntil(timer(0)))\n                .pipe(filter((event: MouseEvent) => {\n                    return !element.contains(event.target) && element.ownerDocument.contains(event.target);\n                }))\n                .pipe(take(1))\n                .subscribe((v) => {\n                    this.hide();\n                    this.onClose.emit();\n                }));\n            this.subscriptions.push(fromEvent(document, 'hidePopovers').subscribe(() => {\n                this.hide();\n                this.onClose.emit();\n            }));\n        })\n    }\n\n    public hide() {\n        this.renderer.setStyle(this.content.nativeElement, 'opacity', '0');\n        this.renderer.setStyle(this.content.nativeElement, 'visibility', 'hidden');\n        this.renderer.setStyle(this.content.nativeElement, 'bottom', null);\n\n        if (this.visible) {\n            this.visible$.next(false);\n            _VisiblePopoverCount = Math.max(0, _VisiblePopoverCount - 1);\n        }\n    }\n\n    public toggle(event: MouseEvent, suppressHideAllPopovers: boolean = false) {\n        this.visible$\n            .pipe(take(1))\n            .subscribe((visible: boolean) => {\n                visible ? this.hide() : this.show(event, suppressHideAllPopovers)\n            });\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-redirect',\n    template: ``,\n})\nexport class RedirectComponent {\n    constructor(private router: Router) { }\n\n    public ngOnInit() {\n        this.router.navigate(['/media']);\n    }\n}\n","import { DomSanitizer } from '@angular/platform-browser';\nimport { Pipe } from '@angular/core';\n\n@Pipe({\n    name: 'safeHtml'\n})\nexport class SafeHtmlPipe {\n    constructor(private sanitizer: DomSanitizer) { }\n\n    public transform(value) {\n        return this.sanitizer.bypassSecurityTrustHtml(value);\n    }\n}\n\n@Pipe({ name: 'safeResourceUrl' })\nexport class SafeResourceUrlPipe {\n    constructor(private sanitizer: DomSanitizer) { }\n\n    public transform(value) {\n        return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n    }\n}","import { Component, Input, OnInit, forwardRef, OnChanges, TemplateRef, ViewChild, ElementRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport interface SelectionBoxItem {\n    display: string;\n    header?: string;\n    value: any;\n    data: any;\n}\n\n@Component({\n    selector: 'app-selection-box',\n    templateUrl: './selection-box.component.html',\n    styleUrls: ['./selection-box.component.scss'],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => SelectionBoxComponent),\n        multi: true\n    }]\n})\nexport class SelectionBoxComponent implements ControlValueAccessor, OnInit, OnChanges {\n    @Input()\n    public items: Array<SelectionBoxItem> = [];\n\n    @Input()\n    public max: number = 0;\n\n    @Input()\n    public placeholder: string = 'Search...';\n\n    @Input()\n    public itemTemplate: TemplateRef<any>;\n\n    @ViewChild('input', { static: true })\n    public input: ElementRef;\n\n    public search: string = '';\n    public filtered: Array<SelectionBoxItem> = [];\n    public focused: boolean = false;\n    public focusedItem: SelectionBoxItem;\n    public selectedItems: Array<SelectionBoxItem> = [];\n\n    private values: Array<any> = [];\n    public writeValue(value: any) {\n        this.values = value || [];\n        this.updateFilteredItems();\n    }\n\n    private onChange: any;\n    public registerOnChange(value: any) { this.onChange = value; }\n    private onTouched: any;\n    public registerOnTouched(value: any) { this.onTouched = value; }\n\n    public ngOnInit() { this.updateFilteredItems(); }\n    public ngOnChanges() { this.updateFilteredItems(); }\n\n    public onFocusChange(value: boolean) {\n        if (value) {\n            this.focused = true;\n        } else {\n            setTimeout(() => {\n                this.focused = false;\n                this.focusedItem = undefined;\n                this.search = '';\n                this.updateFilteredItems();\n            }, 150);\n        }\n    }\n\n    public updateFilteredItems() {\n        this.selectedItems = this.values.map(o => this.items.find(i => i.value === o)).filter(o => o);\n\n        const search = (this.search || '').trim().toLowerCase();\n        this.filtered = this.items.filter(o => {\n            return this.selectedItems.indexOf(o) < 0 &&\n                (!search || o.display.toLowerCase().indexOf(search) >= 0);\n        });\n    }\n\n    public onArrowDown() {\n        let index = -1;\n        if (this.focusedItem) { index = this.filtered.indexOf(this.focusedItem); }\n\n        if (index >= 0 && index < this.filtered.length - 1) {\n            this.focusedItem = this.filtered[index + 1];\n        } else {\n            this.focusedItem = this.filtered.length ? this.filtered[0] : undefined;\n        }\n    }\n\n    public onArrowUp() {\n        let index = -1;\n        if (this.focusedItem) { index = this.filtered.indexOf(this.focusedItem); }\n\n        if (index > 0 && index < this.filtered.length) {\n            this.focusedItem = this.filtered[index - 1];\n        } else {\n            this.focusedItem = this.filtered.length ? this.filtered[this.filtered.length - 1] : undefined;\n        }\n    }\n\n    public onSelect(item: SelectionBoxItem) {\n        if (this.filtered.indexOf(item) < 0) { return; }\n\n        this.selectedItems.push(item);\n        this.values = this.selectedItems.map(o => o.value);\n        this.onChange(this.values);\n\n        this.input.nativeElement.blur();\n    }\n\n    public onRemove(item: SelectionBoxItem) {\n        this.selectedItems = this.selectedItems.filter(o => o !== item);\n        this.values = this.selectedItems.map(o => o.value);\n        this.onChange(this.values);\n\n        this.updateFilteredItems();\n    }\n}\n","<div class=\"selection-box-container\">\n    <div class=\"selection-item\" *ngFor=\"let item of selectedItems\">\n        <div class=\"selection-item-display\">{{ item.display }}</div>\n        <app-action-icon [icon]=\"'times'\" (click)=\"onRemove(item)\"></app-action-icon>\n    </div>\n\n    <input #input type=\"text\"\n        [class.hidden]=\"selectedItems.length >= items.length || (max && selectedItems.length >= max)\"\n        [(ngModel)]=\"search\"\n        (ngModelChange)=\"updateFilteredItems()\"\n        [placeholder]=\"placeholder\"\n        (focus)=\"onFocusChange(true)\"\n        (blur)=\"onFocusChange(false)\"\n        (keydown.arrowdown)=\"$event.preventDefault(); onArrowDown()\"\n        (keydown.arrowup)=\"$event.preventDefault(); onArrowUp()\"\n        (keydown.enter)=\"onSelect(focusedItem)\" />\n\n    <div class=\"autocomplete-position\">\n        <div class=\"autocomplete-container\" *ngIf=\"focused\">\n            <ng-container *ngFor=\"let item of filtered; let index = index\">\n                <div class=\"autocomplete-header\" *ngIf=\"item.header && (index === 0 || filtered[index - 1].header !== item.header)\">{{ item.header }}</div>\n                <div class=\"autocomplete-item\" [class.focus]=\"item === focusedItem\" (click)=\"onSelect(item)\">\n                    <ng-template [ngTemplateOutlet]=\"itemTemplate || defaultItemTemplate\" [ngTemplateOutletContext]=\"{ item: item }\"></ng-template>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n</div>\n\n<ng-template #defaultItemTemplate let-item=\"item\">{{ item.display }}</ng-template>","import { Directive } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { OnChanges } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Directive({\n    selector: '[setTitle]'\n})\nexport class SetTitleDirective implements OnChanges {\n    @Input('setTitle')\n    public title: string;\n\n    constructor(private _title: Title) { }\n\n    public ngOnChanges() { this.updateTitle(); }\n\n    private updateTitle() {\n        this._title.setTitle(this.title ? `${this.title} | HopeStream` : 'HopeStream');\n    }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-video-player',\n    template: `\n        <ng-container *ngIf=\"url\">\n        <iframe [src]=\"url | safeResourceUrl\" width=\"560\" height=\"349\" frameborder=\"0\" allowfullscreen></iframe>\n        </ng-container>\n        <div class=\"placeholder\" *ngIf=\"!url\">\n            <div class=\"header\">Video Preview Not Available</div>\n            <div *ngIf=\"error\">{{ error }}</div>\n        </div>\n    `,\n    styleUrls: ['./video-player.component.scss'],\n})\nexport class VideoPlayerComponent {\n    @Input()\n    public url: string;\n\n    @Input()\n    public error: string;\n}\n","import { AuthService } from '../auth.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\n\nexport class AppAPI {\n    constructor(private auth: AuthService) { }\n\n    public getCurrentUser(): Observable<App.User> {\n        return this.auth.GET('/admin/api/1/users', {}).pipe(map(response => {\n            return App.User.fromJSON(response.body.users[0]);\n        }));\n    }\n\n    public updateUser(user: App.UserUpdate): Observable<App.User> {\n        return this.auth.PUT(`/admin/api/1/users`, {}, {}, user).pipe(mergeMap(response => {\n            return this.getCurrentUser();\n        }));\n    }\n\n    public getCurrentOrganization(): Observable<App.Organization> {\n        return this.auth.GET('/admin/api/1/organizations', {}).pipe(map(response => {\n            return response.body.organizations.map(o => App.Organization.fromJSON(o))[0];\n        }));\n    }\n\n    public getOrganizationSubscriptionInfo(organization: App.Organization): Observable<App.SubscriptionInfo> {\n        return this.auth.GET(`/admin/api/1/organizations/${organization.id}/subscription`, {}).pipe(map(response => {\n            return App.SubscriptionInfo.fromJSON(response.body);\n        }));\n    }\n\n    public updateOrganizationPaymentInfo(organization: App.Organization, source: string, plan: string): Observable<App.SubscriptionInfo> {\n        return this.auth.PUT(`/admin/api/1/organizations/${organization.id}/payment`, {}, {}, { source: source, plan: plan }).pipe(map(response => {\n            return App.SubscriptionInfo.fromJSON(response.body);\n        }));\n    }\n\n    public deleteOrganizationPaymentInfo(organization: App.Organization): Observable<App.SubscriptionInfo> {\n        return this.auth.DELETE(`/admin/api/1/organizations/${organization.id}/payment`, {}).pipe(map(response => {\n            return App.SubscriptionInfo.fromJSON(response.body);\n        }));\n    }\n\n    public updateOrganization(organization: App.OrganizationUpdate): Observable<App.Organization> {\n        return this.auth.PUT(`/admin/api/1/organizations/${organization.id}`, {}, {}, organization).pipe(mergeMap(response => {\n            return this.getCurrentOrganization();\n        }));\n    }\n\n    public uploadImageForOrganization(organization: App.Organization, image: File, progress: (progress: number) => void = undefined): Observable<App.Organization> {\n        return this.auth.UPLOAD(`/admin/api/1/organizations/${organization.id}/image`, image, 'image', progress).pipe(map(body => {\n            return body.organizations.map(o => App.Organization.fromJSON(o))[0];\n        }));\n    }\n\n    public getAllMedia(): Observable<Array<App.Media>> {\n        return this.auth.GET('/admin/api/1/media', {}).pipe(map(response => {\n            return (response.body.media || []).map(o => App.Media.fromJSON(o));\n        }));\n    }\n\n    public getMedia(id: number): Observable<App.Media> {\n        return this.auth.GET(`/admin/api/1/media/${id}`, {}).pipe(map(response => {\n            return response.body.media.map(o => App.Media.fromJSON(o))[0];\n        }));\n    }\n\n    public createMedia(): Observable<App.Media> {\n        return this.auth.POST('/admin/api/1/media', {}).pipe(map(response => {\n            return response.body.media.map(o => App.Media.fromJSON(o))[0];\n        }));\n    }\n\n    public updateMedia(media: App.MediaUpdate): Observable<App.Media> {\n        return this.auth.PUT(`/admin/api/1/media/${media.id}`, {}, {}, media).pipe(mergeMap(response => {\n            return this.getMedia(media.id);\n        }));\n    }\n\n    public updateMediaStatus(media: App.Media, status: number): Observable<App.Media> {\n        let data: any = { status: status };\n\n        if (status === 1) {\n            data.youtubeStatus = media.youtubeStatus ? 'queued' : null;\n            data.vimeoStatus = null;\n            data.audioStatus = null;\n        }\n\n        return this.auth.PUT(`/admin/api/1/media/${media.id}`, {}, {}, data).pipe(mergeMap(response => {\n            return this.getMedia(media.id);\n        }));\n    }\n\n    public uploadImageForMedia(media: App.Media, image: File, progress: (progress: number) => void = undefined): Observable<App.Media> {\n        return this.auth.UPLOAD(`/admin/api/1/media/${media.id}/image`, image, 'image', progress).pipe(map(body => {\n            return body.media.map(o => App.Media.fromJSON(o))[0];\n        }));\n    }\n\n    public setMediaImageToSeries(media: App.Media, series: App.Series): Observable<App.Media> {\n        return this.auth.PUT(`/admin/api/1/media/${media.id}/image`, { seriesId: `${series.id}` }).pipe(map(response => {\n            return response.body.media.map(o => App.Media.fromJSON(o))[0];\n        }));\n    }\n\n    public setMediaImageToOrganization(media: App.Media, organization: App.Organization): Observable<App.Media> {\n        return this.auth.PUT(`/admin/api/1/media/${media.id}/image`, { organizationId: `${organization.id}` }).pipe(map(response => {\n            return response.body.media.map(o => App.Media.fromJSON(o))[0];\n        }));\n    }\n\n    public uploadCaptionFileForMedia(media: App.Media, captions: File, progress: (progress: number) => void = undefined): Observable<void> {\n        return this.auth.UPLOAD(`/admin/api/1/media/${media.id}/captions`, captions, 'captions', progress).pipe(map(() => { }));\n    };\n\n    private getUploadPolicyForMedia(media: App.Media, file: File): Observable<App.MediaUploadPolicy> {\n        return this.auth.GET(`/admin/api/1/media/${media.id}/upload-policy`, { contentType: file.type }).pipe(map(response => {\n            return App.MediaUploadPolicy.fromJSON(response.body);\n        }));\n    }\n\n    public uploadFileForMedia(media: App.Media, file: File, progress: (progress: number) => void = undefined): Observable<any> {\n        return this.getUploadPolicyForMedia(media, file).pipe(mergeMap(policy => {\n            let form: FormData = new FormData();\n            form.append('key', policy.key);\n            form.append('AWSAccessKeyId', policy.accessKeyId);\n            form.append('acl', policy.acl);\n            form.append('policy', policy.policy);\n            form.append('signature', policy.signature);\n            form.append('Content-Type', file.type);\n            form.append('file', file, file.name);\n\n            let result = new Subject<any>();\n            let xhr: XMLHttpRequest = new XMLHttpRequest();\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === 4) {\n                    if (xhr.status === 200 || xhr.status === 204) {\n                        result.next(xhr.response && JSON.parse(xhr.response) || {});\n                        result.complete();\n                    } else {\n                        result.error(xhr.response);\n                    }\n                }\n            };\n\n            xhr.upload.onprogress = $event => {\n                let value = ($event.loaded / $event.total);\n                progress && progress(value);\n            };\n\n            xhr.open('POST', policy.url, true);\n            xhr.send(form);\n\n            return result;\n        }));\n    }\n\n    public deleteMedia(media: App.Media): Observable<void> {\n        return this.auth.DELETE(`/admin/api/1/media/${media.id}`, {}).pipe(map(() => { }));\n    }\n\n    public getAllSeries(): Observable<Array<App.Series>> {\n        return this.auth.GET('/admin/api/1/series', {}).pipe(map(response => {\n            return (response.body.series || []).map(o => App.Series.fromJSON(o));\n        }));\n    }\n\n    public getSeries(id: number): Observable<App.Series> {\n        return this.auth.GET(`/admin/api/1/series/${id}`, {}).pipe(map(response => {\n            return response.body.series.map(o => App.Series.fromJSON(o))[0];\n        }));\n    }\n\n    public createSeries(): Observable<App.Series> {\n        return this.auth.POST('/admin/api/1/series', {}).pipe(map(response => {\n            return response.body.series.map(o => App.Series.fromJSON(o))[0];\n        }));\n    }\n\n    public updateSeries(series: App.SeriesUpdate): Observable<App.Series> {\n        return this.auth.PUT(`/admin/api/1/series/${series.id}`, {}, {}, series).pipe(mergeMap(response => {\n            return this.getSeries(series.id);\n        }));\n    }\n\n    public uploadImageForSeries(series: App.Series, image: File, progress: (progress: number) => void = undefined): Observable<App.Series> {\n        return this.auth.UPLOAD(`/admin/api/1/series/${series.id}/image`, image, 'image', progress).pipe(map(body => {\n            return body.series.map(o => App.Series.fromJSON(o))[0];\n        }));\n    }\n\n    public deleteSeries(series: App.Series): Observable<void> {\n        return this.auth.DELETE(`/admin/api/1/series/${series.id}`, {}).pipe(map(() => { }));\n    }\n\n    public getAllSpeakers(): Observable<Array<App.Speaker>> {\n        return this.auth.GET('/admin/api/1/speakers', {}).pipe(map(response => {\n            return (response.body.speakers || []).map(o => App.Speaker.fromJSON(o));\n        }));\n    }\n\n    public getSpeaker(id: number): Observable<App.Speaker> {\n        return this.auth.GET(`/admin/api/1/speakers/${id}`, {}).pipe(map(response => {\n            return response.body.speakers.map(o => App.Speaker.fromJSON(o))[0];\n        }));\n    }\n\n    public createSpeaker(): Observable<App.Speaker> {\n        return this.auth.POST('/admin/api/1/speakers', {}).pipe(map(response => {\n            return response.body.speakers.map(o => App.Speaker.fromJSON(o))[0];\n        }));\n    }\n\n    public updateSpeaker(speaker: App.SpeakerUpdate): Observable<App.Speaker> {\n        return this.auth.PUT(`/admin/api/1/speakers/${speaker.id}`, {}, {}, speaker).pipe(mergeMap(response => {\n            return this.getSpeaker(speaker.id);\n        }));\n    }\n\n    public uploadImageForSpeaker(speaker: App.Speaker, image: File, progress: (progress: number) => void = undefined): Observable<App.Speaker> {\n        return this.auth.UPLOAD(`/admin/api/1/speakers/${speaker.id}/image`, image, 'image', progress).pipe(map(body => {\n            return body.speakers.map(o => App.Speaker.fromJSON(o))[0];\n        }));\n    }\n\n    public deleteSpeaker(speaker: App.Speaker): Observable<void> {\n        return this.auth.DELETE(`/admin/api/1/speakers/${speaker.id}`, {}).pipe(map(() => { }));\n    }\n\n    public getAllFeeds(): Observable<Array<App.Feed>> {\n        return this.auth.GET('/admin/api/1/feeds', {}).pipe(map(response => {\n            return (response.body.feeds || []).map(o => App.Feed.fromJSON(o));\n        }));\n    }\n\n    public getFeed(id: number): Observable<App.Feed> {\n        return this.auth.GET(`/admin/api/1/feeds/${id}`, {}).pipe(map(response => {\n            return response.body.feeds.map(o => App.Feed.fromJSON(o))[0];\n        }));\n    }\n\n    public createFeed(): Observable<App.Feed> {\n        return this.auth.POST('/admin/api/1/feeds', {}).pipe(map(response => {\n            return response.body.feeds.map(o => App.Feed.fromJSON(o))[0];\n        }));\n    }\n\n    public updateFeed(feed: App.FeedUpdate): Observable<App.Feed> {\n        return this.auth.PUT(`/admin/api/1/feeds/${feed.id}`, {}, {}, feed).pipe(mergeMap(response => {\n            return this.getFeed(feed.id);\n        }));\n    }\n\n    public uploadImageForFeed(feed: App.Feed, image: File, progress: (progress: number) => void = undefined): Observable<void> {\n        return this.auth.UPLOAD(`/admin/api/1/feeds/${feed.id}/image`, image, 'image', progress).pipe(map(() => { }));\n    }\n\n    public deleteFeed(feed: App.Feed): Observable<void> {\n        return this.auth.DELETE(`/admin/api/1/feeds/${feed.id}`, {}).pipe(map(() => { }));\n    }\n\n    public getMediaIdsForFeed(feed: App.Feed): Observable<Array<number>> {\n        return this.auth.GET(`/admin/api/1/feeds/${feed.id}/media`, {}).pipe(map(response => {\n            return response.body.ids || [];\n        }));\n    }\n\n    public addMediaIdToFeed(feed: App.Feed, id: number): Observable<void> {\n        return this.auth.PUT(`/admin/api/1/feeds/${feed.id}/media`, { id: `${id}` }).pipe(map(() => { }));\n    }\n\n    public removeMediaIdFromFeed(feed: App.Feed, id: number): Observable<void> {\n        return this.auth.DELETE(`/admin/api/1/feeds/${feed.id}/media`, { id: `${id}` }).pipe(map(() => { }));\n    }\n\n    public getAllTopics(): Observable<Array<App.Topic>> {\n        return this.auth.GET('/admin/api/1/topics', {}).pipe(map(response => {\n            return (response.body.topics || []).map(o => App.Topic.fromJSON(o));\n        }));\n    }\n}\n\nexport module App {\n    export class User {\n        public id: number;\n        public name: string;\n        public email: string;\n\n        public static fromJSON(json: any): User {\n            let result = new User();\n            Object.assign(result, json);\n            return result;\n        }\n    }\n\n    export interface UserUpdate {\n        id: number;\n        name?: string;\n        password?: string;\n    }\n\n    export class Organization {\n        public id: number;\n        public name: string;\n        public description: string;\n        public imageUrl: string;\n        public thumbnailUrl: string;\n        public url: string;\n\n        public static fromJSON(json: any): Organization {\n            let result = new Organization();\n            Object.assign(result, json);\n            return result;\n        }\n    }\n\n    export interface OrganizationUpdate {\n        id: number;\n        name?: string;\n        url?: string;\n        description?: string;\n    }\n\n    export class Media {\n        public id: number;\n        public name: string;\n        public description: string;\n        public date: Date;\n        public status: number;\n        public hidden: boolean;\n        public type: number;\n        public audioUrl: string;\n        public audioStatus: string;\n        public vimeoStatus: string;\n        public youtubeId: string;\n        public youtubeStatus: string;\n        public youtubeMetadataUpdate: boolean;\n        public videoUrl: string;\n        public streamUrl: string;\n        public imageUrl: string;\n        public thumbnailUrl: string;\n        public organizationId: number;\n        public seriesId: number;\n        public speakerIds: Array<number>;\n        public topicIds: Array<number>;\n\n        public static fromJSON(json: any): Media {\n            let result = new Media();\n            Object.assign(result, json);\n            result.date = json.date && new Date(json.date);\n            Media.adjustStatusForThirdParties(result);\n            return result;\n        }\n\n        private static adjustStatusForThirdParties(media: Media) {\n            if (media.status === 3) {\n                var audio = media.audioStatus;\n                var vimeo = media.vimeoStatus;\n                var youtube = media.youtubeStatus;\n\n                if (media.type === 1) { // audio\n                    if (audio !== 'complete') {\n                        media.status = 2;\n                    }\n                    if (audio === 'error') {\n                        media.status = 4;\n                    }\n                } else {\n                    if (audio !== 'complete' || vimeo !== 'complete' || (youtube && youtube !== 'complete')) {\n                        media.status = 2;\n                    }\n                    if (audio === 'error' || vimeo === 'error' || youtube === 'error') {\n                        media.status = 4;\n                    }\n                }\n            }\n        }\n    }\n\n    export interface MediaUpdate {\n        id: number;\n        name?: string;\n        description?: string;\n        date?: number;\n        hidden?: boolean;\n        youtubeMetadataUpdate?: boolean;\n        seriesId?: number;\n        speakerIds?: Array<number>;\n        topicIds?: Array<number>;\n        youtubeStatus?: string; // BE VERY CAREFUL WHEN SETTING THIS\n    }\n\n    export class MediaUploadPolicy {\n        public url: string;\n        public key: string;\n        public acl: string;\n        public policy: string;\n        public signature: string;\n        public accessKeyId: string;\n\n        public static fromJSON(json: any): MediaUploadPolicy {\n            let result = new MediaUploadPolicy();\n            Object.assign(result, json);\n            return result;\n        }\n    }\n\n    export class Series {\n        public id: number;\n        public name: string;\n        public description: string;\n        public imageUrl: string;\n        public thumbnailUrl: string;\n        public organizationId: number;\n\n        public static fromJSON(json: any): Series {\n            let result = new Series();\n            Object.assign(result, json);\n            return result;\n        }\n    }\n\n    export interface SeriesUpdate {\n        id: number;\n        name?: string;\n        description?: string;\n    }\n\n    export class Speaker {\n        public id: number;\n        public name: string;\n        public description: string;\n        public imageUrl: string;\n        public thumbnailUrl: string;\n        public count: number;\n        public ownerId: number;\n\n        public static fromJSON(json: any): Speaker {\n            let result = new Speaker();\n            Object.assign(result, json);\n            return result;\n        }\n    }\n\n    export interface SpeakerUpdate {\n        id: number;\n        name?: string;\n        description?: string;\n    }\n\n    export class Feed {\n        public id: number;\n        public title: string;\n        public subtitle: string;\n        public description: string;\n        public type: number;\n        public copyright: string;\n        public url: string;\n        public email: string;\n        public category: string;\n        public keywords: string;\n\n        public mediaIds: Array<number> = [];\n\n        public static fromJSON(json: any): Feed {\n            let result = new Feed();\n            Object.assign(result, json);\n            return result;\n        }\n    }\n\n    export interface FeedUpdate {\n        id: number;\n        title?: string;\n        subtitle?: string;\n        description?: string;\n        type?: number;\n        copyright?: string;\n        url?: string;\n        email?: string;\n        category?: string;\n        keywords?: string;\n    }\n\n    export class Topic {\n        public id: number;\n        public name: string;\n        public category: string;\n\n        public static fromJSON(json: any): Topic {\n            let result = new Topic();\n            Object.assign(result, json);\n            return result;\n        }\n    }\n\n    export class SubscriptionInfo {\n        public account: StripeAccount;\n        public subscription: StripeSubscription;\n        public card: StripeCard;\n        public plans: Array<StripePlan>;\n\n        public static fromJSON(json: any): SubscriptionInfo {\n            let result = new SubscriptionInfo();\n            result.account = json.account ? StripeAccount.fromJSON(json.account) : undefined;\n            result.subscription = json.subscription ? StripeSubscription.fromJSON(json.subscription) : undefined;\n            result.card = json.card ? StripeCard.fromJSON(json.card) : undefined;\n            result.plans = json.plans?.length ? json.plans.map(o => StripePlan.fromJSON(o)) : undefined;\n            return result;\n        }\n    }\n\n    export class StripeAccount {\n        public id: number;\n        public organizationId: number;\n        public customerId: string;\n        public planId: string;\n\n        public static fromJSON(json: any): StripeAccount {\n            let result = new StripeAccount();\n            Object.assign(result, json);\n            return result;\n        }\n    }\n\n    export class StripeCard {\n        public id: string;\n        public address_zip: string;\n        public exp_month: number;\n        public exp_year: number;\n        public last4: string;\n\n        public static fromJSON(json: any): StripeCard {\n            let result = new StripeCard();\n            Object.assign(result, json);\n            return result;\n        }\n    }\n\n    export class StripeSubscription {\n        public id: string;\n        public cancel_at_period_end: boolean;\n        public current_period_start: number;\n        public current_period_end: number;\n        public status: string; // 'active' or not\n\n        public static fromJSON(json: any): StripeSubscription {\n            let result = new StripeSubscription();\n            Object.assign(result, json);\n            return result;\n        }\n    }\n\n    export class StripePlan {\n        public id: string;\n        public nickname: string;\n        public amount: number;\n\n        public static fromJSON(json: any): StripePlan {\n            let result = new StripePlan();\n            Object.assign(result, json);\n            return result;\n        }\n    }\n}\n","import { AppAPI } from './app.api';\nimport { AuthService } from '../auth.service';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, Observable } from 'rxjs';\nimport { Manager } from '@classes/manager';\nimport { Router } from '@angular/router';\nimport { UserManager } from './managers/user.manager';\nimport { SeriesManager } from './managers/series.manager';\nimport { SpeakerManager } from './managers/speaker.manager';\nimport { FeedManager } from './managers/feed.manager';\nimport { TopicManager } from './managers/topic.manager';\nimport { OrganizationManager } from './managers/organization.manager';\nimport Hashids from 'hashids';\n\n@Injectable()\nexport class AppService {\n    public API: AppAPI;\n    public hashids = new Hashids('ca8b97bb-de3d-4d22-8716-195354fa1e4c', 11);\n\n    public userManager: UserManager;\n    public organizationManager: OrganizationManager;\n    public seriesManager: SeriesManager;\n    public speakerManager: SpeakerManager;\n    public feedManager: FeedManager;\n    public topicManager: TopicManager;\n\n    private allManagers: Array<Manager> = [];\n\n    constructor(\n        public auth: AuthService,\n        private router: Router,\n    ) {\n        this.API = new AppAPI(auth);\n\n        this.userManager = new UserManager(this.API);\n        this.organizationManager = new OrganizationManager(this.API);\n        this.seriesManager = new SeriesManager(this.API);\n        this.speakerManager = new SpeakerManager(this.API);\n        this.feedManager = new FeedManager(this.API);\n        this.topicManager = new TopicManager(this.API);\n\n        this.allManagers = [\n            this.userManager,\n            this.organizationManager,\n            this.seriesManager,\n            this.speakerManager,\n            this.feedManager,\n            this.topicManager];\n    }\n\n    public start(): Observable<any> {\n        this.allManagers.forEach(o => o.enabled = true);\n        return forkJoin(...this.allManagers.map(o => o.refresh()));\n    }\n\n    public stop() {\n        this.allManagers.forEach(manager => {\n            manager.enabled = false;\n            manager.cancel();\n            manager.reset();\n        });\n    }\n}\n","import { Observable, forkJoin, of } from 'rxjs';\nimport { Manager } from '@classes/manager';\nimport { App, AppAPI } from '../app.api';\nimport { mergeMap, map } from 'rxjs/operators';\n\nexport class FeedManager extends Manager {\n    public static sharedInstance: FeedManager = undefined;\n\n    public feeds: Array<App.Feed> = [];\n\n    constructor(private api: AppAPI) {\n        super();\n        FeedManager.sharedInstance = this;\n    }\n\n    protected fetchData(): Observable<any> {\n        return this.api.getAllFeeds().pipe(mergeMap(feeds => {\n            if (!feeds.length) { return of([]); }\n            return forkJoin(feeds.map(feed => {\n                return this.api.getMediaIdsForFeed(feed).pipe(map(ids => {\n                    feed.mediaIds = ids;\n                    return feed;\n                }));\n            }));\n        }));\n    }\n\n    protected setData(data: any) {\n        this.feeds = data;\n    }\n\n    public reset() {\n        super.reset();\n        this.feeds = [];\n    }\n}\n","import { Observable } from 'rxjs';\nimport { Manager } from '@classes/manager';\nimport { App, AppAPI } from '../app.api';\n\nexport class OrganizationManager extends Manager {\n    public static sharedInstance: OrganizationManager = undefined;\n\n    public organization: App.Organization;\n\n    constructor(private api: AppAPI) {\n        super();\n        OrganizationManager.sharedInstance = this;\n    }\n\n    protected fetchData(): Observable<any> {\n        return this.api.getCurrentOrganization();\n    }\n\n    protected setData(data: any) {\n        this.organization = data;\n    }\n\n    public reset() {\n        super.reset();\n        this.organization = undefined;\n    }\n}\n","import { Observable } from 'rxjs';\nimport { Manager } from '@classes/manager';\nimport { App, AppAPI } from '../app.api';\n\nexport class SeriesManager extends Manager {\n    public static sharedInstance: SeriesManager = undefined;\n\n    public series: Array<App.Series> = [];\n\n    constructor(private api: AppAPI) {\n        super();\n        SeriesManager.sharedInstance = this;\n    }\n\n    protected fetchData(): Observable<any> {\n        return this.api.getAllSeries();\n    }\n\n    protected setData(data: any) {\n        this.series = data;\n    }\n\n    public reset() {\n        super.reset();\n        this.series = [];\n    }\n}\n","import { Observable } from 'rxjs';\nimport { Manager } from '@classes/manager';\nimport { App, AppAPI } from '../app.api';\n\nexport class SpeakerManager extends Manager {\n    public static sharedInstance: SpeakerManager = undefined;\n\n    public speakers: Array<App.Speaker> = [];\n\n    constructor(private api: AppAPI) {\n        super();\n        SpeakerManager.sharedInstance = this;\n    }\n\n    protected fetchData(): Observable<any> {\n        return this.api.getAllSpeakers();\n    }\n\n    protected setData(data: any) {\n        this.speakers = data;\n    }\n\n    public reset() {\n        super.reset();\n        this.speakers = [];\n    }\n}\n","import { Observable } from 'rxjs';\nimport { Manager } from '@classes/manager';\nimport { App, AppAPI } from '../app.api';\n\nexport class TopicManager extends Manager {\n    public static sharedInstance: TopicManager = undefined;\n\n    public topics: Array<App.Topic> = [];\n\n    constructor(private api: AppAPI) {\n        super();\n        TopicManager.sharedInstance = this;\n    }\n\n    protected fetchData(): Observable<any> {\n        return this.api.getAllTopics();\n    }\n\n    protected setData(data: any) {\n        this.topics = data;\n    }\n\n    public reset() {\n        super.reset();\n        this.topics = [];\n    }\n}\n","import { Observable } from 'rxjs';\nimport { Manager } from '@classes/manager';\nimport { App, AppAPI } from '../app.api';\n\nconst USER_KEY = 'hopestream.user';\n\nexport class UserManager extends Manager {\n    public static sharedInstance: UserManager = undefined;\n\n    private _user: App.User = undefined;\n    public get user(): App.User { return this._user; }\n    public set user(user: App.User) {\n        if (!!user) { this.lastRefreshTime = Date.now(); }\n        this._user = user;\n        this.writeUserToLocalStorage();\n        this.update$.next();\n    }\n\n    constructor(private api: AppAPI) {\n        super();\n        UserManager.sharedInstance = this;\n        this._user = this.readUserFromLocalStorage();\n    }\n\n    protected fetchData(): Observable<any> {\n        return this.api.getCurrentUser();\n    }\n\n    protected setData(data: any) {\n        this._user = data;\n        this.writeUserToLocalStorage();\n    }\n\n    public reset() {\n        super.reset();\n        this.user = undefined;\n    }\n\n    private readUserFromLocalStorage() {\n        return JSON.parse(localStorage.getItem(USER_KEY));\n    }\n\n    private writeUserToLocalStorage() {\n        if (!!this.user) {\n            localStorage.setItem(USER_KEY, JSON.stringify(this.user));\n        } else {\n            localStorage.removeItem(USER_KEY);\n        }\n    }\n}\n","import { ActivatedRouteSnapshot, CanActivateChild } from '@angular/router';\nimport { CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RouterStateSnapshot } from '@angular/router';\nimport { StateService } from './state.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanActivateChild {\n    constructor(private state: StateService, private router: Router) { }\n\n    public canActivate(route: ActivatedRouteSnapshot, router: RouterStateSnapshot): boolean {\n        return this.state.updateLoggedInState(router.url);\n    }\n\n    public canActivateChild(route: ActivatedRouteSnapshot, router: RouterStateSnapshot): boolean {\n        return this.state.updateLoggedInState(router.url);\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from '@environments/environment';\nimport { BehaviorSubject, Observable, of as ObservableOf, Subject, throwError } from \"rxjs\";\nimport { map, mergeMap, timeout } from \"rxjs/operators\";\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n\nconst OAUTH_CLIENT_ID = 'hopestream-admin';\nconst OAUTH_CLIENT_SECRET = 'f085c37a-5d21-4eb4-8b73-355c11d2e60d';\nconst OAUTH_CLIENT_BASE_64 = btoa(`${OAUTH_CLIENT_ID}:${OAUTH_CLIENT_SECRET}`);\n\ninterface Credentials {\n    accessToken: string;\n    refreshToken?: string;\n}\n\ninterface PendingRequest {\n    method: string;\n    path: string;\n    params: { [key: string]: string | Array<string> };\n    headers: { [key: string]: string };\n    data?: any;\n}\n\nclass PendingSubject extends Subject<HttpResponse<any>> {\n    constructor(public request: PendingRequest) { super(); }\n}\n\n@Injectable()\nexport class AuthService {\n    public loggedIn$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n    public get accessToken(): string { return this.credentials && this.credentials.accessToken; }\n\n    constructor(private http: HttpClient) {\n        this.loggedIn$.next(!!this.credentials);\n    }\n\n    private readonly CREDENTIALS_KEY = 'hopestream.credentials';\n    private get credentials(): Credentials {\n        let credentials = localStorage.getItem(this.CREDENTIALS_KEY);\n        if (!credentials) { return undefined; }\n\n        let result = JSON.parse(credentials) as Credentials;\n\n        return result;\n    }\n    private set credentials(credentials: Credentials) {\n        if (!credentials) {\n            localStorage.removeItem(this.CREDENTIALS_KEY)\n        } else {\n            localStorage.setItem(this.CREDENTIALS_KEY, JSON.stringify(credentials));\n        }\n    }\n\n    public userLogin(username: string, password: string): Observable<boolean> {\n        return this.oauthToken({\n            'grant_type': 'password',\n            'scope': 'admin',\n            'password': password,\n            'username': username,\n        }).pipe(map(credentials => {\n            this.credentials = credentials;\n            this.loggedIn$.next(true);\n            return true;\n        }));\n    }\n\n    public userLogout(): Observable<boolean> {\n        this.credentials = undefined;\n        this.loggedIn$.next(false);\n\n        return ObservableOf(true);\n    }\n\n    public userRefresh(token: string): Observable<boolean> {\n        return this.oauthToken({ 'grant_type': 'refresh_token', 'refresh_token': token })\n            .pipe(map(credentials => {\n                this.credentials = credentials;\n                this.loggedIn$.next(true);\n                return true;\n            }));\n    }\n\n    public userRegister(name: string, email: string, password: string): Observable<void> {\n        return this.getClientCredentialsHeaders().pipe(mergeMap(headers => {\n            let data = {\n                name: name,\n                email: email.toLowerCase(),\n                password: password\n            };\n\n            return this.POST('/account/register', {}, headers, data);\n        }), map(response => { }));\n    }\n\n    public userForgotPassword(email: string): Observable<void> {\n        return this.getClientCredentialsHeaders().pipe(mergeMap(headers => {\n            let data = { email: email };\n\n            return this.POST('/account/reset-password', {}, headers, data);\n        }), map(() => { }));\n    }\n\n    private getClientCredentialsHeaders(): Observable<{ [key: string]: string }> {\n        return this.oauthToken({ 'grant_type': 'client_credentials' })\n            .pipe(map(credentials => {\n                return { 'Authorization': 'Bearer ' + credentials.accessToken };\n            }));\n    }\n\n    private oauthToken(params: { [key: string]: string }): Observable<Credentials> {\n        let headers = {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Basic ' + OAUTH_CLIENT_BASE_64\n        };\n\n        let data = Object.keys(params).map(o => `${o}=${encodeURIComponent(params[o])}`).join('&');\n\n        return this.POST('/oauth/token', {}, headers, data).pipe(map(response => {\n            let data = response.body;\n            if (!data.access_token) { throw 'Invalid access token'; }\n            return { accessToken: data.access_token, refreshToken: data.refresh_token };\n        }));\n    }\n\n    private request(method: string, path: string, params_: { [key: string]: string | Array<string> }, headers_: { [key: string]: string }, data: any): Observable<HttpResponse<any>> {\n        let headers: { [key: string]: string | Array<string> } = { ...(headers_ || {}) };\n\n        if (!!data && !headers['Content-Type']) { headers['Content-Type'] = 'application/json'; }\n        if (!headers['Accept']) { headers['Accept'] = 'application/json'; }\n\n        let responseType: 'blob' | 'json' | 'text' =\n            headers['Accept'] === 'application/octet-stream' ? 'blob' : (headers['Accept'] === 'application/json' ? 'json' : 'text');\n\n        let credentials = this.credentials;\n        if (credentials && !headers['Authorization']) { headers['Authorization'] = `Bearer ${credentials.accessToken}`; }\n\n        // Workaround https://github.com/angular/angular/issues/11058\n        let params: { [key: string]: string | Array<string> } = { ...(params_ || {}) };\n        for (let key in params) {\n            if (params[key] === undefined) {\n                delete params[key];\n            } else {\n                let array: Array<any> = Array.isArray(params[key]) ? params[key] as Array<string> : [params[key] as string];\n                array = array.map(o => {\n                    if (!((o as any) instanceof Date) || !o.getTime()) { return o; }\n                    return o.toISOString(); // serialize dates in a specific way\n                }).filter(o => o !== undefined);\n                if (!array.length) {\n                    delete params[key];\n                } else {\n                    params[key] = array.length === 1 ? array[0] : array;\n                }\n            }\n        }\n\n        let url = environment.apiUrl + path;\n\n        let subject = new Subject<HttpResponse<any>>();\n        this.http.request(method, url, {\n            body: data,\n            headers: headers,\n            params: params,\n            responseType: responseType,\n            observe: 'response',\n        }).subscribe(response => {\n            subject.next(response);\n            subject.complete();\n        }, response => {\n            this.fail(response, { 'method': method, 'path': path, 'params': params_, 'headers': headers_, 'data': data }).subscribe(subject);\n        });\n\n        return subject;\n    }\n\n    public GET(path: string, params: { [key: string]: string | Array<string> }, headers: { [key: string]: string } = {}, data: any = undefined): Observable<HttpResponse<any>> {\n        return this.request('GET', path, params, headers, data);\n    }\n\n    public POST(path: string, params: { [key: string]: string | Array<string> }, headers: { [key: string]: string } = {}, data: any = undefined): Observable<HttpResponse<any>> {\n        return this.request('POST', path, params, headers, data);\n    }\n\n    public PUT(path: string, params: { [key: string]: string | Array<string> }, headers: { [key: string]: string } = {}, data: any = undefined): Observable<HttpResponse<any>> {\n        return this.request('PUT', path, params, headers, data);\n    }\n\n    public PATCH(path: string, params: { [key: string]: string | Array<string> }, headers: { [key: string]: string } = {}, data: any = undefined): Observable<HttpResponse<any>> {\n        return this.request('PATCH', path, params, headers, data);\n    }\n\n    public DELETE(path: string, params: { [key: string]: string | Array<string> }, headers: { [key: string]: string } = {}, data: any = undefined): Observable<HttpResponse<any>> {\n        return this.request('DELETE', path, params, headers, data);\n    }\n\n    private fail(response: HttpResponse<any>, request: PendingRequest): Observable<HttpResponse<any>> {\n        return this.shouldAttemptRequestAgainAfterRefreshing(response, request) || throwError(response);\n    }\n\n    private pending: Array<PendingSubject> = undefined;\n    private shouldAttemptRequestAgainAfterRefreshing(response: HttpResponse<any>, request: PendingRequest): Observable<HttpResponse<any>> {\n        var result: Observable<HttpResponse<any>> = undefined;\n\n        let json = undefined;\n        try { json = response && ((response as any).error || response.body); } catch (error) { }\n        json = json && json.error || json;\n        let error = json && typeof json === 'string' && json.toLowerCase() || '';\n\n        if ((error.indexOf('invalid_token') >= 0 || error.indexOf('unauthorized') >= 0)\n            && (!request.params.grant_type || request.params.grant_type !== 'refresh_token')) {\n            let subject = new PendingSubject(request);\n            result = subject;\n\n            if (!this.pending) {\n                this.pending = new Array<PendingSubject>();\n                this.pending.push(subject);\n                this.processRefresh();\n            } else {\n                this.pending.push(subject);\n            }\n        }\n\n        return result;\n    }\n\n    private processRefresh() {\n        let credentials = this.credentials;\n        if (!credentials || !credentials.accessToken) {\n            this.userLogout();\n            this.completeRefresh();\n            return;\n        }\n\n        if (!!credentials.refreshToken) {\n            this.userRefresh(credentials.refreshToken)\n                .subscribe(response => {\n                    this.completeRefresh();\n                }, response => {\n                    this.userLogout();\n                    this.completeRefresh();\n                });\n        }\n        else {\n            this.userLogout();\n            this.completeRefresh();\n        }\n    }\n\n    private completeRefresh() {\n        let pending = this.pending;\n        this.pending = undefined;\n\n        if (!pending) { return; }\n\n        let credentials = this.credentials;\n        for (let subject of pending) {\n            if (credentials && credentials.accessToken) {\n                let request = subject.request;\n                this.request(request.method, request.path, request.params, request.headers, request.data).subscribe(subject);\n            } else {\n                console.error('completeRefresh() Invalid access token');\n                throwError({\n                    'statusText': 'Invalid access token.',\n                    'status': 401\n                }).subscribe(subject);\n            }\n        }\n    }\n\n    public UPLOAD(path: string, data: string | Blob, name: string, progress: (progress: number) => void = undefined): Observable<any> {\n        let form: FormData = new FormData();\n        form.append(name, data, name);\n\n        let result = new Subject<any>();\n        let xhr: XMLHttpRequest = new XMLHttpRequest();\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200 || xhr.status === 204) {\n                    result.next(xhr.response && JSON.parse(xhr.response) || {});\n                    result.complete();\n                } else {\n                    result.error(xhr.response);\n                }\n            }\n        };\n\n        xhr.upload.onprogress = $event => {\n            let value = ($event.loaded / $event.total);\n            progress && progress(value);\n        };\n\n        xhr.open('POST', environment.apiUrl + path, true);\n        xhr.setRequestHeader('Authorization', 'Bearer ' + this.accessToken);\n        xhr.send(form);\n\n        return result;\n    }\n\n    public stripAPIBaseURL(url: string): string {\n        return url.replace(environment.apiUrl, '');\n    }\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class ClipboardService {\n    public target: ElementRef;\n\n    public write(value: string) {\n        this.target.nativeElement.value = value || '';\n        this.target.nativeElement.select();\n        document.execCommand('copy');\n    }\n\n    public read(): Observable<string> {\n        this.target.nativeElement.select();\n        document.execCommand('paste');\n\n        let subject = new Subject<string>();\n        setTimeout(() => {\n            let value = this.target.nativeElement.value;\n            subject.next(value);\n            subject.complete();\n        }, 100);\n\n        return subject;\n    }\n}\n","import { AuthService } from \"./auth.service\";\nimport { environment } from \"@environments/environment\";\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DownloadService {\n    public downloadComponent: any;\n\n    constructor(private auth: AuthService) { }\n\n    public downloadFileAtPath(path: string) {\n        this.downloadComponent.url = `${environment.apiUrl}${path}?access_token=${this.auth.accessToken}`;\n        setTimeout(() => {\n            this.downloadComponent.anchor.nativeElement.click();\n        }, 200);\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LayoutService {\n    public sidebarOpen: boolean = true;\n    public toolbarOpen: boolean = false;\n    public toolbarWidth: number = this.storedToolbarWidth;\n    public shortcutsVisible: boolean = false;\n\n    public persistToolbarWidth() {\n        this.storedToolbarWidth = this.toolbarWidth;\n    }\n\n    private readonly TOOLBAR_WIDTH_KEY = 'vyasa.toolbar.width';\n\n    private get storedToolbarWidth(): number {\n        let value = localStorage.getItem(this.TOOLBAR_WIDTH_KEY);\n        if (!value) { return 480; }\n        return parseInt(value);\n    }\n\n    private set storedToolbarWidth(value: number) {\n        if (!value) {\n            localStorage.removeItem(this.TOOLBAR_WIDTH_KEY)\n        } else {\n            localStorage.setItem(this.TOOLBAR_WIDTH_KEY, `${value}`);\n        }\n    }\n}\n","import { CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { of as ObservableOf } from 'rxjs';\nimport { StateService } from './state.service';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class LoadingGuard implements CanActivate {\n    constructor(private state: StateService) {}\n\n    public canActivate(): Observable<boolean> {\n        if (!this.state.loading$.getValue()) { return ObservableOf(true); }\n\n        let subject = new Subject<boolean>();\n        let subscription = this.state.loading$.subscribe(value => {\n            if (!value) {\n                subject.next(true);\n                subject.complete();\n                subscription.unsubscribe();\n            }\n        });\n\n        return subject;\n    }\n}\n","import { Router, NavigationEnd, NavigationCancel } from \"@angular/router\";\nimport { AppService } from './app/app.service';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from \"rxjs\";\nimport { mergeMap, map } from \"rxjs/operators\";\nimport { forkJoin } from \"rxjs\";\nimport { AsyncDataSource } from \"@classes/async-data-source\";\nimport { History } from \"@classes/history\";\nimport { Angulartics2 } from 'angulartics2';\nimport { Angulartics2GoogleGlobalSiteTag } from 'angulartics2/gst';\nimport { environment } from '@environments/environment';\nimport * as Sentry from \"@sentry/browser\";\nimport { App } from './app/app.api';\n\n@Injectable()\nexport class StateService {\n    public loading$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n    public history: History;\n\n    constructor(\n        private app: AppService,\n        private router: Router,\n        private angulartics: Angulartics2,\n        private google: Angulartics2GoogleGlobalSiteTag,\n    ) {\n        this.angulartics.settings.developerMode = !environment.production;\n        // this.google.startTracking();\n\n        this.history = new History(router);\n\n        this.app.userManager.update$.subscribe(() => {\n            this.updateLoggedInState();\n        });\n        this.app.auth.loggedIn$.subscribe(loggedIn => {\n            this.updateLoggedInState();\n        });\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationEnd || event instanceof NavigationCancel) {\n                this.redirecting = undefined;\n            }\n        });\n    }\n\n    public ngOnDestroy() {\n        this.history.shutdown();\n    }\n\n    public login(usernameOrEmail: string, password: string): Observable<App.User> {\n        return this.app.auth.userLogin(usernameOrEmail, password).pipe(mergeMap((response) => {\n            return this.app.API.getCurrentUser();\n        }), map((user: App.User) => {\n            this.app.userManager.user = user;\n            return user;\n        }));\n    }\n\n    public logout() {\n        this.history.shutdown();\n        this.app.auth.userLogout();\n    }\n\n    private loggedIn: boolean;\n\n    public isLoggedIn(): boolean {\n        return this.loggedIn;\n    }\n\n    public updateLoggedInState(url: string = undefined): boolean {\n        if (url) { this.initialRouteLoaded = true; }\n        this.loggedIn = !!this.app.userManager.user && this.app.auth.loggedIn$.value;\n        this.updateDataSource();\n        return this.updateVisibleView(url || this.router.url);\n    }\n\n    private initialRouteLoaded: boolean = false;\n    private redirecting: string;\n    private routeToLoadUponAuthenticating: string;\n    private updateVisibleView(url: string): boolean {\n        if (!this.initialRouteLoaded) { return true; }\n        if (this.redirecting) { return url === this.redirecting; }\n\n        let noauth = ['/sign-in', '/forgot-password'];\n        let state = noauth.find(o => url.indexOf(o) === 0) ? 'noauth' : 'auth';\n\n        let redirect: string = undefined;\n        if (this.loggedIn && state === 'noauth') {\n            redirect = this.routeToLoadUponAuthenticating || '/media';\n            this.routeToLoadUponAuthenticating = undefined;\n        } else if (!this.loggedIn && state === 'auth') {\n            redirect = '/sign-in';\n            this.routeToLoadUponAuthenticating = url;\n        }\n\n        if (redirect) {\n            this.redirecting = redirect;\n\n            let parts = redirect.split('?');\n            let queryParams = {};\n            if (parts.length > 1) {\n                let params = parts[1].split('&');\n                params.forEach(o => {\n                    let parts = o.split('=');\n                    queryParams[parts[0]] = parts[1];\n                });\n            }\n\n            this.router.navigate([parts[0]], { queryParams });\n            return false;\n        }\n\n        return true;\n    }\n\n    private dataSource: AsyncDataSource<Array<any>> = undefined;\n    private ignoreDataSourceUpdate: boolean = false;\n\n    private updateDataSource() {\n        if (this.ignoreDataSourceUpdate) {\n            return;\n        }\n\n        if (this.loggedIn && !this.dataSource) {\n            // the user is newly logged in.  fetch all the local data needed to\n            // run the application.\n            this.loading$.next(true);\n            this.dataSource = new AsyncDataSource<Array<any>>(() => {\n                return forkJoin(\n                    this.app.start(),\n                );\n            });\n            this.dataSource.callback = (result) => {\n                if (result) {\n                    let user: App.User = this.app.userManager.user;\n\n                    // let instance = window.location.hostname.split('.').shift() || 'unknown';\n                    // let key = `${instance}_${user.id}`;\n\n                    // this.angulartics.setUsername.next(key);\n                    // Sentry.setUser({ id: key, email: user.email, username: key });\n\n                    this.loading$.next(false);\n                } else {\n                    this.logout();\n                }\n            }\n            this.dataSource.processor.maxRetryCount = 3;\n            this.dataSource.refresh();\n\n\n        } else if (!this.loggedIn) {\n            // the user is newly logged out.  kill all local data and stop\n            // refreshing until the user logs in again.\n            if (this.dataSource || this.loading$.getValue()) {\n                this.ignoreDataSourceUpdate = true;\n                // this.angulartics.setUsername.next(undefined);\n                // Sentry.configureScope(scope => scope.clear());\n                this.app.stop();\n                this.ignoreDataSourceUpdate = false;\n            }\n\n            if (this.dataSource) {\n                this.dataSource.callback = undefined;\n                this.dataSource.cancel();\n                this.dataSource = undefined;\n            }\n\n            if (this.loading$.getValue()) {\n                this.loading$.next(false);\n            }\n        }\n    }\n}\n","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { StateService } from '@services/state.service';\nimport { ClipboardService } from '@services/clipboard.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    public loading: boolean = true;\n\n    public notificationsOptions: any = {\n        position: ['bottom', 'right'],\n        pauseOnHover: true,\n        timeOut: 15000,\n    };\n\n    @ViewChild('clipboardTarget', { static: true })\n    public clipboardTarget: ElementRef;\n\n    constructor(\n        private state: StateService,\n        private clipboard: ClipboardService) { }\n\n    public ngOnInit() {\n        this.state.loading$.subscribe(value => {\n            this.loading = value;\n        });\n        this.clipboard.target = this.clipboardTarget;\n    }\n}\n","<div>\n    <textarea #clipboardTarget type=\"text\" style=\"position: fixed; top: -100px;\"></textarea>\n    <app-download></app-download>\n    <simple-notifications [options]=\"notificationsOptions\"></simple-notifications>\n    <div *ngIf=\"loading\" class=\"loading-overlay\">\n        <app-loading-indicator></app-loading-indicator>\n    </div>\n    <router-outlet *ngIf=\"!loading\"></router-outlet>\n</div>","import * as Sentry from \"@sentry/browser\";\nimport { environment } from '@environments/environment';\n\nimport { Angulartics2Module } from 'angulartics2';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule, Injectable, ErrorHandler, Provider } from '@angular/core';\nimport { RoutingModule } from './routing.module';\nimport { AppComponent } from './app.component';\nimport { BaseComponent } from './base/base.component';\nimport { SignInComponent } from './sign-in/sign-in/sign-in.component';\nimport { DownloadComponent } from '@common/download/download.component';\nimport { AppService } from '@services/app/app.service';\nimport { AuthGuard } from '@services/auth-guard';\nimport { AuthService } from '@services/auth.service';\nimport { DownloadService } from '@services/download.service';\nimport { LoadingGuard } from '@services/loading-guard';\nimport { StateService } from '@services/state.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SimpleNotificationsModule } from 'angular2-notifications';\nimport { SetTitleDirective } from '@common/set-title/set-title.directive';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { LoadingIndicatorComponent } from '@common/loading-indicator/loading-indicator.component';\nimport { DialogModule } from 'primeng/dialog';\nimport { PopoverComponent } from '@common/popover/popover.component';\nimport { ActionIconComponent } from '@common/action-icon/action-icon.component';\nimport { InlineSVGDirective } from '@common/inline-svg/inline-svg.directive';\nimport { GuardedActionComponent } from '@common/guarded-action/guarded-action.component';\nimport { SafeHtmlPipe, SafeResourceUrlPipe } from '@common/safe-html/safe-html.pipe';\nimport { ClipboardService } from '@services/clipboard.service';\nimport { AutofocusDirective } from '@common/autofocus/autofocus.directive';\nimport { IconComponent } from '@common/icon/icon.component';\nimport { FormErrorComponent } from '@common/form-error/form-error.component';\nimport { HttpClientModule, HttpClientJsonpModule } from '@angular/common/http';\nimport { LayoutService } from '@services/layout.service';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { HeaderComponent } from './header/header.component';\nimport { MediaListComponent } from './media/media-list/media-list.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSort, faSortUp, faSortDown, faChevronLeft, faExclamationTriangle, faInfoCircle, faCheckCircle, faExclamationCircle, faQuestionCircle, faTimes, faChevronDown, faCloudUpload, faClipboard, faTrash, faCog, faSignOut } from '@fortawesome/pro-duotone-svg-icons';\nimport { MediaDetailComponent } from './media/media-detail/media-detail.component';\nimport { CalendarModule } from 'primeng/calendar';\nimport { SelectionBoxComponent } from '@common/selection-box/selection-box.component';\nimport { CopyBoxComponent } from '@common/copy-box/copy-box.component';\nimport { VideoPlayerComponent } from '@common/video-player/video-player.component';\nimport { OrganizationDetailComponent } from './organization/organization-detail/organization-detail.component';\nimport { SeriesListComponent } from './series/series-list/series-list.component';\nimport { SeriesDetailComponent } from './series/series-detail/series-detail.component';\nimport { ReusableMediaListComponent } from './media/reusable-media-list/reusable-media-list.component';\nimport { SpeakerListComponent } from './speaker/speaker-list/speaker-list.component';\nimport { SpeakerDetailComponent } from './speaker/speaker-detail/speaker-detail.component';\nimport { FeedListComponent } from './feed/feed-list/feed-list.component';\nimport { FeedDetailComponent } from './feed/feed-detail/feed-detail.component';\nimport { MediaUploadComponent } from './media/media-upload/media-upload.component';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { MediaFormComponent } from './media/media-form/media-form.component';\nimport { RedirectComponent } from '@common/redirect/redirect.component';\nimport { SettingsComponent } from './settings/settings.component';\n\n\n// @Injectable()\n// export class SentryErrorHandler implements ErrorHandler {\n//     constructor() {\n//         Sentry.init({ dsn: 'https://e159fa9ce33548c0aef9ac28c37ace12@sentry.io/1803587', release: environment.version });\n//     }\n\n//     handleError(error) {\n//         Sentry.captureException(error.originalError || error);\n//     }\n// }\n\nlet providers: Array<Provider> = [\n    AppService,\n    AuthGuard,\n    AuthService,\n    ClipboardService,\n    DownloadService,\n    LoadingGuard,\n    StateService,\n    LayoutService,\n    { provide: ErrorHandler, useFactory: getErrorHandler }\n];\n\nexport function getErrorHandler(): ErrorHandler {\n    // if (environment.production) {\n    //     return new SentryErrorHandler()\n    // }\n    return new ErrorHandler()\n}\n\n@NgModule({\n    declarations: [\n        ActionIconComponent,\n        AppComponent,\n        BaseComponent,\n        DownloadComponent,\n        GuardedActionComponent,\n        InlineSVGDirective,\n        LoadingIndicatorComponent,\n        PopoverComponent,\n        SafeHtmlPipe,\n        SafeResourceUrlPipe,\n        SetTitleDirective,\n        SignInComponent,\n        AutofocusDirective,\n        IconComponent,\n        FormErrorComponent,\n        SidebarComponent,\n        HeaderComponent,\n        MediaListComponent,\n        MediaDetailComponent,\n        SelectionBoxComponent,\n        CopyBoxComponent,\n        VideoPlayerComponent,\n        OrganizationDetailComponent,\n        SeriesListComponent,\n        SeriesDetailComponent,\n        ReusableMediaListComponent,\n        SpeakerListComponent,\n        SpeakerDetailComponent,\n        FeedListComponent,\n        FeedDetailComponent,\n        MediaUploadComponent,\n        MediaFormComponent,\n        RedirectComponent,\n        SettingsComponent,\n    ],\n    imports: [\n        Angulartics2Module.forRoot(),\n        BrowserAnimationsModule,\n        BrowserModule,\n        CalendarModule,\n        DialogModule,\n        FontAwesomeModule,\n        FormsModule,\n        HttpClientJsonpModule,\n        HttpClientModule,\n        InfiniteScrollModule,\n        NgxDropzoneModule,\n        ProgressSpinnerModule,\n        ReactiveFormsModule,\n        RoutingModule,\n        SimpleNotificationsModule.forRoot(),\n    ],\n    providers: providers,\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor(library: FaIconLibrary) {\n        library.addIcons(\n            faCheckCircle,\n            faChevronDown,\n            faChevronLeft,\n            faClipboard,\n            faCloudUpload,\n            faCog,\n            faExclamationCircle,\n            faExclamationTriangle,\n            faInfoCircle,\n            faSignOut,\n            faSort,\n            faSortDown,\n            faSortUp,\n            faTimes,\n            faTrash,\n            faQuestionCircle);\n    }\n}\n","import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { fromEvent as ObservableFromEvent, Subscription } from \"rxjs\";\nimport { StateService } from '@services/state.service';\nimport { LayoutService } from '@services/layout.service';\nimport { UserManager } from '@services/app/managers/user.manager';\nimport { App } from '@services/app/app.api';\n\n@Component({\n    selector: 'app-base',\n    templateUrl: './base.component.html',\n    styleUrls: ['./base.component.scss']\n})\nexport class BaseComponent implements OnInit, OnDestroy {\n    public subscription: Subscription;\n\n    constructor(\n        public state: StateService,\n        public layout: LayoutService,\n    ) { }\n\n    public ngOnInit() {\n    }\n\n    public ngOnDestroy() {\n        if (this.subscription) { this.subscription.unsubscribe(); }\n    }\n\n    public get user(): App.User {\n        return UserManager.sharedInstance.user;\n    }\n}\n","<div class=\"center-container\" [class.sidebar-closed]=\"!layout.sidebarOpen\">\n    <div class=\"top-container\">\n        <app-header></app-header>\n    </div>\n    <div class=\"bottom-container\">\n        <div class=\"content-container\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { AppService } from '@services/app/app.service';\nimport { App } from '@services/app/app.api';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { finalize, catchError, mergeMap } from 'rxjs/operators';\nimport { Utility } from '@classes/utility';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { NotificationsService } from 'angular2-notifications';\nimport { forkJoin, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\n\n@Component({\n    selector: 'app-feed-detail',\n    templateUrl: './feed-detail.component.html',\n    styleUrls: ['./feed-detail.component.scss']\n})\nexport class FeedDetailComponent implements OnInit {\n    public Utility = Utility;\n\n    public loading = true;\n    public feed: App.Feed;\n    public media: Array<App.Media> = [];\n    public form: FormGroup;\n    public imageUrl: string;\n    public feedUrl: string;\n\n    constructor(\n        private app: AppService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private notifications: NotificationsService,\n        private http: HttpClient) { }\n\n    public ngOnInit() {\n        this.form = new FormGroup({});\n        this.form.addControl('title', new FormControl(undefined));\n        this.form.addControl('subtitle', new FormControl(undefined));\n        this.form.addControl('type', new FormControl(undefined));\n        this.form.addControl('description', new FormControl(undefined));\n        this.form.addControl('url', new FormControl(undefined));\n        this.form.addControl('email', new FormControl(undefined));\n        this.form.addControl('copyright', new FormControl(undefined));\n        this.form.addControl('category', new FormControl(undefined));\n        this.form.addControl('keywords', new FormControl(undefined));\n\n        const id = parseInt(this.route.snapshot.params.id);\n        const hash = this.app.hashids.encode(id);\n        const imageUrl = `https://hopestream.s3.amazonaws.com/feed/${hash}/thumbnail.jpg?t=${new Date().valueOf()}`;\n\n        forkJoin(\n            this.app.API.getFeed(id),\n            this.app.API.getAllMedia(),\n            this.app.API.getMediaIdsForFeed({ id: id } as App.Feed),\n            this.http.get(imageUrl, { responseType: 'blob' }).pipe(catchError(() => of(undefined)))\n        ).pipe(finalize(() => {\n            this.loading = false;\n        })).subscribe(responses => {\n            this.feed = responses[0];\n            let mediaIds = {};\n            responses[2].forEach(o => mediaIds[o] = true);\n            this.media = responses[1].filter(o => mediaIds[o.id]);\n            this.form.controls.title.setValue(this.feed.title);\n            this.form.controls.subtitle.setValue(this.feed.subtitle);\n            this.form.controls.type.setValue(this.feed.type);\n            this.form.controls.description.setValue(this.feed.description);\n            this.form.controls.url.setValue(this.feed.url);\n            this.form.controls.email.setValue(this.feed.email);\n            this.form.controls.copyright.setValue(this.feed.copyright);\n            this.form.controls.category.setValue(this.feed.category);\n            this.form.controls.keywords.setValue(this.feed.keywords);\n            this.imageUrl = responses[3] ? imageUrl : undefined;\n            this.feedUrl = `${environment.staticUrl}feed/${hash}/feed.rss`;\n        });\n    }\n\n    public saving: boolean = false;\n    public onSave() {\n        let feed: App.FeedUpdate = { id: this.feed.id };\n        feed.title = this.form.controls.title.value;\n        feed.subtitle = this.form.controls.subtitle.value || null;\n        feed.type = this.form.controls.type.value;\n        feed.description = this.form.controls.description.value || null;\n        feed.url = this.form.controls.url.value || null;\n        feed.email = this.form.controls.email.value || null;\n        feed.copyright = this.form.controls.copyright.value || null;\n        feed.category = this.form.controls.category.value || null;\n        feed.keywords = this.form.controls.keywords.value || null;\n\n        this.saving = true;\n        this.app.API.updateFeed(feed).pipe(finalize(() => {\n            this.saving = false;\n        })).subscribe(feed => {\n            this.feed = feed;\n            this.notifications.success('Success', 'Feed details saved successfully.', { timeOut: 5000 });\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem saving.');\n        });\n    }\n\n    public uploading: File;\n    public progress: number;\n\n    public onImageSelected(event: any) {\n        let file: File = event.target?.files?.length && event.target.files[0] || undefined;\n        if (!file) { return; }\n\n        this.uploading = file;\n        this.progress = 0;\n\n        this.app.API.uploadImageForFeed(this.feed, file, progress => {\n            this.progress = progress;\n        }).pipe(finalize(() => {\n            this.uploading = undefined;\n            this.progress = 1;\n        })).subscribe(() => {\n            this.notifications.success('Success', 'Feed image updated.', { timeOut: 5000 });\n            const hash = this.app.hashids.encode(this.feed.id);\n            this.imageUrl = `https://hopestream.s3.amazonaws.com/feed/${hash}/thumbnail.jpg?t=${new Date().valueOf()}`;\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem uploading.');\n        });\n    }\n\n    public deleteDialogVisible: boolean = false;\n    public deleting: boolean = false;\n\n    public onDelete() {\n        this.deleting = true;\n        this.app.API.deleteFeed(this.feed).pipe(finalize(() => {\n            this.deleting = false;\n        })).subscribe(() => {\n            this.router.navigate(['/feeds']);\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem deleting.');\n        });\n    }\n}\n","<div class=\"breadcrumb-container\">\n    <a [routerLink]=\"['/feeds']\">\n        <fa-icon [icon]=\"['fad', 'chevron-left']\"></fa-icon>\n        Back to Feed List\n    </a>\n</div>\n\n<ng-container *ngIf=\"!loading\">\n    <div class=\"header-container\">\n        <div class=\"title\">\n            {{ feed.title || 'Untitled' }}\n        </div>\n    </div>\n\n    <div class=\"content-section\">\n        <div class=\"title\">Details</div>\n\n        <form [formGroup]=\"form\">\n            <div class=\"column-container\">\n                <div class=\"column\">\n                    <div class=\"input-container\">\n                        <div class=\"label\">Title</div>\n                        <input type=\"text\" [formControlName]=\"'title'\" [placeholder]=\"'Untitled'\" />\n                    </div>\n                </div>\n                <div class=\"column\">\n                    <div class=\"input-container\">\n                        <div class=\"label\">Type</div>\n                        <select [formControlName]=\"'type'\">\n                            <option value=\"1\">Audio Podcast</option>\n                            <option value=\"0\">Video Podcast</option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n            <div class=\"column-container\">\n                <div class=\"column\">\n                    <div class=\"input-container\">\n                        <div class=\"label\">Subtitle</div>\n                        <input type=\"text\" [formControlName]=\"'subtitle'\" [placeholder]=\"'Weekly messages from HopeStream'\" />\n                    </div>\n                </div>\n            </div>\n            <div class=\"input-container\">\n                <div class=\"label\">Description</div>\n                <textarea [formControlName]=\"'description'\" rows=\"6\" [placeholder]=\"'Give a high-level overview of the content of this series...'\"></textarea>\n            </div>\n            <div class=\"column-container\">\n                <div class=\"column\">\n                    <div class=\"input-container\">\n                        <div class=\"label\">URL</div>\n                        <input type=\"text\" [formControlName]=\"'url'\" [placeholder]=\"'https://hopestream.com'\" />\n                    </div>\n                </div>\n                <div class=\"column\">\n                    <div class=\"input-container\">\n                        <div class=\"label\">E-mail</div>\n                        <input type=\"text\" [formControlName]=\"'email'\" [placeholder]=\"'marketing@hopestream.com'\" />\n                    </div>\n                </div>\n            </div>\n            <div class=\"column-container\">\n                <div class=\"column\">\n                    <div class=\"input-container\">\n                        <div class=\"label\">Copyright</div>\n                        <input type=\"text\" [formControlName]=\"'copyright'\" [placeholder]=\"'Copyright HopeStream 2020'\" />\n                    </div>\n                </div>\n                <div class=\"column\">\n                    <div class=\"input-container\">\n                        <div class=\"label\">Category</div>\n                        <input type=\"text\" [formControlName]=\"'category'\" [placeholder]=\"'Religion & Spirituality'\" />\n                    </div>\n                </div>\n            </div>\n            <div class=\"input-container\">\n                <div class=\"label\">Keywords (comma-separated list, no spaces)</div>\n                <textarea [formControlName]=\"'keywords'\" rows=\"3\" [placeholder]=\"'Hope,Stream,HopeStream,Jesus,Christ,Church,...'\"></textarea>\n            </div>\n        </form>\n\n        <button class=\"button\" [disabled]=\"!form || !form.valid || saving\" (click)=\"onSave()\">Save</button>\n    </div>\n\n    <div class=\"content-section\">\n        <div class=\"title\">Image</div>\n\n        <div class=\"image-content-container\">\n            <div class=\"image-content-row\">\n                <div class=\"image-content-col image-content-col-third\">\n                    <div class=\"image-upload-container\">\n                        <input #input type=\"file\" style=\"display: none\" accept=\"image/jpg,image/jpeg\" (change)=\"onImageSelected($event); input.value = null;\">\n                        <div>Upload an image for this media.</div>\n                        <div>Image must be in <strong>.jpg</strong> format.</div>\n\n                        <ng-container *ngIf=\"!uploading\">\n                            <button class=\"button\" (click)=\"input.click()\">\n                                <fa-icon [icon]=\"['fad', 'cloud-upload']\"></fa-icon>Upload Image\n                            </button>\n                        </ng-container>\n\n                        <ng-container *ngIf=\"uploading\">\n                            <div class=\"label\">Uploading Image</div>\n                            <div class=\"upload-name\">{{ uploading.name }}</div>\n                            <div class=\"progress-bar-container\">\n                                <div class=\"progress-bar\" [style.width.%]=\"progress * 100\"></div>\n                            </div>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"image-content-col\">\n                    <div class=\"image-container\">\n                        <img *ngIf=\"imageUrl\" [src]=\"imageUrl\" />\n                        <div *ngIf=\"!imageUrl\" class=\"image-placeholder\">No image selected.</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"content-section\">\n        <div class=\"title\">Feed Links</div>\n\n        <div class=\"image-content-container\">\n            <div class=\"image-content-row\">\n                <div class=\"image-content-col\">\n                    <div class=\"label\">Feed</div>\n                    <app-copy-box [text]=\"feedUrl\"></app-copy-box>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"content-section\">\n        <div class=\"title\">Media</div>\n\n        <app-reusable-media-list #mediaList\n            [media]=\"media\">\n        </app-reusable-media-list>\n    </div>\n\n    <div class=\"content-section content-section-danger\">\n        <div class=\"title\">Danger Zone</div>\n\n        <div class=\"image-content-container\">\n            <div class=\"image-content-row\">\n                <div class=\"image-content-col image-content-col-half\">\n                    <div class=\"title\">Delete Feed</div>\n                    <div class=\"image-upload-container\">\n                        <div>Permanently delete this feed.</div>\n                        <div style=\"margin-top: 1rem;\"><strong>NOTE:</strong> This will not delete any media entries that are included in this feed. This will simply delete the feed, and those media records will no longer be associated with this feed.</div>\n                        <button class=\"button alert\" (click)=\"deleteDialogVisible = true\">\n                            <fa-icon [icon]=\"['fad', 'trash']\"></fa-icon>Delete Feed\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-container>\n\n<p-dialog [(visible)]=\"deleteDialogVisible\" [modal]=\"true\" [dismissableMask]=\"true\" [draggable]=\"false\" [style]=\"{ width: '480px' }\">\n    <p-header>\n        <div class=\"title\">Delete Feed</div>\n        <app-action-icon [icon]=\"'times'\" (click)=\"deleteDialogVisible = false\"></app-action-icon>\n    </p-header>\n    <div>\n        <div>Permanently delete <strong>{{ feed?.title || 'Untitled' }}</strong>?</div>\n        <div style=\"margin-top: 1rem;\"><strong>NOTE:</strong> This will not delete any media entries that are included in this feed. This will simply delete the feed, and those media records will no longer be associated with this feed.</div>\n    </div>\n    <p-footer>\n        <button class=\"button alert\" [disabled]=\"deleting\" (click)=\"onDelete()\">Delete</button>\n        <button class=\"button secondary hollow\" (click)=\"deleteDialogVisible = false\">Cancel</button>\n        <div class=\"spacer\"></div>\n    </p-footer>\n</p-dialog>","import { Component, LOCALE_ID, Inject } from \"@angular/core\";\nimport { AppService } from '@services/app/app.service';\nimport { App } from '@services/app/app.api';\nimport { Utility } from '@classes/utility';\nimport { finalize } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { NotificationsService } from 'angular2-notifications';\n\ninterface FeedListEntry {\n    id: number;\n    type: string;\n    title: string;\n    subtitle: string;\n    search?: string;\n}\n\n@Component({\n    selector: 'app-feed-list',\n    templateUrl: './feed-list.component.html',\n    styleUrls: ['./feed-list.component.scss']\n})\nexport class FeedListComponent {\n    public Utility = Utility;\n\n    public feeds: Array<App.Feed>;\n\n    public entries: Array<FeedListEntry> = [];\n    public filtered: Array<FeedListEntry> = [];\n\n    public loaded: Array<FeedListEntry> = [];\n    public sort: string = 'id';\n    public ascending: boolean = false;\n    public search: string;\n\n    constructor(\n        @Inject(LOCALE_ID) public locale: string,\n        private app: AppService,\n        private router: Router,\n        private notifications: NotificationsService) { }\n\n    public ngOnInit() {\n        this.app.API.getAllFeeds().subscribe(feeds => {\n            this.feeds = feeds;\n\n            this.entries = this.feeds.map(o => {\n                let result: FeedListEntry = {\n                    id: o.id,\n                    type: o.type ? 'Audio Podcast' : 'Video Podcast',\n                    title: o.title || 'Untitled',\n                    subtitle: o.subtitle || '',\n                };\n                result.search = `${result.type}${result.title}${result.subtitle}`.toLowerCase();\n                return result;\n            });\n\n            this.sort = 'id';\n            this.ascending = false;\n            this.updateEntries();\n        });\n    }\n\n    public onLoadMoreRows() {\n        this.loaded = this.loaded.concat(this.filtered.slice(this.loaded.length, this.loaded.length + 30));\n    }\n\n    public onSort(sort: string) {\n        if (sort !== this.sort) {\n            this.sort = sort;\n            this.ascending = true;\n        } else if (!this.ascending) {\n            this.sort = 'id';\n            this.ascending = false;\n        } else {\n            this.ascending = false;\n        }\n\n        this.updateEntries();\n    }\n\n    private readonly SortOptions = {\n        id: (a: FeedListEntry, b: FeedListEntry) => {\n            return a.id - b.id;\n        },\n        type: (a: FeedListEntry, b: FeedListEntry) => {\n            const A = (a.type || 'zzz').toLowerCase().trim();\n            const B = (b.type || 'zzz').toLowerCase().trim();\n            return A < B ? -1 : (A > B ? 1 : (a.id - b.id));\n        },\n        title: (a: FeedListEntry, b: FeedListEntry) => {\n            const A = (a.title || 'zzz').toLowerCase().trim();\n            const B = (b.title || 'zzz').toLowerCase().trim();\n            return A < B ? -1 : (A > B ? 1 : (a.id - b.id));\n        },\n        subtitle: (a: FeedListEntry, b: FeedListEntry) => {\n            const A = (a.subtitle || 'zzz').toLowerCase().trim();\n            const B = (b.subtitle || 'zzz').toLowerCase().trim();\n            return A < B ? -1 : (A > B ? 1 : (a.id - b.id));\n        },\n    };\n\n    private updateEntries() {\n        const search = (this.search || '').toLowerCase();\n        const comparator = this.SortOptions[this.sort];\n        this.filtered = this.entries.filter(o => !search || o.search.indexOf(search) >= 0).sort(this.ascending ? comparator : (a, b) => -comparator(a, b));\n        this.loaded = this.filtered.slice(0, 30);\n    }\n\n    public onSearchUpdate() {\n        this.updateEntries();\n    }\n\n    public creating: boolean = false;\n    public onAddFeed() {\n        this.creating = true;\n        this.app.API.createFeed().pipe(finalize(() => {\n            this.creating = false;\n        })).subscribe(feed => {\n            this.router.navigate(['/feeds', feed.id]);\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem creating.');\n        });\n    }\n}\n","<div class=\"scrollable-region\" infiniteScroll [scrollWindow]=\"false\" [infiniteScrollContainer]=\"'.center-container > .bottom-container'\" [fromRoot]=\"true\" (scrolled)=\"onLoadMoreRows()\">\n    <div class=\"header-container\">\n        <div class=\"title\">Feeds</div>\n        <button class=\"button\" [disabled]=\"creating\" (click)=\"onAddFeed()\">Add Feed</button>\n    </div>\n\n    <div class=\"content\">\n        <div class=\"options-container\">\n            <ng-container *ngIf=\"filtered.length\">\n                <div class=\"count\" *ngIf=\"filtered.length === entries.length\">Showing {{ entries.length | number }} {{ entries.length === 1 ? 'feed' : 'feeds' }}</div>\n                <div class=\"count\" *ngIf=\"filtered.length !== entries.length\">Showing {{ filtered.length | number }} of {{ entries.length | number }} {{ entries.length === 1 ? 'feed' : 'feeds' }}</div>\n            </ng-container>\n            <div class=\"spacer\"></div>\n            <div class=\"search\">\n                <input type=\"text\" [(ngModel)]=\"search\" (ngModelChange)=\"onSearchUpdate()\" [placeholder]=\"'Search...'\" />\n            </div>\n        </div>\n        <div class=\"table-container\">\n            <table>\n                <tr>\n                    <th style=\"width: 140px\">\n                        <div class=\"header\">\n                            <div class=\"name\">Type</div>\n                            <app-action-icon\n                                [active]=\"sort === 'type'\"\n                                [icon]=\"sort !== 'type' ? 'sort' : (ascending ? 'sort-up' : 'sort-down')\"\n                                (click)=\"onSort('type')\">\n                            </app-action-icon>\n                        </div>\n                    </th>\n                    <th style=\"width: 300px\">\n                        <div class=\"header\">\n                            <div class=\"name\">Title</div>\n                            <app-action-icon\n                                [active]=\"sort === 'title'\"\n                                [icon]=\"sort !== 'title' ? 'sort' : (ascending ? 'sort-up' : 'sort-down')\"\n                                (click)=\"onSort('title')\">\n                            </app-action-icon>\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"header\">\n                            <div class=\"name\">Subtitle</div>\n                            <app-action-icon\n                                [active]=\"sort === 'subtitle'\"\n                                [icon]=\"sort !== 'subtitle' ? 'sort' : (ascending ? 'sort-up' : 'sort-down')\"\n                                (click)=\"onSort('subtitle')\">\n                            </app-action-icon>\n                        </div>\n                    </th>\n                </tr>\n                <tr *ngFor=\"let entry of loaded\">\n                    <td>\n                        {{ entry.type }}\n                    </td>\n                    <td>\n                        <a [routerLink]=\"['/feeds', entry.id]\">\n                            {{ entry.title }}\n                        </a>\n                    </td>\n                    <td>\n                        {{ entry.subtitle }}\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"loading-container\" *ngIf=\"!feeds || !feeds.length\">\n            <div *ngIf=\"feeds\">No feeds available.</div>\n            <app-loading-indicator *ngIf=\"!feeds\"></app-loading-indicator>\n        </div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\nimport { Router } from '@angular/router';\nimport { StateService } from '@services/state.service';\nimport { UserManager } from '@services/app/managers/user.manager';\nimport { App } from '@services/app/app.api';\nimport { OrganizationManager } from '@services/app/managers/organization.manager';\nimport { HideAllPopovers } from '@common/popover/popover.component';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n    public get user(): App.User { return UserManager.sharedInstance.user; }\n    public get organization(): App.Organization { return OrganizationManager.sharedInstance.organization; }\n\n    constructor(public router: Router, private state: StateService) { }\n\n    public onViewSettings() {\n        HideAllPopovers();\n        this.router.navigate(['/settings']);\n    }\n\n    public onLogOut() {\n        this.state.logout();\n    }\n}\n","<div class=\"item logo\">\n    <img src=\"assets/images/hopestream-logo.png\">\n</div>\n<a [routerLink]=\"['/church']\" class=\"item\" [class.active]=\"router.url.startsWith('/church')\">\n    Church\n</a>\n<a [routerLink]=\"['/media']\" class=\"item\" [class.active]=\"router.url.startsWith('/media') || router.url.startsWith('/upload')\">\n    Media\n</a>\n<a [routerLink]=\"['/series']\" class=\"item\" [class.active]=\"router.url.startsWith('/series')\">\n    Series\n</a>\n<a [routerLink]=\"['/speakers']\" class=\"item\" [class.active]=\"router.url.startsWith('/speakers')\">\n    Speakers\n</a>\n<a [routerLink]=\"['/feeds']\" class=\"item\" [class.active]=\"router.url.startsWith('/feeds')\">\n    Feeds\n</a>\n<div class=\"spacer\"></div>\n<div class=\"item\" #popoverTarget (click)=\"popover.toggle($event)\">\n    {{ organization.name }}\n</div>\n\n<app-popover #popover my=\"top right\" at=\"bottom right\" [x-offset]=\"-10\" [y-offset]=\"-8\" [target]=\"popoverTarget\">\n    <div class=\"popover-section popover-section-with-icons\">\n        <div class=\"popover-item\"><strong>{{ organization.name }}</strong></div>\n        <div class=\"popover-item\">{{ user.name }}</div>\n        <div class=\"popover-item popover-item-divider\"></div>\n        <div class=\"popover-item popover-item-button\" (click)=\"onViewSettings()\">\n            <div class=\"popover-item-icon\">\n                <fa-icon [icon]=\"['fad', 'cog']\"></fa-icon>\n            </div>\n            Settings\n        </div>\n        <div class=\"popover-item popover-item-button\" (click)=\"onLogOut()\">\n            <div class=\"popover-item-icon\">\n                <fa-icon [icon]=\"['fad', 'sign-out']\"></fa-icon>\n            </div>\n            Log Out\n        </div>\n    </div>\n</app-popover>","import { Component, OnInit } from \"@angular/core\";\nimport { AppService } from '@services/app/app.service';\nimport { App } from '@services/app/app.api';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { finalize, map, mergeMap, tap, catchError } from 'rxjs/operators';\nimport { Utility } from '@classes/utility';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { SelectionBoxItem } from '@common/selection-box/selection-box.component';\nimport { SeriesManager } from '@services/app/managers/series.manager';\nimport { SpeakerManager } from '@services/app/managers/speaker.manager';\nimport { FeedManager } from '@services/app/managers/feed.manager';\nimport { TopicManager } from '@services/app/managers/topic.manager';\nimport { NotificationsService } from 'angular2-notifications';\nimport { forkJoin, of, Observable } from 'rxjs';\nimport { OrganizationManager } from '@services/app/managers/organization.manager';\nimport { environment } from '@environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n    selector: 'app-media-detail',\n    templateUrl: './media-detail.component.html',\n    styleUrls: ['./media-detail.component.scss']\n})\nexport class MediaDetailComponent implements OnInit {\n    public Utility = Utility;\n\n    public loading = true;\n    public media: App.Media;\n    public series: App.Series;\n\n    public hash: string;\n    public videoPlayerUrl: string;\n    public videoStreamUrl: string;\n    public videoFileDefaultUrl: string;\n    public videoFileSourceUrl: string;\n    public audioFileUrl: string;\n    public captionUrl: string;\n\n    constructor(\n        private app: AppService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private notifications: NotificationsService,\n        private http: HttpClient) { }\n\n    public ngOnInit() {\n        const id = parseInt(this.route.snapshot.params.id);\n        const hash = this.app.hashids.encode(id);\n        const captionUrl = `https://hopestream.s3.amazonaws.com/media/${hash}/captions-en.vtt?t=${new Date().valueOf()}`;\n\n        forkJoin(\n            this.app.API.getMedia(id),\n            this.http.get(captionUrl, { responseType: 'blob' }).pipe(catchError(() => of(undefined)))\n        ).pipe(finalize(() => {\n            this.loading = false;\n        })).subscribe(responses => {\n            this.media = responses[0];\n            this.series = this.media.seriesId ? SeriesManager.sharedInstance.series.find(o => o.id === this.media.seriesId) : undefined;\n\n            this.hash = hash;\n            this.videoPlayerUrl = `${environment.playerUrl}?id=${this.hash}`;\n            this.videoStreamUrl = `${environment.staticUrl}media/${this.hash}/master.m3u8`;\n            this.videoFileDefaultUrl = `${environment.staticUrl}media/${this.hash}/video-default.mp4`;\n            this.videoFileSourceUrl = `${environment.staticUrl}media/${this.hash}/video-source.mp4`;\n            this.audioFileUrl = `${environment.staticUrl}media/${this.hash}/audio.mp3`;\n            this.captionUrl = responses[1] ? `${environment.staticUrl}media/${this.hash}/captions-en.vtt` : undefined;\n        });\n    }\n\n    public onMediaChange(media: App.Media) {\n        this.media = media;\n        this.series = media.seriesId ? SeriesManager.sharedInstance.series.find(o => o.id === media.seriesId) : undefined;\n    }\n\n    public onReplaceMedia() {\n        this.router.navigate(['/upload', this.media.id]);\n    }\n\n    public deleteDialogVisible: boolean = false;\n    public deleting: boolean = false;\n\n    public onDelete() {\n        this.deleting = true;\n        this.app.API.deleteMedia(this.media).pipe(finalize(() => {\n            this.deleting = false;\n        })).subscribe(() => {\n            this.router.navigate(['/media']);\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem deleting.');\n        });\n    }\n\n    public uploading: File;\n    public progress: number;\n\n    public onCaptionFileSelected(event: any) {\n        let file: File = event.target?.files?.length && event.target.files[0] || undefined;\n        if (!file) { return; }\n\n        this.uploading = file;\n        this.progress = 0;\n\n        this.app.API.uploadCaptionFileForMedia(this.media, file, progress => {\n            this.progress = progress;\n        }).pipe(finalize(() => {\n            this.uploading = undefined;\n            this.progress = 1;\n        })).subscribe(() => {\n            this.notifications.success('Success', 'Caption file uploaded.', { timeOut: 5000 });\n            this.captionUrl = `${environment.staticUrl}media/${this.hash}/captions-en.vtt`;\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem uploading.');\n        });\n    }\n}\n","<div class=\"breadcrumb-container\">\n    <a [routerLink]=\"['/media']\">\n        <fa-icon [icon]=\"['fad', 'chevron-left']\"></fa-icon>\n        Back to Media\n    </a>\n</div>\n\n<ng-container *ngIf=\"!loading\">\n    <div class=\"header-container\">\n        <div class=\"title\">\n            {{ series ? (series.name || 'Untitled') + ' - ' : ''}}{{ media.name || 'Untitled' }}\n        </div>\n        <div class=\"subtitle\">\n            <div class=\"status\">\n                <div class=\"{{ Utility.StatusToClass(media.status) }}\">\n                    <fa-icon [icon]=\"['fad', Utility.StatusToIcon(media.status)]\"></fa-icon>\n                    {{ Utility.StatusToText(media.status) }}\n                </div>\n            </div>\n            <div class=\"date\">\n                {{ media.date | date:'mediumDate' }} - {{ media.date | date:'EEEE h:mm a' }}\n            </div>\n        </div>\n    </div>\n\n    <app-media-form [media]=\"media\" (mediaChange)=\"onMediaChange($event)\"></app-media-form>\n\n    <div class=\"content-section\">\n        <div class=\"title\">Media</div>\n\n        <div class=\"image-content-container\">\n            <div class=\"image-content-row\" *ngIf=\"media.type === 0\">\n                <div class=\"image-content-col\">\n                    <app-video-player\n                        [url]=\"media.status === 3 ? videoPlayerUrl : undefined\"\n                        [error]=\"media.status === 0 ? 'Your media is currently uploading.' : (media.status === 4 ? 'Please upload your media content again.' : 'Preview will be available once your media is finished processing.')\">\n                    </app-video-player>\n                    <div class=\"title\"></div>\n                </div>\n            </div>\n            <div class=\"image-content-row\">\n                <div class=\"image-content-col\">\n                    <div class=\"label\">Hash Id</div>\n                    <app-copy-box [text]=\"hash\"></app-copy-box>\n                </div>\n            </div>\n            <div class=\"image-content-row\" *ngIf=\"media.type === 0\">\n                <div class=\"image-content-col\">\n                    <div class=\"title\">Video Links</div>\n                    <div class=\"label\">Video Player</div>\n                    <app-copy-box [text]=\"videoPlayerUrl\"></app-copy-box>\n                    <div class=\"label\">Video Stream</div>\n                    <app-copy-box [text]=\"videoStreamUrl\"></app-copy-box>\n                    <div class=\"label\">Video File (Shareable)</div>\n                    <app-copy-box [text]=\"videoFileDefaultUrl\"></app-copy-box>\n                    <div class=\"label\">Video File (Full Resolution)</div>\n                    <app-copy-box [text]=\"videoFileSourceUrl\"></app-copy-box>\n                </div>\n            </div>\n            <div class=\"image-content-row\">\n                <div class=\"image-content-col\">\n                    <div class=\"title\">Audio Links</div>\n                    <div class=\"label\">Audio File</div>\n                    <app-copy-box [text]=\"audioFileUrl\"></app-copy-box>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"content-section\">\n        <div class=\"title\">Captions</div>\n\n        <div class=\"image-content-container\">\n            <div class=\"image-content-row\">\n                <div class=\"image-content-col image-content-col-third\">\n                    <div class=\"image-upload-container\">\n                        <input #input type=\"file\" style=\"display: none\" accept=\"text/vtt\" (change)=\"onCaptionFileSelected($event); input.value = null;\">\n                        <div>Upload a caption file for this media.</div>\n                        <div>File must be in <strong>.vtt</strong> format.</div>\n\n                        <ng-container *ngIf=\"!uploading\">\n                            <button class=\"button\" (click)=\"input.click()\">\n                                <fa-icon [icon]=\"['fad', 'cloud-upload']\"></fa-icon>Upload File\n                            </button>\n                        </ng-container>\n\n                        <ng-container *ngIf=\"uploading\">\n                            <div class=\"label\">Uploading Caption File</div>\n                            <div class=\"upload-name\">{{ uploading.name }}</div>\n                            <div class=\"progress-bar-container\">\n                                <div class=\"progress-bar\" [style.width.%]=\"progress * 100\"></div>\n                            </div>\n                        </ng-container>\n                    </div>\n                </div>\n            </div>\n            <div class=\"image-content-row\" *ngIf=\"captionUrl\">\n                <div class=\"image-content-col\">\n                    <div class=\"title\">Caption Links</div>\n                    <div class=\"label\">English</div>\n                    <app-copy-box [text]=\"captionUrl\"></app-copy-box>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"content-section content-section-danger\">\n        <div class=\"title\">Danger Zone</div>\n\n        <div class=\"image-content-container\">\n            <div class=\"image-content-row\">\n                <div class=\"image-content-col image-content-col-half\">\n                    <div class=\"title\">Replace Media</div>\n                    <div class=\"image-upload-container\">\n                        <div>Upload a new version of this media. This will replace the content but keep the same unique URLs for the video and audio files.</div>\n                        <div style=\"margin-top: 1rem;\"><strong>NOTE:</strong> Uploaded media will need to be processed before it is available for streaming and download.</div>\n                        <button class=\"button\" (click)=\"onReplaceMedia()\">\n                            <fa-icon [icon]=\"['fad', 'cloud-upload']\"></fa-icon>Replace Media\n                        </button>\n                    </div>\n                </div>\n                <div class=\"image-content-col image-content-col-half\">\n                    <div class=\"title\">Delete Media</div>\n                    <div class=\"image-upload-container\">\n                        <div>Permanently delete this media including all video and audio files.</div>\n                        <div style=\"margin-top: 1rem;\"><strong>NOTE:</strong> This will delete the media record and remove it from all feeds. Video and audio files will be deleted within 24 hours.</div>\n                        <button class=\"button alert\" (click)=\"deleteDialogVisible = true\">\n                            <fa-icon [icon]=\"['fad', 'trash']\"></fa-icon>Delete Media\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-container>\n\n<p-dialog [(visible)]=\"deleteDialogVisible\" [modal]=\"true\" [dismissableMask]=\"true\" [draggable]=\"false\" [style]=\"{ width: '480px' }\">\n    <p-header>\n        <div class=\"title\">Delete Media</div>\n        <app-action-icon [icon]=\"'times'\" (click)=\"deleteDialogVisible = false\"></app-action-icon>\n    </p-header>\n    <div>\n        <div>Permanently delete <strong>{{ series ? (series.name || 'Untitled') + ' - ' : ''}}{{ media?.name || 'Untitled' }}</strong>?</div>\n        <div style=\"margin-top: 1rem;\"><strong>NOTE:</strong> This will delete the media record and remove it from all feeds. Video and audio files will be deleted within 24 hours.</div>\n    </div>\n    <p-footer>\n        <button class=\"button alert\" [disabled]=\"deleting\" (click)=\"onDelete()\">Delete</button>\n        <button class=\"button secondary hollow\" (click)=\"deleteDialogVisible = false\">Cancel</button>\n        <div class=\"spacer\"></div>\n    </p-footer>\n</p-dialog>","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { AppService } from '@services/app/app.service';\nimport { App } from '@services/app/app.api';\nimport { ActivatedRoute } from '@angular/router';\nimport { finalize, map, mergeMap, tap } from 'rxjs/operators';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { SelectionBoxItem } from '@common/selection-box/selection-box.component';\nimport { SeriesManager } from '@services/app/managers/series.manager';\nimport { SpeakerManager } from '@services/app/managers/speaker.manager';\nimport { FeedManager } from '@services/app/managers/feed.manager';\nimport { TopicManager } from '@services/app/managers/topic.manager';\nimport { NotificationsService } from 'angular2-notifications';\nimport { forkJoin, of, Observable } from 'rxjs';\nimport { OrganizationManager } from '@services/app/managers/organization.manager';\n\n@Component({\n    selector: 'app-media-form',\n    templateUrl: './media-form.component.html',\n    styleUrls: ['./media-form.component.scss']\n})\nexport class MediaFormComponent implements OnInit {\n    @Input()\n    public media: App.Media;\n\n    @Output()\n    public mediaChange = new EventEmitter<App.Media>();\n\n    public hash: string;\n    public series: App.Series;\n\n    public form: FormGroup;\n    public seriesItems: Array<SelectionBoxItem> = [];\n    public speakerItems: Array<SelectionBoxItem> = [];\n    public includeItems: Array<SelectionBoxItem> = [];\n    public topicItems: Array<SelectionBoxItem> = [];\n\n    public imageUrl: string;\n    public seriesImageUrl: string;\n    public organizationImageUrl: string;\n\n    constructor(private app: AppService, private route: ActivatedRoute, private notifications: NotificationsService) { }\n\n    public ngOnInit() {\n        this.form = new FormGroup({});\n        this.form.addControl('name', new FormControl(undefined, [Validators.required]));\n        this.form.addControl('date', new FormControl(undefined));\n        this.form.addControl('seriesIds', new FormControl(undefined));\n        this.form.addControl('speakerIds', new FormControl(undefined));\n        this.form.addControl('includeIds', new FormControl(undefined));\n        this.form.addControl('topicIds', new FormControl(undefined));\n        this.form.addControl('description', new FormControl(undefined));\n\n        let series: Array<App.Series> = SeriesManager.sharedInstance.series;\n        let speakers: Array<App.Speaker> = SpeakerManager.sharedInstance.speakers;\n        let topics: Array<App.Topic> = TopicManager.sharedInstance.topics;\n\n        this.seriesItems = series.sort((a, b) => {\n            let A = (a.name || 'Untitled').trim().toLowerCase();\n            let B = (b.name || 'Untitled').trim().toLowerCase();\n            return (A < B ? -1 : (A > B ? 1 : 0));\n        }).map(o => {\n            return {\n                display: o.name || 'Untitled',\n                value: o.id,\n                data: o,\n            };\n        });\n\n        this.speakerItems = speakers.sort((a, b) => {\n            let A = (a.name || 'Untitled').trim().toLowerCase();\n            let B = (b.name || 'Untitled').trim().toLowerCase();\n            return (A < B ? -1 : (A > B ? 1 : 0));\n        }).map(o => {\n            return {\n                display: o.name || 'Untitled',\n                value: o.id,\n                data: o,\n            };\n        });\n\n        let topicsByCategory: { [key: string]: Array<App.Topic> } = {};\n        topics.forEach(o => {\n            if (!topicsByCategory[o.category]) { topicsByCategory[o.category] = []; }\n            topicsByCategory[o.category].push(o);\n        });\n\n        this.topicItems = (Object.keys(topicsByCategory).sort((a, b) => {\n            let A = a.trim().toLowerCase();\n            let B = b.trim().toLowerCase();\n            return (A < B ? -1 : (A > B ? 1 : 0));\n        }).map(key => {\n            return topicsByCategory[key].sort((a, b) => {\n                let A = (a.name || '').trim().toLowerCase();\n                let B = (b.name || '').trim().toLowerCase();\n                return (A < B ? -1 : (A > B ? 1 : 0));\n            }).map((o, index) => {\n                return {\n                    display: o.name,\n                    header: o.category,\n                    value: o.id,\n                    data: o,\n                };\n            });\n        }) as any).flat();\n\n        let feeds: Array<App.Feed> = FeedManager.sharedInstance.feeds.concat();\n        feeds = feeds.map(o => { return { ...o, title: `${o.title || 'Untitled'} - ${o.type === 1 ? 'Audio' : 'Video'} Podcast` }; });\n        feeds.push({ id: -1, title: 'HopeStream Mobile App' } as any);\n        feeds.push({ id: -2, title: 'YouTube' } as any);\n\n        this.includeItems = feeds.sort((a, b) => {\n            let A = a.title.trim().toLowerCase();\n            let B = b.title.trim().toLowerCase();\n            return (A < B ? -1 : (A > B ? 1 : 0));\n        }).map(o => {\n            return {\n                display: o.title,\n                value: o.id,\n                data: o,\n            };\n        });\n\n        this.updateLastKnownIncludeIds();\n\n        this.hash = this.app.hashids.encode(this.media.id);\n        this.series = this.media.seriesId ? this.seriesItems.find(o => o.value === this.media.seriesId).data : undefined;\n\n        this.form.controls.name.setValue(this.media.name);\n        this.form.controls.date.setValue(this.media.date);\n        this.form.controls.seriesIds.setValue(this.media.seriesId ? [this.media.seriesId] : undefined);\n        this.form.controls.speakerIds.setValue(this.media.speakerIds);\n        this.form.controls.includeIds.setValue(this.lastKnownIncludeIds.concat());\n        this.form.controls.topicIds.setValue(this.media.topicIds);\n        this.form.controls.description.setValue(this.media.description);\n\n        const organization = OrganizationManager.sharedInstance.organization;\n        this.imageUrl = this.media.imageUrl ? `${this.media.imageUrl.replace('static.hopestream.com', 'hopestream.s3.amazonaws.com')}?t=${new Date().valueOf()}` : undefined;\n        this.seriesImageUrl = this.series?.thumbnailUrl ? `${this.series.thumbnailUrl.replace('static.hopestream.com', 'hopestream.s3.amazonaws.com')}?t=${new Date().valueOf()}` : undefined;\n        this.organizationImageUrl = organization.thumbnailUrl ? `${organization.thumbnailUrl.replace('static.hopestream.com', 'hopestream.s3.amazonaws.com')}?t=${new Date().valueOf()}` : undefined;\n    }\n\n    private lastKnownIncludeIds: Array<number> = [];\n    private updateLastKnownIncludeIds() {\n        let lastKnownIncludeIds: Array<number> = FeedManager.sharedInstance.feeds.filter(o => o.mediaIds.indexOf(this.media.id) >= 0).map(o => o.id);\n        if (!this.media.hidden) { lastKnownIncludeIds.unshift(-1); }\n        if (this.media.youtubeStatus) { lastKnownIncludeIds.unshift(-2); }\n        this.lastKnownIncludeIds = lastKnownIncludeIds;\n    }\n\n    public saving: boolean = false;\n    public onSave() {\n        let series = (this.form.controls.seriesIds.value || []);\n        let speakers = (this.form.controls.speakerIds.value || []);\n        let topics = (this.form.controls.topicIds.value || []);\n        let includes = (this.form.controls.includeIds.value || []);\n\n        // update media\n        let media: App.MediaUpdate = { id: this.media.id };\n        media.name = this.form.controls.name.value;\n        media.date = this.form.controls.date.value;\n        media.description = this.form.controls.description.value || null;\n        media.seriesId = series.length ? series[0] : null;\n        media.speakerIds = speakers.length ? speakers : null;\n        media.topicIds = topics.length ? topics : null;\n        media.hidden = (includes.indexOf(-1) < 0);\n\n        // very carefully determine if the youtube status needs to be updated\n        const willIncludeInYouTube = !!includes.filter(o => o === -2).length;\n        const didIncludeInYouTube = !!this.lastKnownIncludeIds.filter(o => o === -2).length;\n        if (willIncludeInYouTube !== didIncludeInYouTube) {\n            media.youtubeStatus = willIncludeInYouTube ? (this.media.youtubeId ? 'complete' : 'queued') : null;\n            console.log(\"YouTube Status Changed: \", willIncludeInYouTube ? (this.media.youtubeId ? 'complete' : 'queued') : null);\n        }\n        if (willIncludeInYouTube) { media.youtubeMetadataUpdate = true; }\n\n        // update feeds\n        let before = this.lastKnownIncludeIds.filter(o => o >= 0);\n        let after = includes.filter(o => o >= 0);\n        let remove = before.filter(o => after.indexOf(o) < 0);\n        let add = after.filter(o => before.indexOf(o) < 0);\n\n        let updates: Array<Observable<void>> = remove.map(o => {\n            return this.app.API.removeMediaIdFromFeed({ id: o } as App.Feed, this.media.id);\n        }).concat(add.map(o => {\n            return this.app.API.addMediaIdToFeed({ id: o } as App.Feed, this.media.id);\n        }));\n        if (!updates.length) { updates = [of(1).pipe(map(() => { }))]; }\n\n        this.saving = true;\n        forkJoin(this.app.API.updateMedia(media), updates).pipe(finalize(() => {\n            this.saving = false;\n        })).subscribe(responses => {\n            remove.forEach(o => {\n                let feed = FeedManager.sharedInstance.feeds.find(feed => feed.id === o);\n                feed.mediaIds = feed.mediaIds.filter(o => o !== this.media.id);\n            });\n            add.forEach(o => {\n                let feed = FeedManager.sharedInstance.feeds.find(feed => feed.id === o);\n                feed.mediaIds.push(this.media.id);\n            });\n\n            this.media = responses[0];\n            this.series = this.media.seriesId ? this.seriesItems.find(o => o.value === this.media.seriesId).data : undefined;\n            this.seriesImageUrl = this.series?.thumbnailUrl ? `${this.series.thumbnailUrl.replace('static.hopestream.com', 'hopestream.s3.amazonaws.com')}?t=${new Date().valueOf()}` : undefined;\n            this.updateLastKnownIncludeIds();\n            this.mediaChange.emit(this.media);\n\n            this.notifications.success('Success', 'Media details saved successfully.', { timeOut: 5000 });\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem saving.');\n        });\n    }\n\n    public uploading: File;\n    public progress: number;\n\n    public onImageSelected(event: any) {\n        let file: File = event.target?.files?.length && event.target.files[0] || undefined;\n        if (!file) { return; }\n\n        this.uploading = file;\n        this.progress = 0;\n\n        this.app.API.uploadImageForMedia(this.media, file, progress => {\n            this.progress = progress;\n        }).pipe(finalize(() => {\n            this.uploading = undefined;\n            this.progress = 1;\n        })).subscribe(media => {\n            this.notifications.success('Success', 'Media image updated.', { timeOut: 5000 });\n            this.media = media;\n            this.imageUrl = this.media.imageUrl ? `${this.media.imageUrl.replace('static.hopestream.com', 'hopestream.s3.amazonaws.com')}?t=${new Date().valueOf()}` : undefined;\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem uploading.');\n        });\n    }\n\n    public selectingSeries: boolean = false;\n\n    public onSeriesImageSelected() {\n        this.selectingSeries = true;\n        this.app.API.setMediaImageToSeries(this.media, this.series).pipe(finalize(() => {\n            this.selectingSeries = false;\n        })).subscribe(media => {\n            this.notifications.success('Success', 'Media image updated.', { timeOut: 5000 });\n            this.media = media;\n            this.imageUrl = this.media.imageUrl ? `${this.media.imageUrl.replace('static.hopestream.com', 'hopestream.s3.amazonaws.com')}?t=${new Date().valueOf()}` : undefined;\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem updating.');\n        });\n    }\n\n    public selectingOrganization: boolean = false;\n\n    public onOrganizationImageSelected() {\n        this.selectingOrganization = true;\n        this.app.API.setMediaImageToOrganization(this.media, OrganizationManager.sharedInstance.organization).pipe(finalize(() => {\n            this.selectingOrganization = false;\n        })).subscribe(media => {\n            this.notifications.success('Success', 'Media image updated.', { timeOut: 5000 });\n            this.media = media;\n            this.imageUrl = this.media.imageUrl ? `${this.media.imageUrl.replace('static.hopestream.com', 'hopestream.s3.amazonaws.com')}?t=${new Date().valueOf()}` : undefined;\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem updating.');\n        });\n    }\n}\n","<div class=\"content-section\">\n    <div class=\"title\">Details</div>\n\n    <form [formGroup]=\"form\">\n        <div class=\"column-container\">\n            <div class=\"column\">\n                <div class=\"input-container\">\n                    <div class=\"label\">Name<span class=\"required\">*</span></div>\n                    <input type=\"text\" [formControlName]=\"'name'\" [placeholder]=\"'Untitled'\" />\n                    <app-form-error [control]=\"form.controls.name\" [messages]=\"{ required: 'Name is required.' }\"></app-form-error>\n                </div>\n                <div class=\"input-container\">\n                    <div class=\"label\">Date</div>\n                    <p-calendar [formControlName]=\"'date'\" [showTime]=\"true\" [hourFormat]=\"'12'\" [placeholder]=\"'dd/MM/yyyy hh:mm a'\"></p-calendar>\n                </div>\n                <div class=\"input-container\">\n                    <div class=\"label\">Series</div>\n                    <app-selection-box [items]=\"seriesItems\" [max]=\"1\" [itemTemplate]=\"seriesItemTemplate\" [formControlName]=\"'seriesIds'\" [placeholder]=\"'Add Series...'\"></app-selection-box>\n                    <ng-template let-item=\"item\" #seriesItemTemplate>\n                        <div class=\"series-item-container\">\n                            <div class=\"series-item-image\" [class.placeholder]=\"!item.data.thumbnailUrl\">\n                                <img *ngIf=\"item.data.thumbnailUrl\" [src]=\"item.data.thumbnailUrl\" />\n                            </div>\n                            <div class=\"series-item-label\">{{ item.display }}</div>\n                        </div>\n                    </ng-template>\n                </div>\n                <div class=\"input-container\">\n                    <div class=\"label\">Speakers</div>\n                    <app-selection-box [items]=\"speakerItems\" [max]=\"2\" [itemTemplate]=\"speakerItemTemplate\" [formControlName]=\"'speakerIds'\" [placeholder]=\"'Add Speaker...'\"></app-selection-box>\n                    <ng-template let-item=\"item\" #speakerItemTemplate>\n                        <div class=\"speaker-item-container\">\n                            <div class=\"speaker-item-image\" [class.placeholder]=\"!item.data.thumbnailUrl\">\n                                <img *ngIf=\"item.data.thumbnailUrl\" [src]=\"item.data.thumbnailUrl\" />\n                            </div>\n                            <div class=\"speaker-item-label\">{{ item.display }}</div>\n                        </div>\n                    </ng-template>\n                </div>\n            </div>\n            <div class=\"column\">\n                <div class=\"input-container\">\n                    <div class=\"label\">Included In</div>\n                    <app-selection-box [items]=\"includeItems\" [itemTemplate]=\"includeItemTemplate\" [formControlName]=\"'includeIds'\" [placeholder]=\"'Add To...'\"></app-selection-box>\n                    <ng-template let-item=\"item\" #includeItemTemplate>\n                        <div class=\"include-item-label\">{{ item.display }}</div>\n                    </ng-template>\n                </div>\n                <div class=\"input-container\">\n                    <div class=\"label\">Topics</div>\n                    <app-selection-box [items]=\"topicItems\" [max]=\"3\" [itemTemplate]=\"topicItemTemplate\" [formControlName]=\"'topicIds'\" [placeholder]=\"'Add Topic...'\"></app-selection-box>\n                    <ng-template let-item=\"item\" #topicItemTemplate>\n                        <div class=\"topic-item-label\">{{ item.display }}</div>\n                    </ng-template>\n                </div>\n            </div>\n        </div>\n        <div class=\"input-container\">\n            <div class=\"label\">Description</div>\n            <textarea [formControlName]=\"'description'\" rows=\"6\" [placeholder]=\"'Give a high-level overview of the content of this media file...'\"></textarea>\n        </div>\n    </form>\n\n    <button class=\"button\" [disabled]=\"!form || !form.valid || saving\" (click)=\"onSave()\">Save</button>\n</div>\n\n<div class=\"content-section\">\n    <div class=\"title\">Image</div>\n\n    <div class=\"image-content-container\">\n        <div class=\"image-content-row\">\n            <div class=\"image-content-col image-content-col-third\">\n                <div class=\"image-upload-container\">\n                    <input #input type=\"file\" style=\"display: none\" accept=\"image/jpg,image/jpeg\" (change)=\"onImageSelected($event); input.value = null;\">\n                    <div>Upload an image for this media.</div>\n                    <div>Image must be in <strong>.jpg</strong> format.</div>\n\n                    <ng-container *ngIf=\"!uploading\">\n                        <button class=\"button\" (click)=\"input.click()\">\n                            <fa-icon [icon]=\"['fad', 'cloud-upload']\"></fa-icon>Upload Image\n                        </button>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"uploading\">\n                        <div class=\"label\">Uploading Image</div>\n                        <div class=\"upload-name\">{{ uploading.name }}</div>\n                        <div class=\"progress-bar-container\">\n                            <div class=\"progress-bar\" [style.width.%]=\"progress * 100\"></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n            <div class=\"image-content-col\">\n                <div class=\"image-container\">\n                    <img *ngIf=\"imageUrl\" [src]=\"imageUrl\" />\n                    <div *ngIf=\"!imageUrl\" class=\"image-placeholder\">No image selected.</div>\n                </div>\n            </div>\n        </div>\n        <ng-container *ngIf=\"seriesImageUrl || organizationImageUrl\">\n            <div class=\"image-content-row\">or choose one:</div>\n            <div class=\"image-content-row\">\n                <div class=\"image-content-col image-content-col-third image-selector\" *ngIf=\"seriesImageUrl\">\n                    <div class=\"label\">Series Image</div>\n                    <div class=\"image-container\">\n                        <img [src]=\"seriesImageUrl\" />\n                    </div>\n                    <button class=\"button secondary\" [disabled]=\"selectingSeries\" (click)=\"onSeriesImageSelected()\">Select</button>\n                </div>\n                <div class=\"image-content-col image-content-col-third image-selector\" *ngIf=\"organizationImageUrl\">\n                    <div class=\"label\">Church Image</div>\n                    <div class=\"image-container\">\n                        <img [src]=\"organizationImageUrl\" />\n                    </div>\n                    <button class=\"button secondary\" [disabled]=\"selectingOrganization\" (click)=\"onOrganizationImageSelected()\">Select</button>\n                </div>\n            </div>\n        </ng-container>\n        <div class=\"image-content-row\" *ngIf=\"media.imageUrl\">\n            <div class=\"image-content-col\">\n                <div class=\"title\">Image Links</div>\n                <div class=\"label\">Image</div>\n                <app-copy-box [text]=\"media.imageUrl\"></app-copy-box>\n                <div class=\"label\">Thumbnail</div>\n                <app-copy-box [text]=\"media.thumbnailUrl\"></app-copy-box>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\nimport { AppService } from '@services/app/app.service';\nimport { App } from '@services/app/app.api';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-media-list',\n    templateUrl: './media-list.component.html',\n    styleUrls: ['./media-list.component.scss']\n})\nexport class MediaListComponent {\n    public media: Array<App.Media>;\n\n    constructor(private app: AppService, private router: Router) { }\n\n    public ngOnInit() {\n        this.app.API.getAllMedia().subscribe(media => {\n            this.media = media;\n        });\n    }\n\n    public onAddMedia() {\n        this.router.navigate(['/upload']);\n    }\n}\n","<div class=\"scrollable-region\" infiniteScroll [scrollWindow]=\"false\" [infiniteScrollContainer]=\"'.center-container > .bottom-container'\" [fromRoot]=\"true\" (scrolled)=\"mediaList.onLoadMoreRows()\">\n    <div class=\"header-container\">\n        <div class=\"title\">Media</div>\n        <button class=\"button\" (click)=\"onAddMedia()\">Add Media</button>\n    </div>\n\n    <app-reusable-media-list #mediaList\n        [media]=\"media\">\n    </app-reusable-media-list>\n</div>","import { Component } from \"@angular/core\";\nimport { AppService } from '@services/app/app.service';\nimport { App } from '@services/app/app.api';\nimport { tap, mergeMap } from 'rxjs/operators';\nimport { throwError, Observable, of } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { SeriesManager } from '@services/app/managers/series.manager';\n\n@Component({\n    selector: 'app-media-upload',\n    templateUrl: './media-upload.component.html',\n    styleUrls: ['./media-upload.component.scss']\n})\nexport class MediaUploadComponent {\n    public readonly acceptedFileTypes =\n        '.3g2,.3gp,.4xm,.aac,.ac3,.act,.adf,.adp,.adx,.aea,.afc,.aiff,.alaw,.amr,.anm,.apc,' +\n        '.ape,.aqtitle,.asf,.ass,.ast,.au,.avi,.avr,.avs,.bethsoftvid,.bfi,.bin,.bink,.bit,.bmv,.boa,.brstm,' +\n        '.c93,.caf,.cavsvideo,.cdg,.cdxl,.concat,.data,.daud,.dfa,.dirac,.dnxhd,.dsicin,.dts,.dtshd,.dv,.dv1394,' +\n        '.dxa,.ea,.eac3,.ea_cdata,.epaf,.f32be,.f32le,.f64be,.f64le,.fbdev,.ffm,.ffmetadata,.filmstrip,' +\n        '.film_cpk,.flac,.flic,.flv,.frm,.g722,.g723_1,.g729,.gif,.gsm,.gxf,.h261,.h263,.h264,.hevc,.hls,' +\n        '.applehttp,.hnm,.ico,.idcin,.idf,.iff,.ilbc,.image2,.image2pipe,.ingenient,.ipmovie,.ircam,.iss,.iv8,' +\n        '.ivf,.jacosub,.jv,.latm,.lavfi,.lmlm4,.loas,.lvf,.lxf,.m4a,.m4v,.matroska,.webm,.mgsts,.microdvd,.mj2,' +\n        '.mjpeg,.mlp,.mm,.mmf,.mov,.mp3,.mp4,.mpc,.mpc8,.mpeg,.mpegts,.mpegtsraw,.mpegvideo,.mpl2,.mpsub,' +\n        '.msnwctcp,.mtv,.mulaw,.mv,.mvi,.mxf,.mxg,.nc,.nistsphere,.nsv,.nut,.nuv,.ogg,.oma,.oss,.paf,.pjs,.pmp,' +\n        '.psxstr,.pva,.pvf,.qcp,.r3d,.rawvideo,.realtext,.redspark,.rl2,.rm,.roq,.rpl,.rsd,.rso,.rtp,.rtsp,.s8,' +\n        '.s16be,.s16le,.s24be,.s24le,.s32be,.s32le,.sami,.sap,.sbg,.sdp,.shn,.siff,.smjpeg,.smk,.smush,.sol,.sox,' +\n        '.spdif,.srt,.subviewer,.subviewer1,.swf,.tak,.tedcaptions,.thp,.tiertexseq,.tmv,.truehd,.tta,.tty,.txd,' +\n        '.u8,.u16be,.u16le,.u24be,.u24le,.u32be,.u32le,.v4l2,.vc1,.vc1test,.video4linux2,.vivo,.vmd,.vobsub,.voc,' +\n        '.vplayer,.vqf,.w64,.wav,.wc3movie,.webvtt,.wsaud,.wsvqa,.wtv,.wv,.xa,.xbin,.xmv,.xwma,.yop,.yuv4mpegpipe';\n\n    public mediaId: number;\n    public media: App.Media;\n    public series: App.Series;\n    public shouldShowMediaForm: boolean = false;\n\n    public uploading: File;\n    public progress: number = 0;\n    public complete: boolean = false;\n    public error: boolean = false;\n\n    constructor(private app: AppService, private route: ActivatedRoute) { }\n\n    public ngOnInit() {\n        this.mediaId = parseInt(this.route.snapshot.params.id || '0');\n        if (this.mediaId) {\n            this.app.API.getMedia(this.mediaId).subscribe(media => {\n                this.media = media;\n                this.series = media.seriesId ? SeriesManager.sharedInstance.series.find(o => o.id === media.seriesId) : undefined;\n            });\n        }\n    }\n\n    public onFileSelected(event: any) {\n        console.log(event);\n        if (!event.addedFiles?.length) { return; }\n\n        this.uploading = event.addedFiles[0];\n        this.progress = 0;\n        this.complete = false;\n        this.error = false;\n\n        let createMedia: Observable<App.Media> = this.media ? of(this.media) : (this.mediaId ? this.app.API.getMedia(this.mediaId) : this.app.API.createMedia());\n        createMedia.pipe(mergeMap(media => {\n            this.media = media;\n            this.shouldShowMediaForm = true;\n\n            return this.app.API.uploadFileForMedia(this.media, this.uploading, progress => {\n                this.progress = progress;\n            });\n        }), mergeMap(() => {\n            return this.app.API.updateMediaStatus(this.media, 1);\n        })).subscribe(o => {\n            this.progress = 1;\n            this.complete = true;\n        }, error => {\n            console.log('Error: ', error);\n            this.error = true;\n        });\n    }\n\n    public onRetryUpload() {\n        this.uploading = undefined;\n        this.progress = 0;\n        this.error = false;\n        this.complete = false;\n    }\n}\n","<div class=\"header-container\">\n    <ng-container *ngIf=\"mediaId\">\n        <div class=\"title\">Replace Media</div>\n        <div>\n            You are uploading a replacement for <strong>{{ series ? (series.name || 'Untitled') + ' - ' : ''}}{{ media ? media.name || 'Untitled' : '' }}</strong>.\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"!mediaId\">\n        <div class=\"title\">Add Media</div>\n        <div>\n            You are uploading a new media file.\n        </div>\n    </ng-container>\n</div>\n\n<ng-container *ngIf=\"!uploading\">\n    <ngx-dropzone #drop (change)=\"onFileSelected($event)\" [disabled]=\"uploading\" [multiple]=\"false\" [accept]=\"acceptedFileTypes\">\n        <div class=\"dropzone-message\">\n            <button class=\"button\">Select Media File To Upload</button>\n            <div>or drag and drop a media file here</div>\n        </div>\n    </ngx-dropzone>\n</ng-container>\n\n<div class=\"content-section\" *ngIf=\"uploading\">\n    <div class=\"title\">\n        Media Upload\n        <fa-icon *ngIf=\"complete\" class=\"success\" [icon]=\"['fad', 'check-circle']\"></fa-icon>\n        <fa-icon *ngIf=\"error\" class=\"error\" [icon]=\"['fad', 'exclamation-circle']\"></fa-icon>\n    </div>\n\n    <div class=\"image-content-container\">\n        <div class=\"image-content-row\">\n            <div class=\"image-content-col\">\n                <ng-container *ngIf=\"!complete && !error\">\n                    <div><strong>Your media file is now uploading...</strong></div>\n                    <div>Please remain on this page until the upload has completed. You may update your media details below.</div>\n                </ng-container>\n                <ng-container *ngIf=\"complete\">\n                    <div><strong>Your media file upload is complete!</strong></div>\n                    <div>View the <a [routerLink]=\"['/media', media.id]\">media page</a> to see additional details and status.</div>\n                </ng-container>\n                <ng-container *ngIf=\"error\">\n                    <div><strong>Your media file upload has failed.</strong></div>\n                    <div>Click here to <a (click)=\"onRetryUpload()\">retry the upload</a>.</div>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"image-content-row\" *ngIf=\"!complete && !error\">\n            <div class=\"image-content-col\">\n                <div class=\"image-upload-container\">\n                    <ng-container *ngIf=\"uploading\">\n                        <div class=\"label\">Uploading Media File</div>\n                        <div class=\"upload-name\">{{ uploading.name }}</div>\n                        <div class=\"progress-bar-container\">\n                            <div class=\"progress-bar\" [style.width.%]=\"progress * 100\"></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-container *ngIf=\"shouldShowMediaForm\">\n    <app-media-form [media]=\"media\"></app-media-form>\n</ng-container>","import { Component, LOCALE_ID, Inject, Input, OnChanges } from \"@angular/core\";\nimport { App } from '@services/app/app.api';\nimport { formatDate } from '@angular/common';\nimport { Utility } from '@classes/utility';\nimport { SeriesManager } from '@services/app/managers/series.manager';\nimport { SpeakerManager } from '@services/app/managers/speaker.manager';\n\ninterface MediaListEntry {\n    id: number;\n    date: Date;\n    dateString: string;\n    timeString: string;\n    series: string;\n    name: string;\n    fullName: string;\n    speakers: Array<string>;\n    status: number;\n    statusString: string;\n    statusColor: string;\n    search?: string;\n}\n\n@Component({\n    selector: 'app-reusable-media-list',\n    templateUrl: './reusable-media-list.component.html',\n    styleUrls: ['./reusable-media-list.component.scss']\n})\nexport class ReusableMediaListComponent implements OnChanges {\n    public Utility = Utility;\n\n    @Input()\n    public media: Array<App.Media>;\n\n    private seriesById: { [key: number]: App.Series } = {};\n    private speakerById: { [key: number]: App.Speaker } = {};\n\n    public entries: Array<MediaListEntry> = [];\n    public filtered: Array<MediaListEntry> = [];\n    public loaded: Array<MediaListEntry> = [];\n    public sort: string = 'id';\n    public ascending: boolean = false;\n    public search: string;\n\n    constructor(@Inject(LOCALE_ID) public locale: string) {\n        SeriesManager.sharedInstance.series.forEach(o => this.seriesById[o.id] = o);\n        SpeakerManager.sharedInstance.speakers.forEach(o => this.speakerById[o.id] = o);\n    }\n\n    public ngOnChanges() {\n        this.entries = (this.media || []).map(o => {\n            const series: string = o.seriesId && this.seriesById[o.seriesId] ? this.seriesById[o.seriesId].name : undefined;\n\n            let result: MediaListEntry = {\n                id: o.id,\n                date: o.date,\n                dateString: formatDate(o.date, 'mediumDate', this.locale),\n                timeString: formatDate(o.date, 'EEEE h:mm a', this.locale),\n                series: series,\n                name: o.name || 'Untitled',\n                fullName: `${series ? series + ' - ' : ''}${o.name || 'Untitled'}`,\n                speakers: (o.speakerIds || []).map(o => this.speakerById[o].name),\n                status: o.status,\n                statusString: Utility.StatusToText(o.status),\n                statusColor: '#42C75D',\n            };\n            result.search = `${result.dateString}${result.timeString}${result.fullName}${result.speakers.join()}${result.statusString}`.toLowerCase();\n            return result;\n        });\n\n        this.sort = 'id';\n        this.ascending = false;\n        this.updateEntries();\n    }\n\n    public onLoadMoreRows() {\n        this.loaded = this.loaded.concat(this.filtered.slice(this.loaded.length, this.loaded.length + 30));\n    }\n\n    public onSort(sort: string) {\n        if (sort !== this.sort) {\n            this.sort = sort;\n            this.ascending = true;\n        } else if (!this.ascending) {\n            this.sort = 'id';\n            this.ascending = false;\n        } else {\n            this.ascending = false;\n        }\n\n        this.updateEntries();\n    }\n\n    private readonly SortOptions = {\n        id: (a: MediaListEntry, b: MediaListEntry) => {\n            return a.id - b.id;\n        },\n        date: (a: MediaListEntry, b: MediaListEntry) => {\n            const A = a.date; const B = b.date;\n            return A < B ? -1 : (A > B ? 1 : (a.id - b.id));\n        },\n        name: (a: MediaListEntry, b: MediaListEntry) => {\n            const A = (a.fullName || 'zzz').toLowerCase().trim();\n            const B = (b.fullName || 'zzz').toLowerCase().trim();\n            return A < B ? -1 : (A > B ? 1 : (a.id - b.id));\n        },\n        speakers: (a: MediaListEntry, b: MediaListEntry) => {\n            const A = a.speakers.length ? a.speakers[0].toLowerCase().trim() : 'zzz';\n            const B = b.speakers.length ? b.speakers[0].toLowerCase().trim() : 'zzz';\n            return A < B ? -1 : (A > B ? 1 : (a.id - b.id));\n        },\n        status: (a: MediaListEntry, b: MediaListEntry) => {\n            const A = a.status; const B = b.status;\n            return A < B ? -1 : (A > B ? 1 : (a.id - b.id));\n        },\n    };\n\n    private updateEntries() {\n        const search = (this.search || '').toLowerCase();\n        const comparator = this.SortOptions[this.sort];\n        this.filtered = this.entries.filter(o => !search || o.search.indexOf(search) >= 0).sort(this.ascending ? comparator : (a, b) => -comparator(a, b));\n        this.loaded = this.filtered.slice(0, 30);\n    }\n\n    public onSearchUpdate() {\n        this.updateEntries();\n    }\n}\n","<div class=\"content\">\n    <div class=\"options-container\">\n        <ng-container *ngIf=\"filtered.length\">\n            <div class=\"count\" *ngIf=\"filtered.length === entries.length\">Showing {{ entries.length | number }} {{ entries.length === 1 ? 'media file' : 'media files' }}</div>\n            <div class=\"count\" *ngIf=\"filtered.length !== entries.length\">Showing {{ filtered.length | number }} of {{ entries.length | number }} {{ entries.length === 1 ? 'media file' : 'media files' }}</div>\n        </ng-container>\n        <div class=\"spacer\"></div>\n        <div class=\"search\">\n            <input type=\"text\" [(ngModel)]=\"search\" (ngModelChange)=\"onSearchUpdate()\" [placeholder]=\"'Search...'\" />\n        </div>\n    </div>\n    <div class=\"scrollable-region\" infiniteScroll [scrollWindow]=\"false\" (scrolled)=\"onLoadMoreRows()\">\n        <table>\n            <tr>\n                <th style=\"width: 160px\">\n                    <div class=\"header\">\n                        <div class=\"name\">Date</div>\n                        <app-action-icon\n                            [active]=\"sort === 'date'\"\n                            [icon]=\"sort !== 'date' ? 'sort' : (ascending ? 'sort-up' : 'sort-down')\"\n                            (click)=\"onSort('date')\">\n                        </app-action-icon>\n                    </div>\n                </th>\n                <th>\n                    <div class=\"header\">\n                        <div class=\"name\">Name</div>\n                        <app-action-icon\n                            [active]=\"sort === 'name'\"\n                            [icon]=\"sort !== 'name' ? 'sort' : (ascending ? 'sort-up' : 'sort-down')\"\n                            (click)=\"onSort('name')\">\n                        </app-action-icon>\n                    </div>\n                </th>\n                <th style=\"width: 200px\">\n                    <div class=\"header\">\n                        <div class=\"name\">Speakers</div>\n                        <app-action-icon\n                            [active]=\"sort === 'speakers'\"\n                            [icon]=\"sort !== 'speakers' ? 'sort' : (ascending ? 'sort-up' : 'sort-down')\"\n                            (click)=\"onSort('speakers')\">\n                        </app-action-icon>\n                    </div>\n                </th>\n                <th style=\"width: 140px\">\n                    <div class=\"header\">\n                        <div class=\"name\">Status</div>\n                        <app-action-icon\n                            [active]=\"sort === 'status'\"\n                            [icon]=\"sort !== 'status' ? 'sort' : (ascending ? 'sort-up' : 'sort-down')\"\n                            (click)=\"onSort('status')\">\n                        </app-action-icon>\n                    </div>\n                </th>\n            </tr>\n            <tr *ngFor=\"let entry of loaded\">\n                <td>\n                    <div class=\"date\">{{ entry.dateString }}</div>\n                    <div class=\"time\">{{ entry.timeString }}</div>\n                </td>\n                <td>\n                    <a [routerLink]=\"['/media', entry.id]\">\n                        <ng-container *ngIf=\"entry.series\">\n                            {{ entry.series }} -\n                        </ng-container>\n                        {{ entry.name }}\n                    </a>\n                </td>\n                <td>\n                    <div *ngFor=\"let speaker of entry.speakers\">\n                        {{ speaker }}\n                    </div>\n                </td>\n                <td>\n                    <div class=\"{{ Utility.StatusToClass(entry.status) }}\">\n                        <fa-icon [icon]=\"['fad', Utility.StatusToIcon(entry.status)]\"></fa-icon>\n                        {{ entry.statusString }}\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div class=\"loading-container\" *ngIf=\"!media || !media.length\">\n        <div *ngIf=\"media\">No media available.</div>\n        <app-loading-indicator *ngIf=\"!media\"></app-loading-indicator>\n    </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { AppService } from '@services/app/app.service';\nimport { App } from '@services/app/app.api';\nimport { ActivatedRoute } from '@angular/router';\nimport { finalize, mergeMap, map, tap } from 'rxjs/operators';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { NotificationsService } from 'angular2-notifications';\nimport { OrganizationManager } from '@services/app/managers/organization.manager';\nimport { of } from 'rxjs';\n\n@Component({\n    selector: 'app-organization-detail',\n    templateUrl: './organization-detail.component.html',\n    styleUrls: ['./organization-detail.component.scss']\n})\nexport class OrganizationDetailComponent implements OnInit {\n    public organization: App.Organization;\n    public form: FormGroup;\n    public imageUrl: string;\n\n    constructor(private app: AppService, private route: ActivatedRoute, private notifications: NotificationsService) { }\n\n    public ngOnInit() {\n        this.organization = OrganizationManager.sharedInstance.organization;\n\n        this.form = new FormGroup({});\n        this.form.addControl('name', new FormControl(this.organization.name));\n        this.form.addControl('description', new FormControl(this.organization.description));\n        this.form.addControl('url', new FormControl(this.organization.url));\n\n        this.imageUrl = this.organization.imageUrl ? `${this.organization.imageUrl.replace('static.hopestream.com', 'hopestream.s3.amazonaws.com')}?t=${new Date().valueOf()}` : undefined;\n    }\n\n    public saving: boolean = false;\n    public onSave() {\n        let organization: App.OrganizationUpdate = { id: this.organization.id };\n        organization.name = this.form.controls.name.value;\n        organization.url = this.form.controls.url.value;\n        organization.description = this.form.controls.description.value || null;\n\n        this.saving = true;\n        this.app.API.updateOrganization(organization).pipe(finalize(() => {\n            this.saving = false;\n        })).subscribe(organization => {\n            this.organization = organization;\n            this.notifications.success('Success', 'Organization details saved successfully.', { timeOut: 5000 });\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem saving.');\n        });\n    }\n\n    public uploading: File;\n    public progress: number;\n\n    public onImageSelected(event: any) {\n        let file: File = event.target?.files?.length && event.target.files[0] || undefined;\n        if (!file) { return; }\n\n        this.uploading = file;\n        this.progress = 0;\n\n        this.app.API.uploadImageForOrganization(this.organization, file, progress => {\n            this.progress = progress;\n        }).pipe(finalize(() => {\n            this.uploading = undefined;\n            this.progress = 1;\n        })).subscribe(organization => {\n            this.notifications.success('Success', 'Organization image updated.', { timeOut: 5000 });\n            this.organization = this.app.organizationManager.organization = organization;\n            this.imageUrl = this.organization.imageUrl ? `${this.organization.imageUrl.replace('static.hopestream.com', 'hopestream.s3.amazonaws.com')}?t=${new Date().valueOf()}` : undefined;\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem uploading.');\n        });\n    }\n}\n","<div class=\"header-container\">\n    <div class=\"title\">\n        {{ organization.name || 'Untitled' }}\n    </div>\n</div>\n\n<div class=\"content-section\">\n    <div class=\"title\">Details</div>\n\n    <form [formGroup]=\"form\">\n        <div class=\"column-container\">\n            <div class=\"column\">\n                <div class=\"input-container\">\n                    <div class=\"label\">Name</div>\n                    <input type=\"text\" [formControlName]=\"'name'\" [placeholder]=\"'Untitled'\" />\n                </div>\n            </div>\n            <div class=\"column\">\n                <div class=\"input-container\">\n                    <div class=\"label\">URL</div>\n                    <input type=\"text\" [formControlName]=\"'url'\" [placeholder]=\"'https://hopestream.com'\" />\n                </div>\n            </div>\n        </div>\n        <div class=\"input-container\">\n            <div class=\"label\">Description</div>\n            <textarea [formControlName]=\"'description'\" rows=\"6\" [placeholder]=\"'Give a high-level overview of the church...'\"></textarea>\n        </div>\n    </form>\n\n    <button class=\"button\" [disabled]=\"!form || !form.valid || saving\" (click)=\"onSave()\">Save</button>\n</div>\n\n<div class=\"content-section\">\n    <div class=\"title\">Image</div>\n\n    <div class=\"image-content-container\">\n        <div class=\"image-content-row\">\n            <div class=\"image-content-col image-content-col-third\">\n                <div class=\"image-upload-container\">\n                    <input #input type=\"file\" style=\"display: none\" accept=\"image/jpg,image/jpeg\" (change)=\"onImageSelected($event); input.value = null;\">\n                    <div>Upload an image for this church.</div>\n                    <div>Image must be in <strong>.jpg</strong> format.</div>\n\n                    <ng-container *ngIf=\"!uploading\">\n                        <button class=\"button\" (click)=\"input.click()\">\n                            <fa-icon [icon]=\"['fad', 'cloud-upload']\"></fa-icon>Upload Image\n                        </button>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"uploading\">\n                        <div class=\"label\">Uploading Image</div>\n                        <div class=\"upload-name\">{{ uploading.name }}</div>\n                        <div class=\"progress-bar-container\">\n                            <div class=\"progress-bar\" [style.width.%]=\"progress * 100\"></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n            <div class=\"image-content-col\">\n                <div class=\"image-container\">\n                    <img *ngIf=\"imageUrl\" [src]=\"imageUrl\" />\n                    <div *ngIf=\"!imageUrl\" class=\"image-placeholder\">No image selected.</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"image-content-row\" *ngIf=\"organization.imageUrl\">\n            <div class=\"image-content-col\">\n                <div class=\"title\">Image Links</div>\n                <div class=\"label\">Image</div>\n                <app-copy-box [text]=\"organization.imageUrl\"></app-copy-box>\n                <div class=\"label\">Thumbnail</div>\n                <app-copy-box [text]=\"organization.thumbnailUrl\"></app-copy-box>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BaseComponent } from './base/base.component';\nimport { LoadingGuard } from '@services/loading-guard';\nimport { AuthGuard } from '@services/auth-guard';\nimport { SignInComponent } from './sign-in/sign-in/sign-in.component';\nimport { MediaListComponent } from './media/media-list/media-list.component';\nimport { MediaDetailComponent } from './media/media-detail/media-detail.component';\nimport { OrganizationDetailComponent } from './organization/organization-detail/organization-detail.component';\nimport { SeriesListComponent } from './series/series-list/series-list.component';\nimport { SeriesDetailComponent } from './series/series-detail/series-detail.component';\nimport { SpeakerListComponent } from './speaker/speaker-list/speaker-list.component';\nimport { SpeakerDetailComponent } from './speaker/speaker-detail/speaker-detail.component';\nimport { FeedListComponent } from './feed/feed-list/feed-list.component';\nimport { FeedDetailComponent } from './feed/feed-detail/feed-detail.component';\nimport { MediaUploadComponent } from './media/media-upload/media-upload.component';\nimport { RedirectComponent } from '@common/redirect/redirect.component';\nimport { SettingsComponent } from './settings/settings.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: BaseComponent, canActivate: [LoadingGuard, AuthGuard], canActivateChild: [AuthGuard], children: [\n            { path: 'church', component: OrganizationDetailComponent },\n            { path: '', component: RedirectComponent },\n            { path: 'media', component: MediaListComponent },\n            { path: 'media/:id', component: MediaDetailComponent },\n            { path: 'upload', component: MediaUploadComponent },\n            { path: 'upload/:id', component: MediaUploadComponent },\n            { path: 'series', component: SeriesListComponent },\n            { path: 'series/:id', component: SeriesDetailComponent },\n            { path: 'speakers', component: SpeakerListComponent },\n            { path: 'speakers/:id', component: SpeakerDetailComponent },\n            { path: 'feeds', component: FeedListComponent },\n            { path: 'feeds/:id', component: FeedDetailComponent },\n            { path: 'settings', component: SettingsComponent },\n        ]\n    },\n    { path: 'sign-in', canActivate: [AuthGuard], component: SignInComponent },\n    { path: '**', redirectTo: 'sign-in' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class RoutingModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { AppService } from '@services/app/app.service';\nimport { App } from '@services/app/app.api';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { finalize, mergeMap, tap } from 'rxjs/operators';\nimport { Utility } from '@classes/utility';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { NotificationsService } from 'angular2-notifications';\nimport { forkJoin, of } from 'rxjs';\n\n@Component({\n    selector: 'app-series-detail',\n    templateUrl: './series-detail.component.html',\n    styleUrls: ['./series-detail.component.scss']\n})\nexport class SeriesDetailComponent implements OnInit {\n    public Utility = Utility;\n\n    public loading = true;\n    public series: App.Series;\n    public media: Array<App.Media> = [];\n    public form: FormGroup;\n    public imageUrl: string;\n\n    constructor(\n        private app: AppService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private notifications: NotificationsService) { }\n\n    public ngOnInit() {\n        this.form = new FormGroup({});\n        this.form.addControl('name', new FormControl(undefined));\n        this.form.addControl('description', new FormControl(undefined));\n\n        let id = parseInt(this.route.snapshot.params.id);\n        forkJoin(this.app.API.getSeries(id), this.app.API.getAllMedia()).pipe(finalize(() => {\n            this.loading = false;\n        })).subscribe(responses => {\n            this.series = responses[0];\n            this.media = responses[1].filter(o => o.seriesId === this.series.id);\n            this.form.controls.name.setValue(this.series.name);\n            this.form.controls.description.setValue(this.series.description);\n            this.imageUrl = this.series.imageUrl ? `${this.series.imageUrl.replace('static.hopestream.com', 'hopestream.s3.amazonaws.com')}?t=${new Date().valueOf()}` : undefined;\n        });\n    }\n\n    public saving: boolean = false;\n    public onSave() {\n        let series: App.SeriesUpdate = { id: this.series.id };\n        series.name = this.form.controls.name.value;\n        series.description = this.form.controls.description.value || null;\n\n        this.saving = true;\n        this.app.API.updateSeries(series).pipe(finalize(() => {\n            this.saving = false;\n        })).subscribe(series => {\n            this.series = series;\n            this.notifications.success('Success', 'Series details saved successfully.', { timeOut: 5000 });\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem saving.');\n        });\n    }\n\n    public uploading: File;\n    public progress: number;\n\n    public onImageSelected(event: any) {\n        let file: File = event.target?.files?.length && event.target.files[0] || undefined;\n        if (!file) { return; }\n\n        this.uploading = file;\n        this.progress = 0;\n\n        this.app.API.uploadImageForSeries(this.series, file, progress => {\n            this.progress = progress;\n        }).pipe(finalize(() => {\n            this.uploading = undefined;\n            this.progress = 1;\n        })).subscribe(series => {\n            this.notifications.success('Success', 'Series image updated.', { timeOut: 5000 });\n            this.series = series;\n            this.imageUrl = this.series.imageUrl ? `${this.series.imageUrl.replace('static.hopestream.com', 'hopestream.s3.amazonaws.com')}?t=${new Date().valueOf()}` : undefined;\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem uploading.');\n        });\n    }\n\n    public deleteDialogVisible: boolean = false;\n    public deleting: boolean = false;\n\n    public onDelete() {\n        this.deleting = true;\n        this.app.API.deleteSeries(this.series).pipe(finalize(() => {\n            this.deleting = false;\n        })).subscribe(() => {\n            this.router.navigate(['/series']);\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem deleting.');\n        });\n    }\n}\n","<div class=\"breadcrumb-container\">\n    <a [routerLink]=\"['/series']\">\n        <fa-icon [icon]=\"['fad', 'chevron-left']\"></fa-icon>\n        Back to Series List\n    </a>\n</div>\n\n<ng-container *ngIf=\"!loading\">\n    <div class=\"header-container\">\n        <div class=\"title\">\n            {{ series.name || 'Untitled' }}\n        </div>\n    </div>\n\n    <div class=\"content-section\">\n        <div class=\"title\">Details</div>\n\n        <form [formGroup]=\"form\">\n            <div class=\"column-container\">\n                <div class=\"column\">\n                    <div class=\"input-container\">\n                        <div class=\"label\">Name</div>\n                        <input type=\"text\" [formControlName]=\"'name'\" [placeholder]=\"'Untitled'\" />\n                    </div>\n                </div>\n            </div>\n            <div class=\"input-container\">\n                <div class=\"label\">Description</div>\n                <textarea [formControlName]=\"'description'\" rows=\"6\" [placeholder]=\"'Give a high-level overview of the content of this series...'\"></textarea>\n            </div>\n        </form>\n\n        <button class=\"button\" [disabled]=\"!form || !form.valid || saving\" (click)=\"onSave()\">Save</button>\n    </div>\n\n    <div class=\"content-section\">\n        <div class=\"title\">Image</div>\n\n        <div class=\"image-content-container\">\n            <div class=\"image-content-row\">\n                <div class=\"image-content-col image-content-col-third\">\n                    <div class=\"image-upload-container\">\n                        <input #input type=\"file\" style=\"display: none\" accept=\"image/jpg,image/jpeg\" (change)=\"onImageSelected($event); input.value = null;\">\n                        <div>Upload an image for this media.</div>\n                        <div>Image must be in <strong>.jpg</strong> format.</div>\n\n                        <ng-container *ngIf=\"!uploading\">\n                            <button class=\"button\" (click)=\"input.click()\">\n                                <fa-icon [icon]=\"['fad', 'cloud-upload']\"></fa-icon>Upload Image\n                            </button>\n                        </ng-container>\n\n                        <ng-container *ngIf=\"uploading\">\n                            <div class=\"label\">Uploading Image</div>\n                            <div class=\"upload-name\">{{ uploading.name }}</div>\n                            <div class=\"progress-bar-container\">\n                                <div class=\"progress-bar\" [style.width.%]=\"progress * 100\"></div>\n                            </div>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"image-content-col\">\n                    <div class=\"image-container\">\n                        <img *ngIf=\"imageUrl\" [src]=\"imageUrl\" />\n                        <div *ngIf=\"!imageUrl\" class=\"image-placeholder\">No image selected.</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"image-content-row\" *ngIf=\"series.imageUrl\">\n                <div class=\"image-content-col\">\n                    <div class=\"title\">Image Links</div>\n                    <div class=\"label\">Image</div>\n                    <app-copy-box [text]=\"series.imageUrl\"></app-copy-box>\n                    <div class=\"label\">Thumbnail</div>\n                    <app-copy-box [text]=\"series.thumbnailUrl\"></app-copy-box>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"content-section\">\n        <div class=\"title\">Media</div>\n\n        <app-reusable-media-list #mediaList\n            [media]=\"media\">\n        </app-reusable-media-list>\n    </div>\n\n    <div class=\"content-section content-section-danger\">\n        <div class=\"title\">Danger Zone</div>\n\n        <div class=\"image-content-container\">\n            <div class=\"image-content-row\">\n                <div class=\"image-content-col image-content-col-half\">\n                    <div class=\"title\">Delete Series</div>\n                    <div class=\"image-upload-container\">\n                        <div>Permanently delete this series.</div>\n                        <div style=\"margin-top: 1rem;\"><strong>NOTE:</strong> This will not delete any media entries that are included in this series. This will simply delete the series, and those media records will no longer be associated with this series.</div>\n                        <button class=\"button alert\" (click)=\"deleteDialogVisible = true\">\n                            <fa-icon [icon]=\"['fad', 'trash']\"></fa-icon>Delete Series\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-container>\n\n<p-dialog [(visible)]=\"deleteDialogVisible\" [modal]=\"true\" [dismissableMask]=\"true\" [draggable]=\"false\" [style]=\"{ width: '480px' }\">\n    <p-header>\n        <div class=\"title\">Delete Series</div>\n        <app-action-icon [icon]=\"'times'\" (click)=\"deleteDialogVisible = false\"></app-action-icon>\n    </p-header>\n    <div>\n        <div>Permanently delete <strong>{{ series?.name || 'Untitled' }}</strong>?</div>\n        <div style=\"margin-top: 1rem;\"><strong>NOTE:</strong> This will not delete any media entries that are included in this series. This will simply delete the series, and those media records will no longer be associated with this series.</div>\n    </div>\n    <p-footer>\n        <button class=\"button alert\" [disabled]=\"deleting\" (click)=\"onDelete()\">Delete</button>\n        <button class=\"button secondary hollow\" (click)=\"deleteDialogVisible = false\">Cancel</button>\n        <div class=\"spacer\"></div>\n    </p-footer>\n</p-dialog>","import { Component, LOCALE_ID, Inject } from \"@angular/core\";\nimport { AppService } from '@services/app/app.service';\nimport { App } from '@services/app/app.api';\nimport { Utility } from '@classes/utility';\nimport { finalize } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { NotificationsService } from 'angular2-notifications';\n\ninterface SeriesListEntry {\n    id: number;\n    name: string;\n    thumbnailUrl?: string;\n    search?: string;\n}\n\n@Component({\n    selector: 'app-series-list',\n    templateUrl: './series-list.component.html',\n    styleUrls: ['./series-list.component.scss']\n})\nexport class SeriesListComponent {\n    public Utility = Utility;\n\n    public series: Array<App.Series>;\n\n    public entries: Array<SeriesListEntry> = [];\n    public filtered: Array<SeriesListEntry> = [];\n\n    public loaded: Array<SeriesListEntry> = [];\n    public sort: string = 'id';\n    public ascending: boolean = false;\n    public search: string;\n\n    constructor(\n        @Inject(LOCALE_ID) public locale: string,\n        private app: AppService,\n        private router: Router,\n        private notifications: NotificationsService) { }\n\n    public ngOnInit() {\n        this.app.API.getAllSeries().subscribe(series => {\n            this.series = series;\n\n            this.entries = this.series.map(o => {\n                let result: SeriesListEntry = {\n                    id: o.id,\n                    name: o.name || 'Untitled',\n                    thumbnailUrl: o.thumbnailUrl,\n                };\n                result.search = `${result.name}`.toLowerCase();\n                return result;\n            });\n\n            this.sort = 'id';\n            this.ascending = false;\n            this.updateEntries();\n        });\n    }\n\n    public onLoadMoreRows() {\n        this.loaded = this.loaded.concat(this.filtered.slice(this.loaded.length, this.loaded.length + 30));\n    }\n\n    public onSort(sort: string) {\n        if (sort !== this.sort) {\n            this.sort = sort;\n            this.ascending = true;\n        } else if (!this.ascending) {\n            this.sort = 'id';\n            this.ascending = false;\n        } else {\n            this.ascending = false;\n        }\n\n        this.updateEntries();\n    }\n\n    private readonly SortOptions = {\n        id: (a: SeriesListEntry, b: SeriesListEntry) => {\n            return a.id - b.id;\n        },\n        name: (a: SeriesListEntry, b: SeriesListEntry) => {\n            const A = (a.name || 'zzz').toLowerCase().trim();\n            const B = (b.name || 'zzz').toLowerCase().trim();\n            return A < B ? -1 : (A > B ? 1 : (a.id - b.id));\n        },\n    };\n\n    private updateEntries() {\n        const search = (this.search || '').toLowerCase();\n        const comparator = this.SortOptions[this.sort];\n        this.filtered = this.entries.filter(o => !search || o.search.indexOf(search) >= 0).sort(this.ascending ? comparator : (a, b) => -comparator(a, b));\n        this.loaded = this.filtered.slice(0, 30);\n    }\n\n    public onSearchUpdate() {\n        this.updateEntries();\n    }\n\n    public creating: boolean = false;\n    public onAddSeries() {\n        this.creating = true;\n        this.app.API.createSeries().pipe(finalize(() => {\n            this.creating = false;\n        })).subscribe(series => {\n            this.router.navigate(['/series', series.id]);\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem creating.');\n        });\n    }\n}\n","<div class=\"scrollable-region\" infiniteScroll [scrollWindow]=\"false\" [infiniteScrollContainer]=\"'.center-container > .bottom-container'\" [fromRoot]=\"true\" (scrolled)=\"onLoadMoreRows()\">\n    <div class=\"header-container\">\n        <div class=\"title\">Series</div>\n        <button class=\"button\" [disabled]=\"creating\" (click)=\"onAddSeries()\">Add Series</button>\n    </div>\n\n    <div class=\"content\">\n        <div class=\"options-container\">\n            <ng-container *ngIf=\"filtered.length\">\n                <div class=\"count\" *ngIf=\"filtered.length === entries.length\">Showing {{ entries.length | number }} {{ entries.length === 1 ? 'series' : 'series' }}</div>\n                <div class=\"count\" *ngIf=\"filtered.length !== entries.length\">Showing {{ filtered.length | number }} of {{ entries.length | number }} {{ entries.length === 1 ? 'series' : 'series' }}</div>\n            </ng-container>\n            <div class=\"spacer\"></div>\n            <div class=\"search\">\n                <input type=\"text\" [(ngModel)]=\"search\" (ngModelChange)=\"onSearchUpdate()\" [placeholder]=\"'Search...'\" />\n            </div>\n        </div>\n        <div class=\"table-container\">\n            <table>\n                <tr>\n                    <th style=\"width: 140px\">\n                        <div class=\"header\">\n                            <div class=\"name\">Image</div>\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"header\">\n                            <div class=\"name\">Name</div>\n                            <app-action-icon\n                                [active]=\"sort === 'name'\"\n                                [icon]=\"sort !== 'name' ? 'sort' : (ascending ? 'sort-up' : 'sort-down')\"\n                                (click)=\"onSort('name')\">\n                            </app-action-icon>\n                        </div>\n                    </th>\n                </tr>\n                <tr *ngFor=\"let entry of loaded\">\n                    <td>\n                        <div class=\"image-container\">\n                            <img *ngIf=\"entry.thumbnailUrl\" [src]=\"entry.thumbnailUrl\" />\n                            <div *ngIf=\"!entry.thumbnailUrl\" class=\"image-placeholder\">\n                            </div>\n                        </div>\n                    </td>\n                    <td>\n                        <a [routerLink]=\"['/series', entry.id]\">\n                            {{ entry.name }}\n                        </a>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"loading-container\" *ngIf=\"!series || !series.length\">\n            <div *ngIf=\"series\">No series available.</div>\n            <app-loading-indicator *ngIf=\"!series\"></app-loading-indicator>\n        </div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { App } from '@services/app/app.api';\nimport { UserManager } from '@services/app/managers/user.manager';\nimport { AppService } from '@services/app/app.service';\nimport { finalize } from 'rxjs/operators';\nimport { NotificationsService } from 'angular2-notifications';\nimport { OrganizationManager } from '@services/app/managers/organization.manager';\nimport { environment } from '@environments/environment';\n\ndeclare const Stripe: any;\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n    constructor(private app: AppService, private notifications: NotificationsService) { }\n\n    public ngOnInit() {\n        this.user = UserManager.sharedInstance.user;\n        this.userForm = new FormGroup({});\n        this.userForm.addControl('name', new FormControl(this.user.name, [Validators.required]));\n\n        this.resetPasswordForm();\n\n        Stripe.setPublishableKey(environment.stripeApiKey);\n        this.cardForm = new FormGroup({});\n        this.cardForm.addControl('number', new FormControl(undefined, [Validators.required]));\n        this.cardForm.addControl('month', new FormControl(undefined, [Validators.required]));\n        this.cardForm.addControl('year', new FormControl(undefined, [Validators.required]));\n        this.cardForm.addControl('cvc', new FormControl(undefined, [Validators.required]));\n        this.cardForm.addControl('zip', new FormControl(undefined, [Validators.required]));\n        this.resetCardForm();\n\n        this.app.API.getOrganizationSubscriptionInfo(OrganizationManager.sharedInstance.organization).subscribe(info => {\n            this.plan = (info.plans || []).find(o => o.id === info.account.planId);\n            this.subscription = info.subscription;\n            this.card = info.card;\n            this.resetCardForm();\n        });\n    }\n\n    public user: App.User;\n    public userForm: FormGroup;\n    public savingUserForm: boolean = false;\n\n    public onSaveUserForm() {\n        this.savingUserForm = true;\n        this.app.API.updateUser({ id: this.user.id, name: this.userForm.controls.name.value.trim() }).pipe(finalize(() => {\n            this.savingUserForm = false;\n        })).subscribe(user => {\n            this.user = UserManager.sharedInstance.user = user;\n            this.notifications.success('Success', 'User profile saved successfully.', { timeOut: 5000 });\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem saving.');\n        });\n    }\n\n    public passwordDialogVisible: boolean = false;\n    public passwordForm: FormGroup;\n    public savingPasswordForm: boolean = false;\n\n    private resetPasswordForm() {\n        this.passwordForm = new FormGroup({});\n        this.passwordForm.addControl('password', new FormControl(undefined, [Validators.required, Validators.minLength(8)]));\n        this.passwordForm.addControl('confirm', new FormControl(undefined));\n    }\n\n    public onShowPasswordDialog() {\n        this.resetPasswordForm();\n        this.passwordDialogVisible = true;\n    }\n\n    public onSavePasswordForm() {\n        let password = this.passwordForm.controls.password.value.trim();\n        let confirm = this.passwordForm.controls.confirm.value.trim();\n        if (password !== confirm) {\n            this.notifications.error('Error', 'The password fields must match.');\n            return;\n        }\n\n        this.savingPasswordForm = true;\n        this.app.API.updateUser({ id: this.user.id, password: this.passwordForm.controls.password.value.trim() }).pipe(finalize(() => {\n            this.savingPasswordForm = false;\n        })).subscribe(user => {\n            this.notifications.success('Success', 'Password saved successfully.', { timeOut: 5000 });\n            this.passwordDialogVisible = false;\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem saving.');\n        });\n    }\n\n    public plan: App.StripePlan;\n    public subscription: App.StripeSubscription;\n    public card: App.StripeCard;\n\n    public cardNumberPlaceholder: string;\n    public cardMonthPlaceholder: string;\n    public cardYearPlaceholder: string;\n    public cardCvcPlaceholder: string;\n    public cardZipPlaceholder: string;\n\n    public cardForm: FormGroup;\n    public savingCardForm: boolean = false;\n\n    public onUpdatePaymentInfo() {\n        let number = this.cardForm.controls.number.value;\n        let month = this.cardForm.controls.month.value;\n        let year = this.cardForm.controls.year.value;\n        let cvc = this.cardForm.controls.cvc.value;\n        let zip = this.cardForm.controls.zip.value;\n\n        this.savingCardForm = true;\n        Stripe.card.createToken({\n            'number': number,\n            'exp_month': month,\n            'exp_year': year,\n            'cvc': cvc,\n            'address_zip': zip,\n        }, (status, response) => {\n            if (!status || status >= 300 || status < 200) {\n                this.savingCardForm = false;\n                this.notifications.error('Error', 'Sorry, there was a problem updating your payment info.');\n                return;\n            }\n\n            this.app.API.updateOrganizationPaymentInfo(OrganizationManager.sharedInstance.organization, response.id, this.plan.id).pipe(finalize(() => {\n                this.savingCardForm = false;\n            })).subscribe(info => {\n                this.notifications.success('Success', 'Payment info updated successfully.', { timeOut: 5000 });\n                this.subscription = info.subscription;\n                this.card = info.card;\n                this.resetCardForm();\n            }, error => {\n                this.notifications.error('Error', 'Sorry, there was a problem updating your payment info.');\n            });\n        });\n    }\n\n    public cancelDialogVisible: boolean = false;\n    public canceling: boolean = false;\n\n    public onCancelSubscription() {\n        this.canceling = true;\n        this.app.API.deleteOrganizationPaymentInfo(OrganizationManager.sharedInstance.organization).pipe(finalize(() => {\n            this.canceling = false;\n        })).subscribe(info => {\n            this.notifications.success('Success', 'Your subscription has been canceled.', { timeOut: 5000 });\n            this.subscription = info.subscription;\n            this.card = info.card;\n            this.resetCardForm();\n            this.cancelDialogVisible = false;\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem canceling your subscription.');\n        });\n    }\n\n    private resetCardForm() {\n        this.cardNumberPlaceholder = this.card?.last4 ? `**** **** **** ${this.card.last4}` : `0000 0000 0000 0000`;\n        this.cardMonthPlaceholder = `${this.card?.exp_month || 'MM'}`;\n        this.cardYearPlaceholder = `${this.card?.exp_year || 'YYYY'}`.substring(2);\n        this.cardCvcPlaceholder = this.card ? '***' : '000';\n        this.cardZipPlaceholder = this.card?.address_zip || '00000';\n\n        this.cardForm.controls.number.setValue(undefined);\n        this.cardForm.controls.month.setValue(undefined);\n        this.cardForm.controls.year.setValue(undefined);\n        this.cardForm.controls.cvc.setValue(undefined);\n        this.cardForm.controls.zip.setValue(undefined);\n    }\n}\n","<div class=\"header-container\">\n    <div class=\"title\">Settings</div>\n</div>\n\n<div class=\"content-section\">\n    <div class=\"title\">User Profile</div>\n\n    <div class=\"column-container form\">\n        <div class=\"column\">\n            <form [formGroup]=\"userForm\">\n                <div class=\"input-container\">\n                    <div class=\"label\">Full Name<span class=\"required\">*</span></div>\n                    <input type=\"text\" [formControlName]=\"'name'\" [placeholder]=\"'Full Name'\" />\n                    <app-form-error [control]=\"userForm.controls.name\" [messages]=\"{ required: 'Full name is required.' }\"></app-form-error>\n                </div>\n                <div class=\"input-container\">\n                    <div class=\"label\">E-mail</div>\n                    <input type=\"text\" [value]=\"user.email\" [disabled]=\"true\" />\n                </div>\n                <button class=\"button\" [disabled]=\"!userForm || !userForm.valid || savingUserForm\" (click)=\"onSaveUserForm()\">Save</button>\n            </form>\n        </div>\n\n        <div class=\"column\">\n            <div class=\"input-container\">\n                <div class=\"label\">Password</div>\n                <input type=\"password\" value=\"********\" [disabled]=\"true\" />\n            </div>\n            <button class=\"button\" (click)=\"onShowPasswordDialog()\">Change Password</button>\n        </div>\n    </div>\n</div>\n\n<p-dialog [(visible)]=\"passwordDialogVisible\" [modal]=\"true\" [dismissableMask]=\"true\" [draggable]=\"false\" [style]=\"{ width: '480px' }\">\n    <p-header>\n        <div class=\"title\">Change Password</div>\n        <app-action-icon [icon]=\"'times'\" (click)=\"passwordDialogVisible = false\"></app-action-icon>\n    </p-header>\n    <div class=\"column-container form\">\n        <div class=\"column column-full\">\n            <form [formGroup]=\"passwordForm\">\n                <div class=\"input-container\">\n                    <div class=\"label\">New Password (8+ Characters)</div>\n                    <input type=\"password\" [formControlName]=\"'password'\" [placeholder]=\"'New Password'\" />\n                    <app-form-error [control]=\"passwordForm.controls.password\" [messages]=\"{ minlength: 'New password must be 8 characters long.' }\"></app-form-error>\n                </div>\n                <div class=\"input-container\">\n                    <div class=\"label\">Confirm Password</div>\n                    <input type=\"password\" [formControlName]=\"'confirm'\" [placeholder]=\"'Confirm Password'\" />\n                </div>\n            </form>\n        </div>\n    </div>\n    <p-footer>\n        <button class=\"button\" [disabled]=\"!passwordForm || !passwordForm.valid || savingPasswordForm\" (click)=\"onSavePasswordForm()\">Change Password</button>\n        <button class=\"button secondary hollow\" (click)=\"passwordDialogVisible = false\">Cancel</button>\n        <div class=\"spacer\"></div>\n    </p-footer>\n</p-dialog>\n\n<!-- \n<div class=\"content-section\">\n    <div class=\"title\">Third-Party Auth</div>\n\n    <div class=\"column-container\">\n        <div class=\"column\">\n        </div>\n\n        <div class=\"column\">\n        </div>\n    </div>\n</div> \n-->\n\n<div class=\"content-section\">\n    <div class=\"title\">Subscription</div>\n\n    <div class=\"column-container\">\n        <div class=\"column subscription-info\">\n            <ng-container *ngIf=\"plan\">\n                <div class=\"plan-name\"><strong>{{ plan.nickname || 'Untitled' }}</strong></div>\n                <div class=\"plan-cost\">${{ plan.amount / 100 | number }} / mo</div>\n\n                <ng-container *ngIf=\"subscription?.status !== 'active'\">\n                    <div class=\"plan-active red\">Your account has expired.</div>\n                </ng-container>\n\n                <ng-container *ngIf=\"subscription?.status === 'active'\">\n                    <div class=\"plan-active\">Your account is currently active.</div>\n                    <div class=\"plan-billing red\" *ngIf=\"subscription.cancel_at_period_end\">It will expire on {{ subscription.current_period_end * 1000 | date }}.</div>\n                    <div class=\"plan-billing\" *ngIf=\"!subscription.cancel_at_period_end\">It will renew on {{ subscription.current_period_end * 1000 | date }}.</div>\n                    <button class=\"button secondary\" *ngIf=\"!subscription.cancel_at_period_end\" (click)=\"cancelDialogVisible = true\">Cancel Subscription</button>\n                </ng-container>\n            </ng-container>\n        </div>\n\n        <div class=\"column\">\n            <form [formGroup]=\"cardForm\">\n                <div class=\"credit-card-form\">\n                    <div class=\"row\">\n                        <div class=\"col-4\">\n                            <div class=\"label\">Card Number</div>\n                            <input type=\"text\" [formControlName]=\"'number'\" [placeholder]=\"cardNumberPlaceholder\" />\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-2\">\n                            <div class=\"label\">Expiration</div>\n                            <div class=\"expiration\">\n                                <input type=\"text\" [formControlName]=\"'month'\" [placeholder]=\"cardMonthPlaceholder\" />\n                                <div class=\"slash\">/</div>\n                                <input type=\"text\" [formControlName]=\"'year'\" [placeholder]=\"cardYearPlaceholder\" />\n                            </div>\n                        </div>\n                        <div class=\"col-1\">\n                            <div class=\"label\">CVC</div>\n                            <input type=\"text\" [formControlName]=\"'cvc'\" [placeholder]=\"cardCvcPlaceholder\" />\n                        </div>\n                        <div class=\"col-1\">\n                            <div class=\"label\">Postal Code</div>\n                            <input type=\"text\" [formControlName]=\"'zip'\" [placeholder]=\"cardZipPlaceholder\" />\n                        </div>\n                    </div>\n                </div>\n\n                <button class=\"button\" [disabled]=\"!cardForm?.valid || savingCardForm\" (click)=\"onUpdatePaymentInfo()\">Update Payment Info</button>\n            </form>\n        </div>\n    </div>\n</div>\n\n<p-dialog [(visible)]=\"cancelDialogVisible\" [modal]=\"true\" [dismissableMask]=\"true\" [draggable]=\"false\" [style]=\"{ width: '480px' }\">\n    <p-header>\n        <div class=\"title\">Cancel Subscription</div>\n        <app-action-icon [icon]=\"'times'\" (click)=\"cancelDialogVisible = false\"></app-action-icon>\n    </p-header>\n    Are you sure you want to cancel your subscription?\n    <p-footer>\n        <button class=\"button alert\" [disabled]=\"canceling\" (click)=\"onCancelSubscription()\">Cancel Subscription</button>\n        <button class=\"button secondary hollow\" (click)=\"cancelDialogVisible = false\">Cancel</button>\n        <div class=\"spacer\"></div>\n    </p-footer>\n</p-dialog>","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'app-sidebar',\n    templateUrl: 'sidebar.component.html',\n    styleUrls: ['sidebar.component.scss']\n})\nexport class SidebarComponent {\n\n}\n","SIDEBAR!","import { Component } from \"@angular/core\";\nimport { finalize } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\nimport { NotificationsService } from 'angular2-notifications';\nimport { StateService } from '@services/state.service';\nimport { Validators } from '@angular/forms';\nimport { AuthService } from \"@services/auth.service\";\n\n@Component({\n    selector: 'app-sign-in',\n    templateUrl: './sign-in.component.html',\n    styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent {\n    public visible: number = 0;\n    public form: FormGroup;\n    public loading: boolean = false;\n\n    constructor(private state: StateService, public auth: AuthService, private notifications: NotificationsService) {\n        this.form = new FormGroup({});\n        this.form.addControl('name', new FormControl('', [Validators.required]));\n        this.form.addControl('email', new FormControl('', [Validators.required]));\n        this.form.addControl('password', new FormControl('', [Validators.required, Validators.minLength(8)]));\n    }\n\n    public onSignIn() {\n        this.loading = true;\n        this.state.login(this.form.controls['email'].value.trim(), this.form.controls['password'].value).pipe(finalize(() => {\n            this.loading = false;\n        })).subscribe(user => { }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem logging in');\n        });\n    }\n\n    public onSignUp() {\n\n    }\n\n    public onResetPassword() {\n        this.loading = true;\n        this.auth.userForgotPassword(this.form.controls.email.value.trim()).pipe(finalize(() => {\n            this.loading = false;\n        })).subscribe(() => {\n            this.visible = 0;\n            this.notifications.success('Success', 'You will receive an e-mail with instructions to reset your password.', { timeOut: 5000 });\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem logging in');\n        });\n    }\n}\n","<div [setTitle]=\"''\" class=\"container\">\n    <div class=\"title-container\">\n        <img src=\"assets/images/hopestream-logo.png\">\n        <div>HopeStream</div>\n    </div>\n    <div class=\"form-container\">\n        <ng-container *ngIf=\"visible === 0\">\n            <form [formGroup]=\"form\" (submit)=\"onSignIn()\" novalidate>\n                <input type=\"text\" formControlName=\"email\" name=\"email\" placeholder=\"E-mail\" />\n                <input type=\"password\" formControlName=\"password\" name=\"password\" placeholder=\"Password\" />\n                <button type=\"submit\" class=\"button\" [disabled]=\"loading\">Log in</button>\n                <a class=\"forgot-password\" (click)=\"visible = 2\">Forgot password?</a>\n            </form>\n        </ng-container>\n        <ng-container *ngIf=\"visible === 1\">\n            <!-- <form [formGroup]=\"form\" (submit)=\"onSignUp()\" novalidate>\n                <input type=\"text\" formControlName=\"name\" name=\"name\" placeholder=\"Full Name\" />\n                <input type=\"text\" formControlName=\"email\" name=\"email\" placeholder=\"E-mail\" />\n                <input type=\"password\" formControlName=\"password\" name=\"password\" placeholder=\"Password\" />\n                <button type=\"submit\" class=\"button\" [disabled]=\"loading\">Sign up</button>\n                <div class=\"legal-text\">By signing up, you agree to our Term, Data Policy and Cookies Policy.</div>\n            </form> -->\n            <div><strong>We'd love to see your church on HopeStream!</strong></div><br />\n            <div>Please submit a request to <a href=\"mailto:admin@hopestream.com\">admin@hopestream.com</a> to get started.</div>\n        </ng-container>\n        <ng-container *ngIf=\"visible === 2\">\n            <form [formGroup]=\"form\" (submit)=\"onResetPassword()\" novalidate>\n                <input type=\"text\" formControlName=\"email\" name=\"email\" placeholder=\"E-mail\" />\n                <button type=\"submit\" class=\"button\" [disabled]=\"loading\">Reset</button>\n                <div class=\"reset-text\">Please enter the e-mail address associated with your account. You will receive an e-mail with instructions to reset your password.</div>\n            </form>\n        </ng-container>\n    </div>\n    <div class=\"option-container\">\n        <ng-container *ngIf=\"visible === 0\">\n            Don't have an account yet?<br />\n            <a (click)=\"visible = 1\">Sign up</a>\n        </ng-container>\n        <ng-container *ngIf=\"visible === 1\">\n            Already have an account?<br />\n            <a (click)=\"visible = 0\">Log in</a>\n        </ng-container>\n        <ng-container *ngIf=\"visible === 2\">\n            <a (click)=\"visible = 0\">Back to login</a>\n        </ng-container>\n    </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { AppService } from '@services/app/app.service';\nimport { App } from '@services/app/app.api';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { finalize, mergeMap, tap } from 'rxjs/operators';\nimport { Utility } from '@classes/utility';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { NotificationsService } from 'angular2-notifications';\nimport { forkJoin, of } from 'rxjs';\n\n@Component({\n    selector: 'app-speaker-detail',\n    templateUrl: './speaker-detail.component.html',\n    styleUrls: ['./speaker-detail.component.scss']\n})\nexport class SpeakerDetailComponent implements OnInit {\n    public Utility = Utility;\n\n    public loading = true;\n    public speaker: App.Speaker;\n    public media: Array<App.Media> = [];\n    public form: FormGroup;\n    public imageUrl: string;\n\n    constructor(\n        private app: AppService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private notifications: NotificationsService) { }\n\n    public ngOnInit() {\n        this.form = new FormGroup({});\n        this.form.addControl('name', new FormControl(undefined));\n        this.form.addControl('description', new FormControl(undefined));\n\n        let id = parseInt(this.route.snapshot.params.id);\n        forkJoin(this.app.API.getSpeaker(id), this.app.API.getAllMedia()).pipe(finalize(() => {\n            this.loading = false;\n        })).subscribe(responses => {\n            this.speaker = responses[0];\n            this.media = responses[1].filter(o => (o.speakerIds || []).indexOf(this.speaker.id) >= 0);\n            this.form.controls.name.setValue(this.speaker.name);\n            this.form.controls.description.setValue(this.speaker.description);\n            this.imageUrl = this.speaker.imageUrl ? `${this.speaker.imageUrl.replace('static.hopestream.com', 'hopestream.s3.amazonaws.com')}?t=${new Date().valueOf()}` : undefined;\n        });\n    }\n\n    public saving: boolean = false;\n    public onSave() {\n        let speaker: App.SpeakerUpdate = { id: this.speaker.id };\n        speaker.name = this.form.controls.name.value;\n        speaker.description = this.form.controls.description.value || null;\n\n        this.saving = true;\n        this.app.API.updateSpeaker(speaker).pipe(finalize(() => {\n            this.saving = false;\n        })).subscribe(speaker => {\n            this.speaker = speaker;\n            this.notifications.success('Success', 'Speaker details saved successfully.', { timeOut: 5000 });\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem saving.');\n        });\n    }\n\n    public uploading: File;\n    public progress: number;\n\n    public onImageSelected(event: any) {\n        let file: File = event.target?.files?.length && event.target.files[0] || undefined;\n        if (!file) { return; }\n\n        this.uploading = file;\n        this.progress = 0;\n\n        this.app.API.uploadImageForSpeaker(this.speaker, file, progress => {\n            this.progress = progress;\n        }).pipe(finalize(() => {\n            this.uploading = undefined;\n            this.progress = 1;\n        })).subscribe(speaker => {\n            this.notifications.success('Success', 'Speaker image updated.', { timeOut: 5000 });\n            this.speaker = speaker;\n            this.imageUrl = this.speaker.imageUrl ? `${this.speaker.imageUrl.replace('static.hopestream.com', 'hopestream.s3.amazonaws.com')}?t=${new Date().valueOf()}` : undefined;\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem uploading.');\n        });\n    }\n\n    public deleteDialogVisible: boolean = false;\n    public deleting: boolean = false;\n\n    public onDelete() {\n        this.deleting = true;\n        this.app.API.deleteSpeaker(this.speaker).pipe(finalize(() => {\n            this.deleting = false;\n        })).subscribe(() => {\n            this.router.navigate(['/speakers']);\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem deleting.');\n        });\n    }\n}\n","<div class=\"breadcrumb-container\">\n    <a [routerLink]=\"['/speakers']\">\n        <fa-icon [icon]=\"['fad', 'chevron-left']\"></fa-icon>\n        Back to Speaker List\n    </a>\n</div>\n\n<ng-container *ngIf=\"!loading\">\n    <div class=\"header-container\">\n        <div class=\"title\">\n            {{ speaker.name || 'Untitled' }}\n        </div>\n    </div>\n\n    <div class=\"content-section\">\n        <div class=\"title\">Details</div>\n\n        <form [formGroup]=\"form\">\n            <div class=\"column-container\">\n                <div class=\"column\">\n                    <div class=\"input-container\">\n                        <div class=\"label\">Name</div>\n                        <input type=\"text\" [formControlName]=\"'name'\" [placeholder]=\"'Untitled'\" />\n                    </div>\n                </div>\n            </div>\n            <div class=\"input-container\">\n                <div class=\"label\">Description</div>\n                <textarea [formControlName]=\"'description'\" rows=\"6\" [placeholder]=\"'Give a high-level overview of the content of this speaker...'\"></textarea>\n            </div>\n        </form>\n\n        <button class=\"button\" [disabled]=\"!form || !form.valid || saving\" (click)=\"onSave()\">Save</button>\n    </div>\n\n    <div class=\"content-section\">\n        <div class=\"title\">Image</div>\n\n        <div class=\"image-content-container\">\n            <div class=\"image-content-row\">\n                <div class=\"image-content-col image-content-col-third\">\n                    <div class=\"image-upload-container\">\n                        <input #input type=\"file\" style=\"display: none\" accept=\"image/jpg,image/jpeg\" (change)=\"onImageSelected($event); input.value = null;\">\n                        <div>Upload an image for this media.</div>\n                        <div>Image must be in <strong>.jpg</strong> format.</div>\n\n                        <ng-container *ngIf=\"!uploading\">\n                            <button class=\"button\" (click)=\"input.click()\">\n                                <fa-icon [icon]=\"['fad', 'cloud-upload']\"></fa-icon>Upload Image\n                            </button>\n                        </ng-container>\n\n                        <ng-container *ngIf=\"uploading\">\n                            <div class=\"label\">Uploading Image</div>\n                            <div class=\"upload-name\">{{ uploading.name }}</div>\n                            <div class=\"progress-bar-container\">\n                                <div class=\"progress-bar\" [style.width.%]=\"progress * 100\"></div>\n                            </div>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"image-content-col\">\n                    <div class=\"image-container\">\n                        <img *ngIf=\"imageUrl\" [src]=\"imageUrl\" />\n                        <div *ngIf=\"!imageUrl\" class=\"image-placeholder\">No image selected.</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"image-content-row\" *ngIf=\"speaker.imageUrl\">\n                <div class=\"image-content-col\">\n                    <div class=\"title\">Image Links</div>\n                    <div class=\"label\">Image</div>\n                    <app-copy-box [text]=\"speaker.imageUrl\"></app-copy-box>\n                    <div class=\"label\">Thumbnail</div>\n                    <app-copy-box [text]=\"speaker.thumbnailUrl\"></app-copy-box>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"content-section\">\n        <div class=\"title\">Media</div>\n\n        <app-reusable-media-list #mediaList\n            [media]=\"media\">\n        </app-reusable-media-list>\n    </div>\n\n    <div class=\"content-section content-section-danger\">\n        <div class=\"title\">Danger Zone</div>\n\n        <div class=\"image-content-container\">\n            <div class=\"image-content-row\">\n                <div class=\"image-content-col image-content-col-half\">\n                    <div class=\"title\">Delete Speaker</div>\n                    <div class=\"image-upload-container\">\n                        <div>Permanently delete this speaker.</div>\n                        <div style=\"margin-top: 1rem;\"><strong>NOTE:</strong> This will not delete any media entries that are by this speaker. This will simply delete the speaker, and those media records will no longer be associated with this speaker.</div>\n                        <button class=\"button alert\" (click)=\"deleteDialogVisible = true\">\n                            <fa-icon [icon]=\"['fad', 'trash']\"></fa-icon>Delete Speaker\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-container>\n\n<p-dialog [(visible)]=\"deleteDialogVisible\" [modal]=\"true\" [dismissableMask]=\"true\" [draggable]=\"false\" [style]=\"{ width: '480px' }\">\n    <p-header>\n        <div class=\"title\">Delete Speaker</div>\n        <app-action-icon [icon]=\"'times'\" (click)=\"deleteDialogVisible = false\"></app-action-icon>\n    </p-header>\n    <div>\n        <div>Permanently delete <strong>{{ speaker?.name || 'Untitled' }}</strong>?</div>\n        <div style=\"margin-top: 1rem;\"><strong>NOTE:</strong> This will not delete any media entries that are by this speaker. This will simply delete the speaker, and those media records will no longer be associated with this speaker.</div>\n    </div>\n    <p-footer>\n        <button class=\"button alert\" [disabled]=\"deleting\" (click)=\"onDelete()\">Delete</button>\n        <button class=\"button secondary hollow\" (click)=\"deleteDialogVisible = false\">Cancel</button>\n        <div class=\"spacer\"></div>\n    </p-footer>\n</p-dialog>","import { Component, LOCALE_ID, Inject } from \"@angular/core\";\nimport { AppService } from '@services/app/app.service';\nimport { App } from '@services/app/app.api';\nimport { Utility } from '@classes/utility';\nimport { finalize } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { NotificationsService } from 'angular2-notifications';\n\ninterface SpeakerListEntry {\n    id: number;\n    name: string;\n    thumbnailUrl?: string;\n    search?: string;\n}\n\n@Component({\n    selector: 'app-speaker-list',\n    templateUrl: './speaker-list.component.html',\n    styleUrls: ['./speaker-list.component.scss']\n})\nexport class SpeakerListComponent {\n    public Utility = Utility;\n\n    public speakers: Array<App.Speaker>;\n\n    public entries: Array<SpeakerListEntry> = [];\n    public filtered: Array<SpeakerListEntry> = [];\n\n    public loaded: Array<SpeakerListEntry> = [];\n    public sort: string = 'id';\n    public ascending: boolean = false;\n    public search: string;\n\n    constructor(\n        @Inject(LOCALE_ID) public locale: string,\n        private app: AppService,\n        private router: Router,\n        private notifications: NotificationsService) { }\n\n    public ngOnInit() {\n        this.app.API.getAllSpeakers().subscribe(speakers => {\n            this.speakers = speakers;\n\n            this.entries = this.speakers.map(o => {\n                let result: SpeakerListEntry = {\n                    id: o.id,\n                    name: o.name || 'Untitled',\n                    thumbnailUrl: o.thumbnailUrl,\n                };\n                result.search = `${result.name}`.toLowerCase();\n                return result;\n            });\n\n            this.sort = 'name';\n            this.ascending = true;\n            this.updateEntries();\n        });\n    }\n\n    public onLoadMoreRows() {\n        this.loaded = this.loaded.concat(this.filtered.slice(this.loaded.length, this.loaded.length + 30));\n    }\n\n    public onSort(sort: string) {\n        if (sort !== this.sort) {\n            this.sort = sort;\n            this.ascending = true;\n        } else if (!this.ascending) {\n            this.sort = 'id';\n            this.ascending = false;\n        } else {\n            this.ascending = false;\n        }\n\n        this.updateEntries();\n    }\n\n    private readonly SortOptions = {\n        id: (a: SpeakerListEntry, b: SpeakerListEntry) => {\n            return a.id - b.id;\n        },\n        name: (a: SpeakerListEntry, b: SpeakerListEntry) => {\n            const A = (a.name || 'zzz').toLowerCase().trim();\n            const B = (b.name || 'zzz').toLowerCase().trim();\n            return A < B ? -1 : (A > B ? 1 : (a.id - b.id));\n        },\n    };\n\n    private updateEntries() {\n        const search = (this.search || '').toLowerCase();\n        const comparator = this.SortOptions[this.sort];\n        this.filtered = this.entries.filter(o => !search || o.search.indexOf(search) >= 0).sort(this.ascending ? comparator : (a, b) => -comparator(a, b));\n        this.loaded = this.filtered.slice(0, 30);\n    }\n\n    public onSearchUpdate() {\n        this.updateEntries();\n    }\n\n    public creating: boolean = false;\n    public onAddSpeaker() {\n        this.creating = true;\n        this.app.API.createSpeaker().pipe(finalize(() => {\n            this.creating = false;\n        })).subscribe(speaker => {\n            this.router.navigate(['/speakers', speaker.id]);\n        }, error => {\n            this.notifications.error('Error', 'Sorry, there was a problem creating.');\n        });\n    }\n}\n","<div class=\"scrollable-region\" infiniteScroll [scrollWindow]=\"false\" [infiniteScrollContainer]=\"'.center-container > .bottom-container'\" [fromRoot]=\"true\" (scrolled)=\"onLoadMoreRows()\">\n    <div class=\"header-container\">\n        <div class=\"title\">Speakers</div>\n        <button class=\"button\" [disabled]=\"creating\" (click)=\"onAddSpeaker()\">Add Speaker</button>\n    </div>\n\n    <div class=\"content\">\n        <div class=\"options-container\">\n            <ng-container *ngIf=\"filtered.length\">\n                <div class=\"count\" *ngIf=\"filtered.length === entries.length\">Showing {{ entries.length | number }} {{ entries.length === 1 ? 'speaker' : 'speakers' }}</div>\n                <div class=\"count\" *ngIf=\"filtered.length !== entries.length\">Showing {{ filtered.length | number }} of {{ entries.length | number }} {{ entries.length === 1 ? 'speaker' : 'speakers' }}</div>\n            </ng-container>\n            <div class=\"spacer\"></div>\n            <div class=\"search\">\n                <input type=\"text\" [(ngModel)]=\"search\" (ngModelChange)=\"onSearchUpdate()\" [placeholder]=\"'Search...'\" />\n            </div>\n        </div>\n        <div class=\"table-container\">\n            <table>\n                <tr>\n                    <th style=\"width: 140px\">\n                        <div class=\"header\">\n                            <div class=\"name\">Image</div>\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"header\">\n                            <div class=\"name\">Name</div>\n                            <app-action-icon\n                                [active]=\"sort === 'name'\"\n                                [icon]=\"sort !== 'name' ? 'sort' : (ascending ? 'sort-up' : 'sort-down')\"\n                                (click)=\"onSort('name')\">\n                            </app-action-icon>\n                        </div>\n                    </th>\n                </tr>\n                <tr *ngFor=\"let entry of loaded\">\n                    <td>\n                        <div class=\"image-container\">\n                            <img *ngIf=\"entry.thumbnailUrl\" [src]=\"entry.thumbnailUrl\" />\n                            <div *ngIf=\"!entry.thumbnailUrl\" class=\"image-placeholder\">\n                            </div>\n                        </div>\n                    </td>\n                    <td>\n                        <a [routerLink]=\"['/speakers', entry.id]\">\n                            {{ entry.name }}\n                        </a>\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"loading-container\" *ngIf=\"!speakers || !speakers.length\">\n            <div *ngIf=\"speakers\">No speakers available.</div>\n            <app-loading-indicator *ngIf=\"!speakers\"></app-loading-indicator>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiUrl: 'https://api.hopestream.com',\n    // apiUrl: 'http://localhost:3000',\n    staticUrl: 'https://static.hopestream.com/',\n    playerUrl: 'https://static.hopestream.com/player.html',\n    stripeApiKey: 'pk_test_x2kY74iS2XDx0tyVfnq2Yq5c0007cJy93d'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nif (document.body.childNodes[0].nodeName.toLowerCase() === 'app-root') {\n    platformBrowserDynamic().bootstrapModule(AppModule)\n        .catch(err => console.error(err));\n}\n"]}